{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1","program":"/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parity_scale_codec","--edition=2018","/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bitvec\"","--cfg","feature=\"chain-error\"","--cfg","feature=\"derive\"","--cfg","feature=\"full\"","--cfg","feature=\"parity-scale-codec-derive\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=82cf01292b2737e4","-C","extra-filename=-82cf01292b2737e4","--out-dir","/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","-L","dependency=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","--extern","arrayvec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libarrayvec-7b250c241b76df5b.rmeta","--extern","bitvec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libbitvec-e8dd79f41c352801.rmeta","--extern","byte_slice_cast=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libbyte_slice_cast-1bd78a18d5167dac.rmeta","--extern","parity_scale_codec_derive=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libparity_scale_codec_derive-7011e268fdbef5ec.so","--extern","serde=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libserde-176d00028d140c10.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libparity_scale_codec-82cf01292b2737e4.rmeta"},"prelude":{"crate_id":{"name":"parity_scale_codec","disambiguator":[9863673375670885385,13575924348645702016]},"crate_root":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src","external_crates":[{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[12287734400278992213,9757486750001437063]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","num":20,"id":{"name":"arrayvec","disambiguator":[10892931398947536880,12549142608372466002]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[709702439622045722,10712509937866309499]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","num":22,"id":{"name":"serde","disambiguator":[1013328755442281475,12414158929771731165]}},{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","num":23,"id":{"name":"serde_derive","disambiguator":[18017531714661946146,12785885005030363355]}}],"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":603,"byte_end":10213,"line_start":15,"line_end":291,"column_start":1,"column_end":46}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9230,"byte_end":9231,"line_start":250,"line_end":250,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"Decode, Encode","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":72},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9303,"byte_end":9308,"line_start":255,"line_end":255,"column_start":15,"column_end":20},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5996},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9324,"byte_end":9327,"line_start":256,"line_end":256,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9324,"byte_end":9327,"line_start":256,"line_end":256,"column_start":15,"column_end":18},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5157},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9343,"byte_end":9349,"line_start":257,"line_end":257,"column_start":15,"column_end":21},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":496},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9365,"byte_end":9371,"line_start":258,"line_end":258,"column_start":15,"column_end":21},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":997},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9387,"byte_end":9398,"line_start":259,"line_end":259,"column_start":15,"column_end":26},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":7168},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9414,"byte_end":9418,"line_start":260,"line_end":260,"column_start":15,"column_end":19},"alias_span":null,"name":"sync","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4261},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9434,"byte_end":9436,"line_start":261,"line_end":261,"column_start":15,"column_end":17},"alias_span":null,"name":"rc","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":2457},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9687,"byte_end":9692,"line_start":278,"line_end":278,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9718,"byte_end":9723,"line_start":280,"line_end":280,"column_start":2,"column_end":7},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9725,"byte_end":9731,"line_start":280,"line_end":280,"column_start":9,"column_end":15},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9733,"byte_end":9739,"line_start":280,"line_end":280,"column_start":17,"column_end":23},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9741,"byte_end":9747,"line_start":280,"line_end":280,"column_start":25,"column_end":31},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9749,"byte_end":9754,"line_start":280,"line_end":280,"column_start":33,"column_end":38},"alias_span":null,"name":"Codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9756,"byte_end":9767,"line_start":280,"line_end":280,"column_start":40,"column_end":51},"alias_span":null,"name":"EncodeAsRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9769,"byte_end":9786,"line_start":280,"line_end":280,"column_start":53,"column_end":70},"alias_span":null,"name":"WrapperTypeEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9788,"byte_end":9805,"line_start":280,"line_end":280,"column_start":72,"column_end":89},"alias_span":null,"name":"WrapperTypeDecode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9808,"byte_end":9818,"line_start":281,"line_end":281,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9808,"byte_end":9818,"line_start":281,"line_end":281,"column_start":2,"column_end":12},"alias_span":null,"name":"OptionBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9820,"byte_end":9832,"line_start":281,"line_end":281,"column_start":14,"column_end":26},"alias_span":null,"name":"DecodeLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9834,"byte_end":9843,"line_start":281,"line_end":281,"column_start":28,"column_end":37},"alias_span":null,"name":"FullCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9845,"byte_end":9855,"line_start":281,"line_end":281,"column_start":39,"column_end":49},"alias_span":null,"name":"FullEncode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9905,"byte_end":9913,"line_start":284,"line_end":284,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9905,"byte_end":9913,"line_start":284,"line_end":284,"column_start":22,"column_end":30},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2392},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9939,"byte_end":9946,"line_start":285,"line_end":285,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2393},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9939,"byte_end":9946,"line_start":285,"line_end":285,"column_start":25,"column_end":32},"alias_span":null,"name":"Compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":623},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9948,"byte_end":9958,"line_start":285,"line_end":285,"column_start":34,"column_end":44},"alias_span":null,"name":"HasCompact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":570},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9960,"byte_end":9969,"line_start":285,"line_end":285,"column_start":46,"column_end":55},"alias_span":null,"name":"CompactAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9971,"byte_end":9981,"line_start":285,"line_end":285,"column_start":57,"column_end":67},"alias_span":null,"name":"CompactLen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10006,"byte_end":10012,"line_start":286,"line_end":286,"column_start":23,"column_end":29},"alias_span":null,"name":"Joiner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10038,"byte_end":10046,"line_start":287,"line_end":287,"column_start":25,"column_end":33},"alias_span":null,"name":"KeyedVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10074,"byte_end":10083,"line_start":288,"line_end":288,"column_start":27,"column_end":36},"alias_span":null,"name":"DecodeAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10112,"byte_end":10123,"line_start":289,"line_end":289,"column_start":28,"column_end":39},"alias_span":null,"name":"DecodeLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10154,"byte_end":10166,"line_start":290,"line_end":290,"column_start":30,"column_end":42},"alias_span":null,"name":"EncodeAppend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10196,"byte_end":10206,"line_start":291,"line_end":291,"column_start":29,"column_end":39},"alias_span":null,"name":"EncodeLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":10208,"byte_end":10211,"line_start":291,"line_end":291,"column_start":41,"column_end":44},"alias_span":null,"name":"Ref","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":603,"byte_end":10213,"line_start":15,"line_end":291,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":27},{"krate":0,"index":513},{"krate":0,"index":720},{"krate":0,"index":736},{"krate":0,"index":752},{"krate":0,"index":766},{"krate":0,"index":799},{"krate":0,"index":857},{"krate":0,"index":893},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":986}],"decl_id":null,"docs":" # Parity SCALE Codec","sig":null,"attributes":[{"value":"/ # Parity SCALE Codec","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":603,"byte_end":627,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":628,"byte_end":631,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Rust implementation of the SCALE (Simple Concatenated Aggregate Little-Endian) data format","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":632,"byte_end":726,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ for types used in the Parity Substrate framework.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":727,"byte_end":780,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":781,"byte_end":784,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ SCALE is a light-weight format which allows encoding (and decoding) which makes it highly","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":785,"byte_end":878,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ suitable for resource-constrained execution environments like blockchain runtimes and low-power,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":879,"byte_end":979,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ low-memory devices.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":980,"byte_end":1003,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1004,"byte_end":1007,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is important to note that the encoding context (knowledge of how the types and data structures look)","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1008,"byte_end":1115,"line_start":24,"line_end":24,"column_start":1,"column_end":108}},{"value":"/ needs to be known separately at both encoding and decoding ends.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1116,"byte_end":1184,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ The encoded data does not include this contextual information.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1185,"byte_end":1251,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ To get a better understanding of how the encoding is done for different types,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1256,"byte_end":1338,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ take a look at the","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1339,"byte_end":1361,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ [SCALE Code page at the Substrate Knowledge Base](https://substrate.dev/docs/en/knowledgebase/advanced/codec).","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1362,"byte_end":1476,"line_start":30,"line_end":30,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1477,"byte_end":1480,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1481,"byte_end":1502,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1503,"byte_end":1506,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The codec is implemented using the following traits:","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1507,"byte_end":1563,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1564,"byte_end":1567,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ### Encode","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1568,"byte_end":1582,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1583,"byte_end":1586,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The `Encode` trait is used for encoding of data into the SCALE format. The `Encode` trait contains the following functions:","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1587,"byte_end":1714,"line_start":38,"line_end":38,"column_start":1,"column_end":128}},{"value":"/ * `size_hint(&self) -> usize`: Gets the capacity (in bytes) required for the encoded data.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1716,"byte_end":1810,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/ This is to avoid double-allocation of memory needed for the encoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1811,"byte_end":1884,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ It can be an estimate and does not need to be an exact number.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1885,"byte_end":1951,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ If the size is not known, even no good maximum, then we can skip this function from the trait implementation.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":1952,"byte_end":2065,"line_start":43,"line_end":43,"column_start":1,"column_end":114}},{"value":"/ This is required to be a cheap operation, so should not involve iterations etc.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2066,"byte_end":2149,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ * `encode_to<T: Output>(&self, dest: &mut T)`: Encodes the value and appends it to a destination buffer.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2150,"byte_end":2258,"line_start":45,"line_end":45,"column_start":1,"column_end":109}},{"value":"/ * `encode(&self) -> Vec<u8>`: Encodes the type data and returns a slice.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2259,"byte_end":2335,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ * `using_encoded<R, F: FnOnce(&[u8]) -> R>(&self, f: F) -> R`: Encodes the type data and executes a closure on the encoded value.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2336,"byte_end":2469,"line_start":47,"line_end":47,"column_start":1,"column_end":134}},{"value":"/ Returns the result from the executed closure.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2470,"byte_end":2519,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2520,"byte_end":2523,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ **Note:** Implementations should override `using_encoded` for value types and `encode_to` for allocating types.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2524,"byte_end":2639,"line_start":50,"line_end":50,"column_start":1,"column_end":116}},{"value":"/ `size_hint` should be implemented for all types, wherever possible. Wrapper types should override all methods.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2640,"byte_end":2754,"line_start":51,"line_end":51,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2755,"byte_end":2758,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ### Decode","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2759,"byte_end":2773,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2774,"byte_end":2777,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The `Decode` trait is used for deserialization/decoding of encoded data into the respective types.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2778,"byte_end":2880,"line_start":55,"line_end":55,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ * `fn decode<I: Input>(value: &mut I) -> Result<Self, Error>`: Tries to decode the value from SCALE format to the type it is called on.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":2885,"byte_end":3024,"line_start":57,"line_end":57,"column_start":1,"column_end":140}},{"value":"/ Returns an `Err` if the decoding fails.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3025,"byte_end":3068,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3069,"byte_end":3072,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ### CompactAs","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3073,"byte_end":3090,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3091,"byte_end":3094,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The `CompactAs` trait is used for wrapping custom types/structs as compact types, which makes them even more space/memory efficient.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3095,"byte_end":3231,"line_start":62,"line_end":62,"column_start":1,"column_end":137}},{"value":"/ The compact encoding is described [here](https://substrate.dev/docs/en/knowledgebase/advanced/codec#compactgeneral-integers).","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3232,"byte_end":3361,"line_start":63,"line_end":63,"column_start":1,"column_end":130}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3362,"byte_end":3365,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * `encode_as(&self) -> &Self::As`: Encodes the type (self) as a compact type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3366,"byte_end":3447,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ The type `As` is defined in the same trait and its implementation should be compact encode-able.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3448,"byte_end":3548,"line_start":66,"line_end":66,"column_start":1,"column_end":101}},{"value":"/ * `decode_from(_: Self::As) -> Result<Self, Error>`: Decodes the type (self) from a compact encode-able type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3549,"byte_end":3662,"line_start":67,"line_end":67,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3663,"byte_end":3666,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ### HasCompact","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3667,"byte_end":3685,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3686,"byte_end":3689,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The `HasCompact` trait, if implemented, tells that the corresponding type is a compact encode-able type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3690,"byte_end":3798,"line_start":71,"line_end":71,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3799,"byte_end":3802,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ### EncodeLike","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3803,"byte_end":3821,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3822,"byte_end":3825,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The `EncodeLike` trait needs to be implemented for each type manually. When using derive, it is","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3826,"byte_end":3925,"line_start":75,"line_end":75,"column_start":1,"column_end":100}},{"value":"/ done automatically for you. Basically the trait gives you the opportunity to accept multiple types","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":3926,"byte_end":4028,"line_start":76,"line_end":76,"column_start":1,"column_end":103}},{"value":"/ to a function that all encode to the same representation.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4029,"byte_end":4090,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4091,"byte_end":4094,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ## Usage Examples","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4095,"byte_end":4116,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4117,"byte_end":4120,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Following are some examples to demonstrate usage of the codec.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4121,"byte_end":4187,"line_start":81,"line_end":81,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4188,"byte_end":4191,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ### Simple types","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4192,"byte_end":4212,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4213,"byte_end":4216,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4217,"byte_end":4224,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4225,"byte_end":4278,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4279,"byte_end":4314,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4315,"byte_end":4369,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4370,"byte_end":4373,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ use parity_scale_codec::{Encode, Decode};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4374,"byte_end":4419,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4420,"byte_end":4423,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4424,"byte_end":4471,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/ enum EnumType {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4472,"byte_end":4491,"line_start":93,"line_end":93,"column_start":1,"column_end":20}},{"value":"/ \t#[codec(index = 15)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4492,"byte_end":4517,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/ \tA,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4518,"byte_end":4525,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ \tB(u32, u64),","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4526,"byte_end":4543,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ \tC {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4544,"byte_end":4552,"line_start":97,"line_end":97,"column_start":1,"column_end":9}},{"value":"/ \t\ta: u32,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4553,"byte_end":4566,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ \t\tb: u64,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4567,"byte_end":4580,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ \t},","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4581,"byte_end":4588,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4589,"byte_end":4594,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4595,"byte_end":4598,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let a = EnumType::A;","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4599,"byte_end":4623,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/ let b = EnumType::B(1, 2);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4624,"byte_end":4654,"line_start":104,"line_end":104,"column_start":1,"column_end":31}},{"value":"/ let c = EnumType::C { a: 1, b: 2 };","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4655,"byte_end":4694,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4695,"byte_end":4698,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ a.using_encoded(|ref slice| {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4699,"byte_end":4732,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x0f\");","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4733,"byte_end":4769,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4770,"byte_end":4777,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ b.using_encoded(|ref slice| {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4782,"byte_end":4815,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4816,"byte_end":4880,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4881,"byte_end":4888,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4889,"byte_end":4892,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ c.using_encoded(|ref slice| {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4893,"byte_end":4926,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/     assert_eq!(slice, &b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\");","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4927,"byte_end":4991,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":4992,"byte_end":4999,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5000,"byte_end":5003,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let mut da: &[u8] = b\"\\x0f\";","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5004,"byte_end":5036,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(EnumType::decode(&mut da).ok(), Some(a));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5037,"byte_end":5093,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5094,"byte_end":5097,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ let mut db: &[u8] = b\"\\x01\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5098,"byte_end":5158,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(EnumType::decode(&mut db).ok(), Some(b));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5159,"byte_end":5215,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5216,"byte_end":5219,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let mut dc: &[u8] = b\"\\x02\\x01\\0\\0\\0\\x02\\0\\0\\0\\0\\0\\0\\0\";","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5220,"byte_end":5280,"line_start":125,"line_end":125,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(EnumType::decode(&mut dc).ok(), Some(c));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5281,"byte_end":5337,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5338,"byte_end":5341,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let mut dz: &[u8] = &[0];","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5342,"byte_end":5371,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(EnumType::decode(&mut dz).ok(), None);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5372,"byte_end":5425,"line_start":129,"line_end":129,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5426,"byte_end":5429,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5430,"byte_end":5449,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5450,"byte_end":5457,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5458,"byte_end":5461,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ### Compact type with HasCompact","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5462,"byte_end":5498,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5499,"byte_end":5502,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5503,"byte_end":5510,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5511,"byte_end":5564,"line_start":137,"line_end":137,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5565,"byte_end":5600,"line_start":138,"line_end":138,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5601,"byte_end":5655,"line_start":139,"line_end":139,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5656,"byte_end":5659,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ use parity_scale_codec::{Encode, Decode, Compact, HasCompact};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5660,"byte_end":5726,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5727,"byte_end":5730,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5731,"byte_end":5778,"line_start":143,"line_end":143,"column_start":1,"column_end":48}},{"value":"/ struct Test1CompactHasCompact<T: HasCompact> {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5779,"byte_end":5829,"line_start":144,"line_end":144,"column_start":1,"column_end":51}},{"value":"/     #[codec(compact)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5830,"byte_end":5855,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/     bar: T,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5856,"byte_end":5871,"line_start":146,"line_end":146,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5872,"byte_end":5877,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5878,"byte_end":5881,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5882,"byte_end":5929,"line_start":149,"line_end":149,"column_start":1,"column_end":48}},{"value":"/ struct Test1HasCompact<T: HasCompact> {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5930,"byte_end":5973,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/     #[codec(encoded_as = \"<T as HasCompact>::Type\")]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":5974,"byte_end":6030,"line_start":151,"line_end":151,"column_start":1,"column_end":57}},{"value":"/     bar: T,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6031,"byte_end":6046,"line_start":152,"line_end":152,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6047,"byte_end":6052,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6053,"byte_end":6056,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ let test_val: (u64, usize) = (0u64, 1usize);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6057,"byte_end":6105,"line_start":155,"line_end":155,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6106,"byte_end":6109,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let encoded = Test1HasCompact { bar: test_val.0 }.encode();","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6110,"byte_end":6173,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(encoded.len(), test_val.1);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6174,"byte_end":6216,"line_start":158,"line_end":158,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(<Test1CompactHasCompact<u64>>::decode(&mut &encoded[..]).unwrap().bar, test_val.0);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6217,"byte_end":6315,"line_start":159,"line_end":159,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6316,"byte_end":6319,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6320,"byte_end":6339,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6340,"byte_end":6347,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ### Type with CompactAs","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6348,"byte_end":6375,"line_start":163,"line_end":163,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6376,"byte_end":6379,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6380,"byte_end":6391,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/ # // Import macros if derive feature is not used.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6392,"byte_end":6445,"line_start":166,"line_end":166,"column_start":1,"column_end":54}},{"value":"/ # #[cfg(not(feature=\"derive\"))]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6446,"byte_end":6481,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/ # use parity_scale_codec_derive::{Encode, Decode};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6482,"byte_end":6536,"line_start":168,"line_end":168,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6537,"byte_end":6540,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ use serde_derive::{Serialize, Deserialize};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6541,"byte_end":6588,"line_start":170,"line_end":170,"column_start":1,"column_end":48}},{"value":"/ use parity_scale_codec::{Encode, Decode, Compact, HasCompact, CompactAs, Error};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6589,"byte_end":6673,"line_start":171,"line_end":171,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6674,"byte_end":6677,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ #[cfg_attr(feature = \"std\", derive(Serialize, Deserialize, Debug))]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6678,"byte_end":6749,"line_start":173,"line_end":173,"column_start":1,"column_end":72}},{"value":"/ #[derive(PartialEq, Eq, Clone)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6750,"byte_end":6785,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ struct StructHasCompact(u32);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6786,"byte_end":6819,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6820,"byte_end":6823,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ impl CompactAs for StructHasCompact {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6824,"byte_end":6865,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/     type As = u32;","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6866,"byte_end":6888,"line_start":178,"line_end":178,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6889,"byte_end":6892,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     fn encode_as(&self) -> &Self::As {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6893,"byte_end":6935,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"/         &12","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6936,"byte_end":6951,"line_start":181,"line_end":181,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6952,"byte_end":6961,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6962,"byte_end":6965,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/     fn decode_from(_: Self::As) -> Result<Self, Error> {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":6966,"byte_end":7026,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/         Ok(StructHasCompact(12))","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7027,"byte_end":7063,"line_start":185,"line_end":185,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7064,"byte_end":7073,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7074,"byte_end":7079,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7080,"byte_end":7083,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ impl From<Compact<StructHasCompact>> for StructHasCompact {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7084,"byte_end":7147,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/     fn from(_: Compact<StructHasCompact>) -> Self {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7148,"byte_end":7203,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/         StructHasCompact(12)","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7204,"byte_end":7236,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7237,"byte_end":7246,"line_start":192,"line_end":192,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7247,"byte_end":7252,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7253,"byte_end":7256,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Encode, Decode)]","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7257,"byte_end":7304,"line_start":195,"line_end":195,"column_start":1,"column_end":48}},{"value":"/ enum TestGenericHasCompact<T> {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7305,"byte_end":7340,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     A {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7341,"byte_end":7352,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/         #[codec(compact)] a: T","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7353,"byte_end":7387,"line_start":198,"line_end":198,"column_start":1,"column_end":35}},{"value":"/     },","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7388,"byte_end":7398,"line_start":199,"line_end":199,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7399,"byte_end":7404,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7405,"byte_end":7408,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ let a = TestGenericHasCompact::A::<StructHasCompact> {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7409,"byte_end":7467,"line_start":202,"line_end":202,"column_start":1,"column_end":59}},{"value":"/     a: StructHasCompact(12325678),","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7468,"byte_end":7506,"line_start":203,"line_end":203,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7507,"byte_end":7513,"line_start":204,"line_end":204,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7514,"byte_end":7517,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let encoded = a.encode();","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7518,"byte_end":7547,"line_start":206,"line_end":206,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(encoded.len(), 2);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7548,"byte_end":7581,"line_start":207,"line_end":207,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7582,"byte_end":7585,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ # fn main() { }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7586,"byte_end":7605,"line_start":209,"line_end":209,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7606,"byte_end":7613,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7614,"byte_end":7617,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ## Derive attributes","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7618,"byte_end":7642,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7643,"byte_end":7646,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The derive implementation supports the following attributes:","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7647,"byte_end":7711,"line_start":214,"line_end":214,"column_start":1,"column_end":65}},{"value":"/ - `codec(dumb_trait_bound)`: This attribute needs to be placed above the type that one of the trait","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7712,"byte_end":7815,"line_start":215,"line_end":215,"column_start":1,"column_end":104}},{"value":"/   should be implemented for. It will make the algorithm that determines the to-add trait bounds","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7816,"byte_end":7915,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"/   fall back to just use the type parameters of the type. This can be useful for situation where","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":7916,"byte_end":8015,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"/   the algorithm includes private types in the public interface. By using this attribute, you should","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8016,"byte_end":8119,"line_start":218,"line_end":218,"column_start":1,"column_end":104}},{"value":"/   not get this error/warning again.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8120,"byte_end":8159,"line_start":219,"line_end":219,"column_start":1,"column_end":40}},{"value":"/ - `codec(skip)`: Needs to be placed above a field  or variant and makes it to be skipped while","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8160,"byte_end":8258,"line_start":220,"line_end":220,"column_start":1,"column_end":99}},{"value":"/   encoding/decoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8259,"byte_end":8283,"line_start":221,"line_end":221,"column_start":1,"column_end":25}},{"value":"/ - `codec(compact)`: Needs to be placed above a field and makes the field use compact encoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8284,"byte_end":8382,"line_start":222,"line_end":222,"column_start":1,"column_end":99}},{"value":"/   (The type needs to support compact encoding.)","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8383,"byte_end":8434,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ - `codec(encoded_as = \"OtherType\")`: Needs to be placed above a field and makes the field being encoded","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8435,"byte_end":8542,"line_start":224,"line_end":224,"column_start":1,"column_end":108}},{"value":"/   by using `OtherType`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8543,"byte_end":8570,"line_start":225,"line_end":225,"column_start":1,"column_end":28}},{"value":"/ - `codec(index = 0)`: Needs to be placed above an enum variant to make the variant use the given","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8571,"byte_end":8671,"line_start":226,"line_end":226,"column_start":1,"column_end":101}},{"value":"/   index when encoded. By default the index is determined by counting from `0` beginning wth the","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8672,"byte_end":8771,"line_start":227,"line_end":227,"column_start":1,"column_end":100}},{"value":"/   first variant.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8772,"byte_end":8792,"line_start":228,"line_end":228,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8793,"byte_end":8796,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"warn(missing_docs)","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":8798,"byte_end":8820,"line_start":231,"line_end":231,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9281,"byte_end":9286,"line_start":254,"line_end":254,"column_start":9,"column_end":14},"name":"alloc","qualname":"::alloc","value":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/lib.rs","byte_start":9234,"byte_end":9257,"line_start":252,"line_end":252,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11693,"byte_end":11698,"line_start":57,"line_end":57,"column_start":11,"column_end":16},"name":"Input","qualname":"::codec::Input","value":"Input","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" Trait that allows reading of data into a slice.\n","sig":null,"attributes":[{"value":"/ Trait that allows reading of data into a slice.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11631,"byte_end":11682,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12113,"byte_end":12126,"line_start":64,"line_end":64,"column_start":5,"column_end":18},"name":"remaining_len","qualname":"::codec::Input::remaining_len","value":"pub fn remaining_len(&mut Self) -> Result<Option<usize>, Error>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Should return the remaining length of the input data. If no information about the input\n length is available, `None` should be returned.","sig":null,"attributes":[{"value":"/ Should return the remaining length of the input data. If no information about the input","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11702,"byte_end":11793,"line_start":58,"line_end":58,"column_start":2,"column_end":93}},{"value":"/ length is available, `None` should be returned.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11795,"byte_end":11846,"line_start":59,"line_end":59,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11848,"byte_end":11851,"line_start":60,"line_end":60,"column_start":2,"column_end":5}},{"value":"/ The length is used to constrain the preallocation while decoding. Returning a garbage","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11853,"byte_end":11942,"line_start":61,"line_end":61,"column_start":2,"column_end":91}},{"value":"/ length can open the doors for a denial of service attack to your application.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":11944,"byte_end":12025,"line_start":62,"line_end":62,"column_start":2,"column_end":83}},{"value":"/ Otherwise, returning `None` can decrease the performance of your application.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12027,"byte_end":12108,"line_start":63,"line_end":63,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12359,"byte_end":12363,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"read","qualname":"::codec::Input::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<(), Error>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Read the exact number of bytes required to fill the given buffer.","sig":null,"attributes":[{"value":"/ Read the exact number of bytes required to fill the given buffer.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12173,"byte_end":12242,"line_start":66,"line_end":66,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12244,"byte_end":12247,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ Note that this function is similar to `std::io::Read::read_exact` and not","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12249,"byte_end":12326,"line_start":68,"line_end":68,"column_start":2,"column_end":79}},{"value":"/ `std::io::Read::read`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12328,"byte_end":12354,"line_start":69,"line_end":69,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12459,"byte_end":12468,"line_start":73,"line_end":73,"column_start":5,"column_end":14},"name":"read_byte","qualname":"::codec::Input::read_byte","value":"pub fn read_byte(&mut Self) -> Result<u8, Error>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Read a single byte from the input.\n","sig":null,"attributes":[{"value":"/ Read a single byte from the input.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12416,"byte_end":12454,"line_start":72,"line_end":72,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12775,"byte_end":12786,"line_start":83,"line_end":83,"column_start":5,"column_end":16},"name":"descend_ref","qualname":"::codec::Input::descend_ref","value":"pub fn descend_ref(&mut Self) -> Result<(), Error>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Descend into nested reference when decoding.\n This is called when decoding a new refence-based instance,\n such as `Vec` or `Box`. Currently all such types are\n allocated on the heap.\n","sig":null,"attributes":[{"value":"/ Descend into nested reference when decoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12572,"byte_end":12620,"line_start":79,"line_end":79,"column_start":2,"column_end":50}},{"value":"/ This is called when decoding a new refence-based instance,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12622,"byte_end":12684,"line_start":80,"line_end":80,"column_start":2,"column_end":64}},{"value":"/ such as `Vec` or `Box`. Currently all such types are","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12686,"byte_end":12742,"line_start":81,"line_end":81,"column_start":2,"column_end":58}},{"value":"/ allocated on the heap.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12744,"byte_end":12770,"line_start":82,"line_end":82,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12961,"byte_end":12971,"line_start":89,"line_end":89,"column_start":5,"column_end":15},"name":"ascend_ref","qualname":"::codec::Input::ascend_ref","value":"pub fn ascend_ref(&mut Self)","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Ascend to previous structure level when decoding.\n This is called when decoding reference-based type is finished.\n","sig":null,"attributes":[{"value":"/ Ascend to previous structure level when decoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12835,"byte_end":12888,"line_start":87,"line_end":87,"column_start":2,"column_end":55}},{"value":"/ This is called when decoding reference-based type is finished.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":12890,"byte_end":12956,"line_start":88,"line_end":88,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14577,"byte_end":14585,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::codec::IoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper that implements Input for any `Read` type.\n","sig":null,"attributes":[{"value":"/ Wrapper that implements Input for any `Read` type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14487,"byte_end":14541,"line_start":136,"line_end":136,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14542,"byte_end":14565,"line_start":137,"line_end":137,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14604,"byte_end":14609,"line_start":138,"line_end":138,"column_start":39,"column_end":44},"name":"0","qualname":"::codec::IoReader::0","value":"R","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":166},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14923,"byte_end":14929,"line_start":152,"line_end":152,"column_start":11,"column_end":17},"name":"Output","qualname":"::codec::Output","value":"Output","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" Trait that allows writing of data.\n","sig":null,"attributes":[{"value":"/ Trait that allows writing of data.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14874,"byte_end":14912,"line_start":151,"line_end":151,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14962,"byte_end":14967,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"write","qualname":"::codec::Output::write","value":"pub fn write(&mut Self, &[u8])","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" Write to the output.\n","sig":null,"attributes":[{"value":"/ Write to the output.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14933,"byte_end":14957,"line_start":153,"line_end":153,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15039,"byte_end":15048,"line_start":157,"line_end":157,"column_start":5,"column_end":14},"name":"push_byte","qualname":"::codec::Output::push_byte","value":"pub fn push_byte(&mut Self, u8)","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" Write a single byte to the output.\n","sig":null,"attributes":[{"value":"/ Write a single byte to the output.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14996,"byte_end":15034,"line_start":156,"line_end":156,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15717,"byte_end":15724,"line_start":184,"line_end":184,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::codec::TypeInfo::Unknown","value":"TypeInfo::Unknown","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.\n","sig":null,"attributes":[{"value":"/ Default value of [`Encode::TYPE_INFO`] to not require implementors to set this value in the trait.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15613,"byte_end":15715,"line_start":183,"line_end":183,"column_start":2,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15727,"byte_end":15729,"line_start":185,"line_end":185,"column_start":2,"column_end":4},"name":"U8","qualname":"::codec::TypeInfo::U8","value":"TypeInfo::U8","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":177},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15732,"byte_end":15734,"line_start":186,"line_end":186,"column_start":2,"column_end":4},"name":"I8","qualname":"::codec::TypeInfo::I8","value":"TypeInfo::I8","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":179},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15737,"byte_end":15740,"line_start":187,"line_end":187,"column_start":2,"column_end":5},"name":"U16","qualname":"::codec::TypeInfo::U16","value":"TypeInfo::U16","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15743,"byte_end":15746,"line_start":188,"line_end":188,"column_start":2,"column_end":5},"name":"I16","qualname":"::codec::TypeInfo::I16","value":"TypeInfo::I16","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15749,"byte_end":15752,"line_start":189,"line_end":189,"column_start":2,"column_end":5},"name":"U32","qualname":"::codec::TypeInfo::U32","value":"TypeInfo::U32","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15755,"byte_end":15758,"line_start":190,"line_end":190,"column_start":2,"column_end":5},"name":"I32","qualname":"::codec::TypeInfo::I32","value":"TypeInfo::I32","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15761,"byte_end":15764,"line_start":191,"line_end":191,"column_start":2,"column_end":5},"name":"U64","qualname":"::codec::TypeInfo::U64","value":"TypeInfo::U64","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15767,"byte_end":15770,"line_start":192,"line_end":192,"column_start":2,"column_end":5},"name":"I64","qualname":"::codec::TypeInfo::I64","value":"TypeInfo::I64","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15773,"byte_end":15777,"line_start":193,"line_end":193,"column_start":2,"column_end":6},"name":"U128","qualname":"::codec::TypeInfo::U128","value":"TypeInfo::U128","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15780,"byte_end":15784,"line_start":194,"line_end":194,"column_start":2,"column_end":6},"name":"I128","qualname":"::codec::TypeInfo::I128","value":"TypeInfo::I128","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":172},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15601,"byte_end":15609,"line_start":182,"line_end":182,"column_start":10,"column_end":18},"name":"TypeInfo","qualname":"::codec::TypeInfo","value":"pub enum TypeInfo {\n    Unknown,\n    U8,\n    I8,\n    U16,\n    I16,\n    U32,\n    I32,\n    U64,\n    I64,\n    U128,\n    I128,\n}","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193}],"decl_id":null,"docs":" !INTERNAL USE ONLY!","sig":null,"attributes":[{"value":"/ !INTERNAL USE ONLY!","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15431,"byte_end":15454,"line_start":177,"line_end":177,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15455,"byte_end":15458,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This enum provides type information to optimize encoding/decoding by doing fake specialization.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15459,"byte_end":15558,"line_start":179,"line_end":179,"column_start":1,"column_end":100}},{"value":"non_exhaustive","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15574,"byte_end":15591,"line_start":181,"line_end":181,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16054,"byte_end":16060,"line_start":201,"line_end":201,"column_start":11,"column_end":17},"name":"Encode","qualname":"::codec::Encode","value":"Encode","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205}],"decl_id":null,"docs":" Trait that allows zero-copy write of value-references to slices in LE format.","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy write of value-references to slices in LE format.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15789,"byte_end":15870,"line_start":197,"line_end":197,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15871,"byte_end":15874,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ Implementations should override `using_encoded` for value types and `encode_to` and `size_hint` for allocating types.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15875,"byte_end":15996,"line_start":199,"line_end":199,"column_start":1,"column_end":122}},{"value":"/ Wrapper types should override all methods.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15997,"byte_end":16043,"line_start":200,"line_end":200,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16201,"byte_end":16210,"line_start":205,"line_end":205,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Encode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16412,"byte_end":16421,"line_start":211,"line_end":211,"column_start":5,"column_end":14},"name":"size_hint","qualname":"::codec::Encode::size_hint","value":"pub fn size_hint(&Self) -> usize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" If possible give a hint of expected size of the encoding.","sig":null,"attributes":[{"value":"/ If possible give a hint of expected size of the encoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16244,"byte_end":16305,"line_start":207,"line_end":207,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16307,"byte_end":16310,"line_start":208,"line_end":208,"column_start":2,"column_end":5}},{"value":"/ This method is used inside default implementation of `encode`","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16312,"byte_end":16377,"line_start":209,"line_end":209,"column_start":2,"column_end":67}},{"value":"/ to avoid re-allocations.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16379,"byte_end":16407,"line_start":210,"line_end":210,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16515,"byte_end":16524,"line_start":216,"line_end":216,"column_start":5,"column_end":14},"name":"encode_to","qualname":"::codec::Encode::encode_to","value":"pub fn encode_to<T: Output + ?Sized>(&Self, &mut T)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Convert self to a slice and append it to the destination.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and append it to the destination.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16449,"byte_end":16510,"line_start":215,"line_end":215,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16659,"byte_end":16665,"line_start":221,"line_end":221,"column_start":5,"column_end":11},"name":"encode","qualname":"::codec::Encode::encode","value":"pub fn encode(&Self) -> Vec<u8>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Convert self to an owned vector.\n","sig":null,"attributes":[{"value":"/ Convert self to an owned vector.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16618,"byte_end":16654,"line_start":220,"line_end":220,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16848,"byte_end":16861,"line_start":228,"line_end":228,"column_start":5,"column_end":18},"name":"using_encoded","qualname":"::codec::Encode::using_encoded","value":"pub fn using_encoded<R, F: FnOnce(&[u8]) -> R>(&Self, F) -> R","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Convert self to a slice and then invoke the given closure with it.\n","sig":null,"attributes":[{"value":"/ Convert self to a slice and then invoke the given closure with it.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16773,"byte_end":16843,"line_start":227,"line_end":227,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17278,"byte_end":17290,"line_start":240,"line_end":240,"column_start":5,"column_end":17},"name":"encoded_size","qualname":"::codec::Encode::encoded_size","value":"pub fn encoded_size(&Self) -> usize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Calculates the encoded size.","sig":null,"attributes":[{"value":"/ Calculates the encoded size.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16933,"byte_end":16965,"line_start":232,"line_end":232,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16967,"byte_end":16970,"line_start":233,"line_end":233,"column_start":2,"column_end":5}},{"value":"/ Should be used when the encoded data isn't required.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":16972,"byte_end":17028,"line_start":234,"line_end":234,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17030,"byte_end":17033,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17035,"byte_end":17045,"line_start":236,"line_end":236,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17047,"byte_end":17050,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ This works by using a special [`Output`] that only tracks the size. So, there are no allocations inside the ","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17052,"byte_end":17164,"line_start":238,"line_end":238,"column_start":2,"column_end":114}},{"value":"/ output. However, this can not prevent allocations that some types are doing inside their own encoding. ","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17166,"byte_end":17273,"line_start":239,"line_end":239,"column_start":2,"column_end":109}}]},{"kind":"Trait","id":{"krate":0,"index":211},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17841,"byte_end":17853,"line_start":264,"line_end":264,"column_start":11,"column_end":23},"name":"DecodeLength","qualname":"::codec::DecodeLength","value":"DecodeLength","parent":null,"children":[{"krate":0,"index":212}],"decl_id":null,"docs":" Trait that allows the length of a collection to be read, without having\n to read and decode the entire elements.\n","sig":null,"attributes":[{"value":"/ Trait that allows the length of a collection to be read, without having","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17711,"byte_end":17786,"line_start":262,"line_end":262,"column_start":1,"column_end":76}},{"value":"/ to read and decode the entire elements.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17787,"byte_end":17830,"line_start":263,"line_end":263,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17914,"byte_end":17917,"line_start":266,"line_end":266,"column_start":5,"column_end":8},"name":"len","qualname":"::codec::DecodeLength::len","value":"pub fn len(&[u8]) -> Result<usize, Error>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Return the number of elements in `self_encoded`.\n","sig":null,"attributes":[{"value":"/ Return the number of elements in `self_encoded`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17857,"byte_end":17909,"line_start":265,"line_end":265,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18060,"byte_end":18066,"line_start":270,"line_end":270,"column_start":11,"column_end":17},"name":"Decode","qualname":"::codec::Decode","value":"Decode: Sized","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220}],"decl_id":null,"docs":" Trait that allows zero-copy read of value-references from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read of value-references from slices in LE format.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17967,"byte_end":18049,"line_start":269,"line_end":269,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":214},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18214,"byte_end":18223,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"TYPE_INFO","qualname":"::codec::Decode::TYPE_INFO","value":"TypeInfo","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18310,"byte_end":18316,"line_start":277,"line_end":277,"column_start":5,"column_end":11},"name":"decode","qualname":"::codec::Decode::decode","value":"pub fn decode<I: Input>(&mut I) -> Result<Self, Error>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Attempt to deserialise the value from input.\n","sig":null,"attributes":[{"value":"/ Attempt to deserialise the value from input.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18257,"byte_end":18305,"line_start":276,"line_end":276,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18596,"byte_end":18600,"line_start":283,"line_end":283,"column_start":5,"column_end":9},"name":"skip","qualname":"::codec::Decode::skip","value":"pub fn skip<I: Input>(&mut I) -> Result<(), Error>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Attempt to skip the encoded value from input.","sig":null,"attributes":[{"value":"/ Attempt to skip the encoded value from input.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18368,"byte_end":18417,"line_start":279,"line_end":279,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18419,"byte_end":18422,"line_start":280,"line_end":280,"column_start":2,"column_end":5}},{"value":"/ The default implementation of this function is just calling [`Decode::decode`].","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18424,"byte_end":18507,"line_start":281,"line_end":281,"column_start":2,"column_end":85}},{"value":"/ When possible, an implementation should provided a specialized implementation.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18509,"byte_end":18591,"line_start":282,"line_end":282,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18933,"byte_end":18951,"line_start":293,"line_end":293,"column_start":5,"column_end":23},"name":"encoded_fixed_size","qualname":"::codec::Decode::encoded_fixed_size","value":"pub fn encoded_fixed_size() -> Option<usize>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Returns the fixed encoded size of the type.","sig":null,"attributes":[{"value":"/ Returns the fixed encoded size of the type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18688,"byte_end":18735,"line_start":287,"line_end":287,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18737,"byte_end":18740,"line_start":288,"line_end":288,"column_start":2,"column_end":5}},{"value":"/ If it returns `Some(size)` then all possible values of this","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18742,"byte_end":18805,"line_start":289,"line_end":289,"column_start":2,"column_end":65}},{"value":"/ type have the given size (in bytes) when encoded.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18807,"byte_end":18860,"line_start":290,"line_end":290,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18862,"byte_end":18865,"line_start":291,"line_end":291,"column_start":2,"column_end":5}},{"value":"/ NOTE: A type with a fixed encoded size may return `None`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18867,"byte_end":18928,"line_start":292,"line_end":292,"column_start":2,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":221},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19088,"byte_end":19093,"line_start":299,"line_end":299,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec: Decode + Encode","parent":null,"children":[],"decl_id":null,"docs":" Trait that allows zero-copy read/write of value-references to/from slices in LE format.\n","sig":null,"attributes":[{"value":"/ Trait that allows zero-copy read/write of value-references to/from slices in LE format.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18986,"byte_end":19077,"line_start":298,"line_end":298,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":224},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19297,"byte_end":19307,"line_start":304,"line_end":304,"column_start":11,"column_end":21},"name":"FullEncode","qualname":"::codec::FullEncode","value":"FullEncode: Encode + EncodeLike","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Encode`. Usefull for generic being used in function","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19155,"byte_end":19252,"line_start":302,"line_end":302,"column_start":1,"column_end":98}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19253,"byte_end":19286,"line_start":303,"line_end":303,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":227},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19523,"byte_end":19532,"line_start":309,"line_end":309,"column_start":11,"column_end":20},"name":"FullCodec","qualname":"::codec::FullCodec","value":"FullCodec: Decode + FullEncode","parent":null,"children":[],"decl_id":null,"docs":" Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function\n with `EncodeLike` parameters.\n","sig":null,"attributes":[{"value":"/ Trait that bound `EncodeLike` along with `Codec`. Usefull for generic being used in function","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19382,"byte_end":19478,"line_start":307,"line_end":307,"column_start":1,"column_end":97}},{"value":"/ with `EncodeLike` parameters.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19479,"byte_end":19512,"line_start":308,"line_end":308,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19921,"byte_end":19938,"line_start":319,"line_end":319,"column_start":11,"column_end":28},"name":"WrapperTypeEncode","qualname":"::codec::WrapperTypeEncode","value":"WrapperTypeEncode: Deref","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for types that wrap other encodable type.","sig":null,"attributes":[{"value":"/ A marker trait for types that wrap other encodable type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19606,"byte_end":19666,"line_start":312,"line_end":312,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19667,"byte_end":19670,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ Such types should not carry any additional information","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19671,"byte_end":19729,"line_start":314,"line_end":314,"column_start":1,"column_end":59}},{"value":"/ that would require to be encoded, because the encoding","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19730,"byte_end":19788,"line_start":315,"line_end":315,"column_start":1,"column_end":59}},{"value":"/ is assumed to be the same as the wrapped type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19789,"byte_end":19839,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19840,"byte_end":19843,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ The wrapped type that is referred to is the [`Deref::Target`].","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19844,"byte_end":19910,"line_start":318,"line_end":318,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22029,"byte_end":22046,"line_start":387,"line_end":387,"column_start":11,"column_end":28},"name":"WrapperTypeDecode","qualname":"::codec::WrapperTypeDecode","value":"WrapperTypeDecode: Sized","parent":null,"children":[{"krate":0,"index":304}],"decl_id":null,"docs":" A marker trait for types that can be created solely from other decodable types.","sig":null,"attributes":[{"value":"/ A marker trait for types that can be created solely from other decodable types.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21854,"byte_end":21937,"line_start":384,"line_end":384,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21938,"byte_end":21941,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ The decoding of such type is assumed to be the same as the wrapped type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21942,"byte_end":22018,"line_start":386,"line_end":386,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":304},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22083,"byte_end":22090,"line_start":389,"line_end":389,"column_start":7,"column_end":14},"name":"Wrapped","qualname":"::codec::WrapperTypeDecode::Wrapped","value":"type Wrapped: Into<Self>;","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" A wrapped type.\n","sig":null,"attributes":[{"value":"/ A wrapped type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22057,"byte_end":22076,"line_start":388,"line_end":388,"column_start":2,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":320},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":23843,"byte_end":23854,"line_start":441,"line_end":441,"column_start":11,"column_end":22},"name":"EncodeAsRef","qualname":"::codec::EncodeAsRef","value":"EncodeAsRef<'a, T: 'a>","parent":null,"children":[{"krate":0,"index":323}],"decl_id":null,"docs":" Something that can be encoded as a reference.\n","sig":null,"attributes":[{"value":"/ Something that can be encoded as a reference.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":23783,"byte_end":23832,"line_start":440,"line_end":440,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":323},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":23925,"byte_end":23932,"line_start":443,"line_end":443,"column_start":7,"column_end":14},"name":"RefType","qualname":"::codec::EncodeAsRef::RefType","value":"type RefType: Encode + From<&'a T>;","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" The reference type that is used for encoding.\n","sig":null,"attributes":[{"value":"/ The reference type that is used for encoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":23869,"byte_end":23918,"line_start":442,"line_end":442,"column_start":2,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25154,"byte_end":25164,"line_start":494,"line_end":494,"column_start":12,"column_end":22},"name":"OptionBool","qualname":"::codec::OptionBool","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shim type because we can't do a specialised implementation for `Option<bool>` directly.\n","sig":null,"attributes":[{"value":"/ Shim type because we can't do a specialised implementation for `Option<bool>` directly.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25013,"byte_end":25104,"line_start":492,"line_end":492,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":991},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25165,"byte_end":25181,"line_start":494,"line_end":494,"column_start":23,"column_end":39},"name":"0","qualname":"::codec::OptionBool::0","value":"std::option::Option<bool>","parent":{"krate":0,"index":989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":560},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57853,"byte_end":57863,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"CompactLen","qualname":"::compact::CompactLen","value":"CompactLen<T>","parent":null,"children":[{"krate":0,"index":562}],"decl_id":null,"docs":" Something that can return the compact encoded length for a given value.\n","sig":null,"attributes":[{"value":"/ Something that can return the compact encoded length for a given value.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57767,"byte_end":57842,"line_start":73,"line_end":73,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57934,"byte_end":57945,"line_start":76,"line_end":76,"column_start":5,"column_end":16},"name":"compact_len","qualname":"::compact::CompactLen::compact_len","value":"pub fn compact_len(&T) -> usize","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Returns the compact encoded length for the given value.\n","sig":null,"attributes":[{"value":"/ Returns the compact encoded length for the given value.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57870,"byte_end":57929,"line_start":75,"line_end":75,"column_start":2,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2392},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58174,"byte_end":58181,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"Compact","qualname":"::compact::Compact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57968,"byte_end":58058,"line_start":79,"line_end":79,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":2395},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58185,"byte_end":58190,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"name":"0","qualname":"::compact::Compact::0","value":"T","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":570},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58431,"byte_end":58440,"line_start":93,"line_end":93,"column_start":11,"column_end":20},"name":"CompactAs","qualname":"::compact::CompactAs","value":"CompactAs: From<Compact<Self>>","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" Allow foreign structs to be wrap in Compact\n","sig":null,"attributes":[{"value":"/ Allow foreign structs to be wrap in Compact","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58373,"byte_end":58420,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":571},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58537,"byte_end":58539,"line_start":95,"line_end":95,"column_start":7,"column_end":9},"name":"As","qualname":"::compact::CompactAs::As","value":"type As;","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" A compact-encodable type that should be used as the encoding.\n","sig":null,"attributes":[{"value":"/ A compact-encodable type that should be used as the encoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58465,"byte_end":58530,"line_start":94,"line_end":94,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58587,"byte_end":58596,"line_start":98,"line_end":98,"column_start":5,"column_end":14},"name":"encode_as","qualname":"::compact::CompactAs::encode_as","value":"pub fn encode_as(&Self) -> &Self::As","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Returns the compact-encodable type.\n","sig":null,"attributes":[{"value":"/ Returns the compact-encodable type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58543,"byte_end":58582,"line_start":97,"line_end":97,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58673,"byte_end":58684,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"decode_from","qualname":"::compact::CompactAs::decode_from","value":"pub fn decode_from(Self::As) -> Result<Self, Error>","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Decode `Self` from the compact-decoded type.\n","sig":null,"attributes":[{"value":"/ Decode `Self` from the compact-decoded type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58620,"byte_end":58668,"line_start":100,"line_end":100,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60428,"byte_end":60438,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"CompactRef","qualname":"::compact::CompactRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.\n","sig":null,"attributes":[{"value":"/ Compact-encoded variant of &'a T. This is more space-efficient but less compute-efficient.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60284,"byte_end":60378,"line_start":181,"line_end":181,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2434},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60446,"byte_end":60455,"line_start":183,"line_end":183,"column_start":30,"column_end":39},"name":"0","qualname":"::compact::CompactRef::0","value":"&'a T","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61297,"byte_end":61307,"line_start":210,"line_end":210,"column_start":11,"column_end":21},"name":"HasCompact","qualname":"::compact::HasCompact","value":"HasCompact: Sized","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" Trait that tells you if a given type can be encoded/decoded in a compact way.\n","sig":null,"attributes":[{"value":"/ Trait that tells you if a given type can be encoded/decoded in a compact way.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61205,"byte_end":61286,"line_start":209,"line_end":209,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":624},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61358,"byte_end":61362,"line_start":212,"line_end":212,"column_start":7,"column_end":11},"name":"Type","qualname":"::compact::HasCompact::Type","value":"type Type: for<'a> EncodeAsRef<'a, Self> + Decode + From<Self> + Into<Self>;","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" The compact type; this can be\n","sig":null,"attributes":[{"value":"/ The compact type; this can be","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61318,"byte_end":61351,"line_start":211,"line_end":211,"column_start":2,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":727},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82151,"byte_end":82157,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"Joiner","qualname":"::joiner::Joiner","value":"Joiner","parent":null,"children":[{"krate":0,"index":728}],"decl_id":null,"docs":" Trait to allow itself to be serialised into a value which can be extended\n by bytes.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised into a value which can be extended","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82049,"byte_end":82126,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ by bytes.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82127,"byte_end":82140,"line_start":22,"line_end":22,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82205,"byte_end":82208,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"and","qualname":"::joiner::Joiner::and","value":"pub fn and<V: Codec + Sized>(Self, &V) -> Self","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Append encoding of value to `Self`.\n","sig":null,"attributes":[{"value":"/ Append encoding of value to `Self`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82161,"byte_end":82200,"line_start":24,"line_end":24,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":746},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/keyedvec.rs","byte_start":83222,"byte_end":83230,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"KeyedVec","qualname":"::keyedvec::KeyedVec","value":"KeyedVec","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":" Trait to allow itself to be serialised and prepended by a given slice.\n","sig":null,"attributes":[{"value":"/ Trait to allow itself to be serialised and prepended by a given slice.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/keyedvec.rs","byte_start":83137,"byte_end":83211,"line_start":22,"line_end":22,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/keyedvec.rs","byte_start":83297,"byte_end":83309,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"to_keyed_vec","qualname":"::keyedvec::KeyedVec::to_keyed_vec","value":"pub fn to_keyed_vec(&Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Return an encoding of `Self` prepended by given slice.\n","sig":null,"attributes":[{"value":"/ Return an encoding of `Self` prepended by given slice.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/keyedvec.rs","byte_start":83234,"byte_end":83292,"line_start":24,"line_end":24,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":761},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84455,"byte_end":84464,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"DecodeAll","qualname":"::decode_all::DecodeAll","value":"DecodeAll: Sized","parent":null,"children":[{"krate":0,"index":762}],"decl_id":null,"docs":" Extension trait to [`Decode`] that ensures that the given input data is consumed completly while\n decoding.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] that ensures that the given input data is consumed completly while","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84330,"byte_end":84430,"line_start":20,"line_end":20,"column_start":1,"column_end":101}},{"value":"/ decoding.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84431,"byte_end":84444,"line_start":21,"line_end":21,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84599,"byte_end":84609,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"name":"decode_all","qualname":"::decode_all::DecodeAll::decode_all","value":"pub fn decode_all(&[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data.","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84475,"byte_end":84533,"line_start":23,"line_end":23,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84535,"byte_end":84538,"line_start":24,"line_end":24,"column_start":2,"column_end":5}},{"value":"/ If not all data is consumed, an error is returned.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84540,"byte_end":84594,"line_start":25,"line_end":25,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":778},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87380,"byte_end":87391,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"DecodeLimit","qualname":"::depth_limit::DecodeLimit","value":"DecodeLimit: Sized","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"decl_id":null,"docs":" Extension trait to [`Decode`] for decoding with a maximum recursion depth.\n","sig":null,"attributes":[{"value":"/ Extension trait to [`Decode`] for decoding with a maximum recursion depth.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87291,"byte_end":87369,"line_start":20,"line_end":20,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87515,"byte_end":87538,"line_start":25,"line_end":25,"column_start":5,"column_end":28},"name":"decode_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_with_depth_limit","value":"pub fn decode_with_depth_limit(u32, &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Decode `Self` with the given maximum recursion depth.","sig":null,"attributes":[{"value":"/ Decode `Self` with the given maximum recursion depth.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87402,"byte_end":87459,"line_start":22,"line_end":22,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87461,"byte_end":87464,"line_start":23,"line_end":23,"column_start":2,"column_end":5}},{"value":"/ If `limit` is hit, an error is returned.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87466,"byte_end":87510,"line_start":24,"line_end":24,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87733,"byte_end":87760,"line_start":30,"line_end":30,"column_start":5,"column_end":32},"name":"decode_all_with_depth_limit","qualname":"::depth_limit::DecodeLimit::decode_all_with_depth_limit","value":"pub fn decode_all_with_depth_limit(u32, &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Decode `Self` and consume all of the given input data.","sig":null,"attributes":[{"value":"/ Decode `Self` and consume all of the given input data.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87591,"byte_end":87649,"line_start":27,"line_end":27,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87651,"byte_end":87654,"line_start":28,"line_end":28,"column_start":2,"column_end":5}},{"value":"/ If not all data is consumed or `limit` is hit, an error is returned.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87656,"byte_end":87728,"line_start":29,"line_end":29,"column_start":2,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":830},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90400,"byte_end":90412,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"EncodeAppend","qualname":"::encode_append::EncodeAppend","value":"EncodeAppend","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" Trait that allows to append items to an encoded representation without\n decoding all previous added items.\n","sig":null,"attributes":[{"value":"/ Trait that allows to append items to an encoded representation without","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90276,"byte_end":90350,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ decoding all previous added items.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90351,"byte_end":90389,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":831},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90458,"byte_end":90462,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"name":"Item","qualname":"::encode_append::EncodeAppend::Item","value":"type Item: Encode;","parent":{"krate":0,"index":830},"children":[],"decl_id":null,"docs":" The item that will be appended.\n","sig":null,"attributes":[{"value":"/ The item that will be appended.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90416,"byte_end":90451,"line_start":25,"line_end":25,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":91079,"byte_end":91092,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"append_or_new","qualname":"::encode_append::EncodeAppend::append_or_new","value":"pub fn append_or_new<EncodeLikeItem, I>(Vec<u8>, I) -> Result<Vec<u8>, Error>\nwhere I: IntoIterator<Item = EncodeLikeItem>,\nEncodeLikeItem: EncodeLike<Self::Item>, I::IntoIter: ExactSizeIterator","parent":{"krate":0,"index":830},"children":[],"decl_id":null,"docs":" Append all items in `iter` to the given `self_encoded` representation\n or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","sig":null,"attributes":[{"value":"/ Append all items in `iter` to the given `self_encoded` representation","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90474,"byte_end":90547,"line_start":28,"line_end":28,"column_start":2,"column_end":75}},{"value":"/ or if `self_encoded` value is empty, `iter` is encoded to the `Self` representation.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90549,"byte_end":90637,"line_start":29,"line_end":29,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90639,"byte_end":90642,"line_start":30,"line_end":30,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90644,"byte_end":90657,"line_start":31,"line_end":31,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90659,"byte_end":90662,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90664,"byte_end":90671,"line_start":33,"line_end":33,"column_start":2,"column_end":9}},{"value":"/# use parity_scale_codec::EncodeAppend;","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90673,"byte_end":90715,"line_start":34,"line_end":34,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90717,"byte_end":90720,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ // Some encoded data","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90722,"byte_end":90746,"line_start":36,"line_end":36,"column_start":2,"column_end":26}},{"value":"/ let data = Vec::new();","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90748,"byte_end":90774,"line_start":37,"line_end":37,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90776,"byte_end":90779,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ let item = 8u32;","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90781,"byte_end":90801,"line_start":39,"line_end":39,"column_start":2,"column_end":22}},{"value":"/ let encoded = <Vec<u32> as EncodeAppend>::append_or_new(data, std::iter::once(&item)).expect(\"Adds new element\");","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90803,"byte_end":90920,"line_start":40,"line_end":40,"column_start":2,"column_end":119}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90922,"byte_end":90925,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ // Add multiple element","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90927,"byte_end":90954,"line_start":42,"line_end":42,"column_start":2,"column_end":29}},{"value":"/ <Vec<u32> as EncodeAppend>::append_or_new(encoded, &[700u32, 800u32, 10u32]).expect(\"Adds new elements\");","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":90956,"byte_end":91065,"line_start":43,"line_end":43,"column_start":2,"column_end":111}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":91067,"byte_end":91074,"line_start":44,"line_end":44,"column_start":2,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":861},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99474,"byte_end":99484,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"EncodeLike","qualname":"::encode_like::EncodeLike","value":"EncodeLike<T: Encode = Self>: Sized + Encode","parent":null,"children":[],"decl_id":null,"docs":" A marker trait that tells the compiler that a type encode to the same representation as another\n type.","sig":null,"attributes":[{"value":"/ A marker trait that tells the compiler that a type encode to the same representation as another","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97375,"byte_end":97474,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97475,"byte_end":97484,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97485,"byte_end":97488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ E.g. `Vec<u8>` has the same encoded representation as `&[u8]`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97489,"byte_end":97555,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97556,"byte_end":97559,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97560,"byte_end":97573,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97574,"byte_end":97577,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97578,"byte_end":97585,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97586,"byte_end":97636,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97637,"byte_end":97696,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97697,"byte_end":97747,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97748,"byte_end":97753,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97754,"byte_end":97757,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97758,"byte_end":97773,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     // Just pass the a reference to the normal tuple.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97774,"byte_end":97831,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/     encode_like::<(u32, u32), _>(&(1u32, 2u32));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97832,"byte_end":97884,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/     // Pass a tuple of references","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97885,"byte_end":97922,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, &2u32));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97923,"byte_end":97977,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/     // Pass a tuple of a reference and a value.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":97978,"byte_end":98029,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/     encode_like::<(u32, u32), _>(&(&1u32, 2u32));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98030,"byte_end":98083,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98084,"byte_end":98089,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98090,"byte_end":98097,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98098,"byte_end":98101,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98102,"byte_end":98115,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98116,"byte_end":98119,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The relation is not symetric, `T` implements `EncodeLike<U>` does not mean `U` has same","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98120,"byte_end":98211,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ representation as `T`.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98212,"byte_end":98238,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ For instance we could imaging a non zero integer to be encoded to the same representation as","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98239,"byte_end":98335,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/ the said integer but not the other way around.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98336,"byte_end":98386,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98387,"byte_end":98390,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Limitation","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98391,"byte_end":98407,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98408,"byte_end":98411,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Not all possible implementations of EncodeLike are implemented (for instance `Box<Box<u32>>`","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98412,"byte_end":98508,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ does not implement `EncodeLike<u32>`). To bypass this issue either open a PR to add the new","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98509,"byte_end":98604,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ combination or use [`Ref`](./struct.Ref.html) reference wrapper or define your own wrapper","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98605,"byte_end":98699,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ and implement `EncodeLike` on it as such:","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98700,"byte_end":98745,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98746,"byte_end":98753,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/# use parity_scale_codec::{EncodeLike, Encode, WrapperTypeEncode};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98754,"byte_end":98823,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ fn encode_like<T: Encode, R: EncodeLike<T>>(data: &R) {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98824,"byte_end":98883,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/     data.encode(); // Valid `T` encoded value.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98884,"byte_end":98934,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98935,"byte_end":98940,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98941,"byte_end":98944,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyWrapper<'a>(&'a (Box<Box<u32>>, u32));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98945,"byte_end":98996,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/ impl<'a> core::ops::Deref for MyWrapper<'a> { // Or use derive_deref crate","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":98997,"byte_end":99075,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/     type Target = (Box<Box<u32>>, u32);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99076,"byte_end":99119,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/     fn deref(&self) -> &Self::Target { &self.0 }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99120,"byte_end":99172,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99173,"byte_end":99178,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99179,"byte_end":99182,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl<'a> parity_scale_codec::WrapperTypeEncode for MyWrapper<'a> {}","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99183,"byte_end":99254,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ impl<'a> parity_scale_codec::EncodeLike<(u32, u32)> for MyWrapper<'a> {}","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99255,"byte_end":99331,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99332,"byte_end":99335,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99336,"byte_end":99351,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     let v = (Box::new(Box::new(0)), 0);","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99352,"byte_end":99395,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/     encode_like::<(u32, u32), _>(&MyWrapper(&v));","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99396,"byte_end":99449,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99450,"byte_end":99455,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99456,"byte_end":99463,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99921,"byte_end":99924,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"Ref","qualname":"::encode_like::Ref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference wrapper that implement encode like any type that is encoded like its inner type.","sig":null,"attributes":[{"value":"/ Reference wrapper that implement encode like any type that is encoded like its inner type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99523,"byte_end":99617,"line_start":75,"line_end":75,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99618,"byte_end":99621,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99622,"byte_end":99635,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99636,"byte_end":99639,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99640,"byte_end":99651,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use parity_scale_codec::{EncodeLike, Ref};","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99652,"byte_end":99700,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/ fn foo<T: EncodeLike<u8>>(t: T) -> T {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99701,"byte_end":99743,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/     store_t(Ref::from(&t)); // Store t without moving it, but only using a reference.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99744,"byte_end":99833,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/     t","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99834,"byte_end":99843,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99844,"byte_end":99849,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99850,"byte_end":99853,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ fn store_t<T: EncodeLike<u8>>(t: T) {","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99854,"byte_end":99895,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99896,"byte_end":99901,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99902,"byte_end":99909,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2457},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103263,"byte_end":103268,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459}],"decl_id":null,"docs":" Error type.","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103075,"byte_end":103090,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103091,"byte_end":103094,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Descriptive on `std` environment, with chaining error on `chain-error` environment,","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103095,"byte_end":103182,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ underscriptive otherwise.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103183,"byte_end":103212,"line_start":24,"line_end":24,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103581,"byte_end":103586,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"chain","qualname":"<Error>::chain","value":"pub fn chain<impl Into<Cow<'static, str>>: Into<Cow>>(Self,\n                                                      impl Into<Cow<'static, str>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Chain error message with description.","sig":null,"attributes":[{"value":"/ Chain error message with description.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103408,"byte_end":103449,"line_start":34,"line_end":34,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103451,"byte_end":103454,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ When compiled with `chain-error` feature, the description is chained, otherwise the","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103456,"byte_end":103543,"line_start":36,"line_end":36,"column_start":2,"column_end":89}},{"value":"/ description is ditched.","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103545,"byte_end":103572,"line_start":37,"line_end":37,"column_start":2,"column_end":29}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":13415,"byte_end":13420,"line_start":109,"line_end":109,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14670,"byte_end":14678,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15290,"byte_end":15291,"line_start":170,"line_end":170,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17560,"byte_end":17571,"line_start":252,"line_end":252,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19149,"byte_end":19150,"line_start":300,"line_end":300,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19376,"byte_end":19377,"line_start":305,"line_end":305,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19600,"byte_end":19601,"line_start":310,"line_end":310,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19988,"byte_end":19991,"line_start":321,"line_end":321,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20038,"byte_end":20041,"line_start":322,"line_end":322,"column_start":41,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20082,"byte_end":20085,"line_start":323,"line_end":323,"column_start":35,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20131,"byte_end":20132,"line_start":324,"line_end":324,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20302,"byte_end":20303,"line_start":329,"line_end":329,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20384,"byte_end":20385,"line_start":331,"line_end":331,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20571,"byte_end":20572,"line_start":336,"line_end":336,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20629,"byte_end":20632,"line_start":338,"line_end":338,"column_start":53,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20697,"byte_end":20700,"line_start":339,"line_end":339,"column_start":55,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20759,"byte_end":20762,"line_start":340,"line_end":340,"column_start":49,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20830,"byte_end":20831,"line_start":341,"line_end":341,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20977,"byte_end":20980,"line_start":347,"line_end":347,"column_start":40,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21028,"byte_end":21031,"line_start":348,"line_end":348,"column_start":42,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21073,"byte_end":21076,"line_start":349,"line_end":349,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21123,"byte_end":21124,"line_start":350,"line_end":350,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21168,"byte_end":21170,"line_start":352,"line_end":352,"column_start":40,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21218,"byte_end":21220,"line_start":353,"line_end":353,"column_start":42,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21262,"byte_end":21264,"line_start":354,"line_end":354,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21310,"byte_end":21311,"line_start":355,"line_end":355,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21344,"byte_end":21350,"line_start":357,"line_end":357,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21375,"byte_end":21381,"line_start":358,"line_end":358,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21412,"byte_end":21418,"line_start":359,"line_end":359,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21484,"byte_end":21485,"line_start":363,"line_end":363,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22136,"byte_end":22139,"line_start":391,"line_end":391,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22243,"byte_end":22246,"line_start":395,"line_end":395,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22350,"byte_end":22352,"line_start":399,"line_end":399,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22402,"byte_end":22403,"line_start":403,"line_end":403,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":23997,"byte_end":24003,"line_start":446,"line_end":446,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":24419,"byte_end":24425,"line_start":468,"line_end":468,"column_start":63,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":24558,"byte_end":24564,"line_start":476,"line_end":476,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25205,"byte_end":25215,"line_start":496,"line_end":496,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25316,"byte_end":25326,"line_start":502,"line_end":502,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25582,"byte_end":25592,"line_start":516,"line_end":516,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25613,"byte_end":25623,"line_start":518,"line_end":518,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25954,"byte_end":25960,"line_start":529,"line_end":529,"column_start":61,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25995,"byte_end":26001,"line_start":531,"line_end":531,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":26325,"byte_end":26331,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":30786,"byte_end":30789,"line_start":735,"line_end":735,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":30968,"byte_end":30979,"line_start":743,"line_end":743,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":31006,"byte_end":31017,"line_start":745,"line_end":745,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":31104,"byte_end":31115,"line_start":749,"line_end":749,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":31270,"byte_end":31276,"line_start":756,"line_end":756,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34263,"byte_end":34266,"line_start":850,"line_end":850,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34330,"byte_end":34333,"line_start":851,"line_end":851,"column_start":58,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34395,"byte_end":34398,"line_start":852,"line_end":852,"column_start":56,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34498,"byte_end":34501,"line_start":855,"line_end":855,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36427,"byte_end":36435,"line_start":917,"line_end":917,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36497,"byte_end":36505,"line_start":918,"line_end":918,"column_start":56,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36639,"byte_end":36647,"line_start":920,"line_end":920,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36716,"byte_end":36719,"line_start":921,"line_end":921,"column_start":63,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36754,"byte_end":36762,"line_start":923,"line_end":923,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":37692,"byte_end":37700,"line_start":961,"line_end":961,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":42802,"byte_end":42810,"line_start":1182,"line_end":1182,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":43039,"byte_end":43047,"line_start":1194,"line_end":1194,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":43430,"byte_end":43438,"line_start":1206,"line_end":1206,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":56820,"byte_end":56835,"line_start":28,"line_end":28,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57295,"byte_end":57306,"line_start":52,"line_end":52,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58214,"byte_end":58221,"line_start":84,"line_end":84,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58308,"byte_end":58315,"line_start":88,"line_end":88,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58748,"byte_end":58755,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58824,"byte_end":58831,"line_start":109,"line_end":109,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":59250,"byte_end":59260,"line_start":130,"line_end":130,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":59356,"byte_end":59366,"line_start":136,"line_end":136,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":59848,"byte_end":59855,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60487,"byte_end":60497,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60584,"byte_end":60591,"line_start":189,"line_end":189,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60770,"byte_end":60777,"line_start":196,"line_end":196,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61011,"byte_end":61018,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61472,"byte_end":61479,"line_start":215,"line_end":215,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61601,"byte_end":61602,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61734,"byte_end":61744,"line_start":225,"line_end":225,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61964,"byte_end":61974,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":62432,"byte_end":62439,"line_start":257,"line_end":257,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":62563,"byte_end":62573,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":63115,"byte_end":63122,"line_start":286,"line_end":286,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":63283,"byte_end":63293,"line_start":296,"line_end":296,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":63946,"byte_end":63953,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":64169,"byte_end":64179,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":65184,"byte_end":65191,"line_start":362,"line_end":362,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":65459,"byte_end":65469,"line_start":375,"line_end":375,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":66478,"byte_end":66485,"line_start":406,"line_end":406,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":66752,"byte_end":66759,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":67214,"byte_end":67221,"line_start":431,"line_end":431,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":67678,"byte_end":67685,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":68385,"byte_end":68392,"line_start":475,"line_end":475,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":69380,"byte_end":69387,"line_start":514,"line_end":514,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":70786,"byte_end":70793,"line_start":569,"line_end":569,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82275,"byte_end":82276,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/keyedvec.rs","byte_start":83380,"byte_end":83381,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84681,"byte_end":84682,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87930,"byte_end":87948,"line_start":40,"line_end":40,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":88529,"byte_end":88530,"line_start":69,"line_end":69,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":91339,"byte_end":91342,"line_start":55,"line_end":55,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":91716,"byte_end":91724,"line_start":71,"line_end":71,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100055,"byte_end":100058,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100198,"byte_end":100201,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100344,"byte_end":100347,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100417,"byte_end":100420,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103399,"byte_end":103404,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":104417,"byte_end":104422,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":104681,"byte_end":104686,"line_start":87,"line_end":87,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":104949,"byte_end":104954,"line_start":103,"line_end":103,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":13415,"byte_end":13420,"line_start":109,"line_end":109,"column_start":31,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2457},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":14670,"byte_end":14678,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":158},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":15290,"byte_end":15291,"line_start":170,"line_end":170,"column_start":36,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":170},"to":{"krate":0,"index":166}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":17560,"byte_end":17571,"line_start":252,"line_end":252,"column_start":17,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":166}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":18068,"byte_end":18073,"line_start":270,"line_end":270,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19095,"byte_end":19101,"line_start":299,"line_end":299,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19104,"byte_end":19110,"line_start":299,"line_end":299,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19149,"byte_end":19150,"line_start":300,"line_end":300,"column_start":36,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":223},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19309,"byte_end":19315,"line_start":304,"line_end":304,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":224}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19318,"byte_end":19328,"line_start":304,"line_end":304,"column_start":32,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":861},"to":{"krate":0,"index":224}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19376,"byte_end":19377,"line_start":305,"line_end":305,"column_start":45,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":226},"to":{"krate":0,"index":224}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19534,"byte_end":19540,"line_start":309,"line_end":309,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19543,"byte_end":19553,"line_start":309,"line_end":309,"column_start":31,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":224},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19600,"byte_end":19601,"line_start":310,"line_end":310,"column_start":44,"column_end":45},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":229},"to":{"krate":0,"index":227}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19940,"byte_end":19945,"line_start":319,"line_end":319,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3064},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":19988,"byte_end":19991,"line_start":321,"line_end":321,"column_start":39,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20038,"byte_end":20041,"line_start":322,"line_end":322,"column_start":41,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20082,"byte_end":20085,"line_start":323,"line_end":323,"column_start":35,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20131,"byte_end":20132,"line_start":324,"line_end":324,"column_start":40,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":238},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20302,"byte_end":20303,"line_start":329,"line_end":329,"column_start":36,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20384,"byte_end":20385,"line_start":331,"line_end":331,"column_start":37,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":250},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20571,"byte_end":20572,"line_start":336,"line_end":336,"column_start":40,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20629,"byte_end":20632,"line_start":338,"line_end":338,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":544},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20697,"byte_end":20700,"line_start":339,"line_end":339,"column_start":55,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":544},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20759,"byte_end":20762,"line_start":340,"line_end":340,"column_start":49,"column_end":52},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":544},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20830,"byte_end":20831,"line_start":341,"line_end":341,"column_start":58,"column_end":59},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":270},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":20977,"byte_end":20980,"line_start":347,"line_end":347,"column_start":40,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21028,"byte_end":21031,"line_start":348,"line_end":348,"column_start":42,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21073,"byte_end":21076,"line_start":349,"line_end":349,"column_start":36,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21123,"byte_end":21124,"line_start":350,"line_end":350,"column_start":41,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":280},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21168,"byte_end":21170,"line_start":352,"line_end":352,"column_start":40,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":4393},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21218,"byte_end":21220,"line_start":353,"line_end":353,"column_start":42,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4393},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21262,"byte_end":21264,"line_start":354,"line_end":354,"column_start":36,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":4393},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21310,"byte_end":21311,"line_start":355,"line_end":355,"column_start":40,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":288},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21344,"byte_end":21350,"line_start":357,"line_end":357,"column_start":29,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21375,"byte_end":21381,"line_start":358,"line_end":358,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21412,"byte_end":21418,"line_start":359,"line_end":359,"column_start":28,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":21484,"byte_end":21485,"line_start":363,"line_end":363,"column_start":23,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":295},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22048,"byte_end":22053,"line_start":387,"line_end":387,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22136,"byte_end":22139,"line_start":391,"line_end":391,"column_start":31,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22243,"byte_end":22246,"line_start":395,"line_end":395,"column_start":31,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22350,"byte_end":22352,"line_start":399,"line_end":399,"column_start":31,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":4393},"to":{"krate":0,"index":303}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":22402,"byte_end":22403,"line_start":403,"line_end":403,"column_start":23,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":316},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":23997,"byte_end":24003,"line_start":446,"line_end":446,"column_start":39,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":2,"index":40079},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":24419,"byte_end":24425,"line_start":468,"line_end":468,"column_start":63,"column_end":69},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":40079},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":24558,"byte_end":24564,"line_start":476,"line_end":476,"column_start":39,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":2,"index":40079},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25205,"byte_end":25215,"line_start":496,"line_end":496,"column_start":21,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25316,"byte_end":25326,"line_start":502,"line_end":502,"column_start":17,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25582,"byte_end":25592,"line_start":516,"line_end":516,"column_start":21,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25613,"byte_end":25623,"line_start":518,"line_end":518,"column_start":17,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25954,"byte_end":25960,"line_start":529,"line_end":529,"column_start":61,"column_end":67},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":25995,"byte_end":26001,"line_start":531,"line_end":531,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":26325,"byte_end":26331,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":30786,"byte_end":30789,"line_start":735,"line_end":735,"column_start":42,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":544},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":30968,"byte_end":30979,"line_start":743,"line_end":743,"column_start":24,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":2871},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":31006,"byte_end":31017,"line_start":745,"line_end":745,"column_start":20,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":2871},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":31104,"byte_end":31115,"line_start":749,"line_end":749,"column_start":20,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":2871},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":31270,"byte_end":31276,"line_start":756,"line_end":756,"column_start":17,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34263,"byte_end":34266,"line_start":850,"line_end":850,"column_start":31,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34330,"byte_end":34333,"line_start":851,"line_end":851,"column_start":58,"column_end":61},"kind":{"Impl":{"id":71}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34395,"byte_end":34398,"line_start":852,"line_end":852,"column_start":56,"column_end":59},"kind":{"Impl":{"id":72}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":34498,"byte_end":34501,"line_start":855,"line_end":855,"column_start":28,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36427,"byte_end":36435,"line_start":917,"line_end":917,"column_start":32,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36497,"byte_end":36505,"line_start":918,"line_end":918,"column_start":56,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36639,"byte_end":36647,"line_start":920,"line_end":920,"column_start":58,"column_end":66},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36716,"byte_end":36719,"line_start":921,"line_end":921,"column_start":63,"column_end":66},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":36754,"byte_end":36762,"line_start":923,"line_end":923,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":37692,"byte_end":37700,"line_start":961,"line_end":961,"column_start":28,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":42802,"byte_end":42810,"line_start":1182,"line_end":1182,"column_start":17,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":2,"index":42473},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":43039,"byte_end":43047,"line_start":1194,"line_end":1194,"column_start":17,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":2,"index":42473},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/codec.rs","byte_start":43430,"byte_end":43438,"line_start":1206,"line_end":1206,"column_start":21,"column_end":29},"kind":{"Impl":{"id":115}},"from":{"krate":2,"index":42473},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":56820,"byte_end":56835,"line_start":28,"line_end":28,"column_start":33,"column_end":48},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":166}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":57295,"byte_end":57306,"line_start":52,"line_end":52,"column_start":35,"column_end":46},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":550},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58214,"byte_end":58221,"line_start":84,"line_end":84,"column_start":21,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58308,"byte_end":58315,"line_start":88,"line_end":88,"column_start":35,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58442,"byte_end":58446,"line_start":93,"line_end":93,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":570}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58748,"byte_end":58755,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":58824,"byte_end":58831,"line_start":109,"line_end":109,"column_start":20,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":59250,"byte_end":59260,"line_start":130,"line_end":130,"column_start":28,"column_end":38},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":59356,"byte_end":59366,"line_start":136,"line_end":136,"column_start":24,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":59848,"byte_end":59855,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60487,"byte_end":60497,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60584,"byte_end":60591,"line_start":189,"line_end":189,"column_start":30,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":60770,"byte_end":60777,"line_start":196,"line_end":196,"column_start":30,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2392},"to":{"krate":22,"index":2075}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61011,"byte_end":61018,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2392},"to":{"krate":22,"index":1536}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61309,"byte_end":61314,"line_start":210,"line_end":210,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61472,"byte_end":61479,"line_start":215,"line_end":215,"column_start":40,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":320}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61601,"byte_end":61602,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":631},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61734,"byte_end":61744,"line_start":225,"line_end":225,"column_start":21,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":61964,"byte_end":61974,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":62432,"byte_end":62439,"line_start":257,"line_end":257,"column_start":25,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":62563,"byte_end":62573,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":63115,"byte_end":63122,"line_start":286,"line_end":286,"column_start":26,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":63283,"byte_end":63293,"line_start":296,"line_end":296,"column_start":21,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":63946,"byte_end":63953,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":64169,"byte_end":64179,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":65184,"byte_end":65191,"line_start":362,"line_end":362,"column_start":26,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":65459,"byte_end":65469,"line_start":375,"line_end":375,"column_start":21,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":66478,"byte_end":66485,"line_start":406,"line_end":406,"column_start":27,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":66752,"byte_end":66759,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":67214,"byte_end":67221,"line_start":431,"line_end":431,"column_start":17,"column_end":24},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":67678,"byte_end":67685,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":68385,"byte_end":68392,"line_start":475,"line_end":475,"column_start":17,"column_end":24},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":69380,"byte_end":69387,"line_start":514,"line_end":514,"column_start":17,"column_end":24},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/compact.rs","byte_start":70786,"byte_end":70793,"line_start":569,"line_end":569,"column_start":17,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/joiner.rs","byte_start":82275,"byte_end":82276,"line_start":28,"line_end":28,"column_start":20,"column_end":21},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":731},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/keyedvec.rs","byte_start":83380,"byte_end":83381,"line_start":28,"line_end":28,"column_start":29,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":749},"to":{"krate":0,"index":746}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84466,"byte_end":84471,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":761}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/decode_all.rs","byte_start":84681,"byte_end":84682,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":764},"to":{"krate":0,"index":761}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87393,"byte_end":87398,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":87930,"byte_end":87948,"line_start":40,"line_end":40,"column_start":29,"column_end":47},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/depth_limit.rs","byte_start":88529,"byte_end":88530,"line_start":69,"line_end":69,"column_start":33,"column_end":34},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":796},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":91339,"byte_end":91342,"line_start":55,"line_end":55,"column_start":34,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":830}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_append.rs","byte_start":91716,"byte_end":91724,"line_start":71,"line_end":71,"column_start":61,"column_end":69},"kind":{"Impl":{"id":159}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":830}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99504,"byte_end":99509,"line_start":73,"line_end":73,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":99512,"byte_end":99518,"line_start":73,"line_end":73,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100055,"byte_end":100058,"line_start":90,"line_end":90,"column_start":60,"column_end":63},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":863},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100198,"byte_end":100201,"line_start":95,"line_end":95,"column_start":55,"column_end":58},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":863},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100344,"byte_end":100347,"line_start":100,"line_end":100,"column_start":68,"column_end":71},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/encode_like.rs","byte_start":100417,"byte_end":100420,"line_start":101,"line_end":101,"column_start":57,"column_end":60},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":103399,"byte_end":103404,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":104417,"byte_end":104422,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2457},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":104681,"byte_end":104686,"line_start":87,"line_end":87,"column_start":29,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2457},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-scale-codec-2.1.1/src/error.rs","byte_start":104949,"byte_end":104954,"line_start":103,"line_end":103,"column_start":28,"column_end":33},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2457},"to":{"krate":1,"index":2326}}]}