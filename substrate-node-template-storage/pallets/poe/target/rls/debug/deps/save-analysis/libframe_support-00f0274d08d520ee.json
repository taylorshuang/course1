{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support","program":"/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","frame_support","--edition=2018","/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"once_cell\"","--cfg","feature=\"serde\"","--cfg","feature=\"sp-state-machine\"","--cfg","feature=\"std\"","-C","metadata=00f0274d08d520ee","-C","extra-filename=-00f0274d08d520ee","--out-dir","/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","-L","dependency=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","--extern","bitflags=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libbitflags-c759f8d07719039e.rmeta","--extern","frame_metadata=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libframe_metadata-e80f7cdad7e7fc65.rmeta","--extern","frame_support_procedural=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libframe_support_procedural-280bb57ace5d0892.so","--extern","impl_trait_for_tuples=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libimpl_trait_for_tuples-f82fa7ef92f977f5.so","--extern","log=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/liblog-f8abb66ffc16068c.rmeta","--extern","once_cell=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libonce_cell-48c6a38af64cb478.rmeta","--extern","codec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libparity_scale_codec-82cf01292b2737e4.rmeta","--extern","paste=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libpaste-a0be09445a5b8225.so","--extern","serde=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libserde-176d00028d140c10.rmeta","--extern","smallvec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsmallvec-1f20c4f5ff376b51.rmeta","--extern","sp_arithmetic=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_arithmetic-11ea52dbc4671016.rmeta","--extern","sp_core=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_core-16e99f7ce2a5e73d.rmeta","--extern","sp_inherents=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_inherents-aabd7963d331e520.rmeta","--extern","sp_io=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_io-2f8ad5fa2a447ed2.rmeta","--extern","sp_runtime=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_runtime-9108552572ce037d.rmeta","--extern","sp_staking=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_staking-41803d8304bf4be3.rmeta","--extern","sp_state_machine=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_state_machine-a54908d4317e5cb8.rmeta","--extern","sp_std=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_std-418d35f07a66cda9.rmeta","--extern","sp_tracing=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_tracing-a57c9dcce52aa79a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libframe_support-00f0274d08d520ee.rmeta"},"prelude":{"crate_id":{"name":"frame_support","disambiguator":[17679872418261244016,13898899474912562938]},"crate_root":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src","external_crates":[{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":19,"id":{"name":"sp_tracing","disambiguator":[17172114964806427549,5525253860101841043]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","num":20,"id":{"name":"sp_std","disambiguator":[2682330704443012759,7066719197896240899]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":21,"id":{"name":"parity_scale_codec","disambiguator":[9863673375670885385,13575924348645702016]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":22,"id":{"name":"parity_scale_codec_derive","disambiguator":[12287734400278992213,9757486750001437063]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":23,"id":{"name":"arrayvec","disambiguator":[10892931398947536880,12549142608372466002]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":24,"id":{"name":"byte_slice_cast","disambiguator":[709702439622045722,10712509937866309499]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","num":25,"id":{"name":"serde","disambiguator":[1013328755442281475,12414158929771731165]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":26,"id":{"name":"serde_derive","disambiguator":[18017531714661946146,12785885005030363355]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":27,"id":{"name":"tracing_core","disambiguator":[17412884218351998892,12851551301867950637]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":28,"id":{"name":"lazy_static","disambiguator":[13808990345214567022,8458474173850622234]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":29,"id":{"name":"tracing","disambiguator":[10411440744899187433,6603024184943082211]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":30,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":31,"id":{"name":"pin_project_lite","disambiguator":[990302580450785837,12633318721226934598]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":32,"id":{"name":"tracing_subscriber","disambiguator":[14430665297412802823,4985566841653032589]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":33,"id":{"name":"regex","disambiguator":[11790850479755752868,15823231302091808029]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":34,"id":{"name":"regex_syntax","disambiguator":[283791072225402269,18198010613972305146]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":35,"id":{"name":"aho_corasick","disambiguator":[8512872767130373619,14008354386057248474]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":36,"id":{"name":"memchr","disambiguator":[10965938807129842840,3881412707962956333]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":37,"id":{"name":"matchers","disambiguator":[8255961372920318437,12740628620887626896]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":38,"id":{"name":"regex_automata","disambiguator":[1320200042273339968,16373831564488978888]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":39,"id":{"name":"byteorder","disambiguator":[5572018000152704925,12716201805869705633]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":40,"id":{"name":"ansi_term","disambiguator":[13127847477166062082,5650376372185196485]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":41,"id":{"name":"tracing_log","disambiguator":[14290514781539487758,3196600907090575709]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":42,"id":{"name":"log","disambiguator":[1497614942449303687,18379385341275479390]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":43,"id":{"name":"serde_json","disambiguator":[6024639829599211841,17376114746246845812]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":44,"id":{"name":"itoa","disambiguator":[11245088896563774092,17202472579960509435]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":45,"id":{"name":"ryu","disambiguator":[11470782334523648659,8653981335039768051]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":46,"id":{"name":"tracing_serde","disambiguator":[9295691947455943722,3200594985159141884]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":47,"id":{"name":"sharded_slab","disambiguator":[14468346604908179086,4424391911497239624]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":48,"id":{"name":"thread_local","disambiguator":[6635237296722086754,1499244371394202430]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":49,"id":{"name":"once_cell","disambiguator":[11157995440888823552,13157792258295126306]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":50,"id":{"name":"parking_lot","disambiguator":[15677903307552072959,12242869384341018242]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":51,"id":{"name":"instant","disambiguator":[1050921259708134077,2956906816676224560]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":52,"id":{"name":"lock_api","disambiguator":[158843564838033861,45651071890610106]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":53,"id":{"name":"scopeguard","disambiguator":[2489176029422886084,9277911216960919523]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":54,"id":{"name":"parking_lot_core","disambiguator":[14305922968576712592,4316158812945800234]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","num":55,"id":{"name":"smallvec","disambiguator":[6137931805136025359,12093233173373222076]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":56,"id":{"name":"libc","disambiguator":[14817762749095948147,11358055470431825968]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":57,"id":{"name":"chrono","disambiguator":[482005194890796337,15366645184012618871]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":58,"id":{"name":"num_integer","disambiguator":[11647050115317718423,8118656174663800100]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":59,"id":{"name":"num_traits","disambiguator":[468258127332996008,10301193667755463888]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":60,"id":{"name":"sp_core","disambiguator":[17465833503552520086,14486576551778803498]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":61,"id":{"name":"sp_runtime_interface","disambiguator":[1755915659432366746,16371364100008394244]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":62,"id":{"name":"sp_wasm_interface","disambiguator":[1333710280556752891,5822633513417739624]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","num":63,"id":{"name":"impl_trait_for_tuples","disambiguator":[117060539399528790,7764638478372359332]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":64,"id":{"name":"wasmi","disambiguator":[13589826167754890772,9239933373639075900]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":65,"id":{"name":"memory_units","disambiguator":[6195364841199565730,12036049212193333628]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":66,"id":{"name":"parity_wasm","disambiguator":[4160865230177925414,9613519101215907930]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":67,"id":{"name":"wasmi_validation","disambiguator":[3489260205587041387,4895180464374019527]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":68,"id":{"name":"num_rational","disambiguator":[5751089981592618285,6971262963064967597]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":69,"id":{"name":"num_bigint","disambiguator":[7115601650226780755,10679174397042849356]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":70,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[8005924609508096746,13757987672185805269]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":71,"id":{"name":"sp_externalities","disambiguator":[15488217131828809976,5884621008457039066]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":72,"id":{"name":"sp_storage","disambiguator":[15045020432205932827,9648620918583478302]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":73,"id":{"name":"sp_debug_derive","disambiguator":[3324317708669829777,10747756365752449359]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":74,"id":{"name":"ref_cast","disambiguator":[7271053519566363135,6171874901284624371]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":75,"id":{"name":"ref_cast_impl","disambiguator":[10163985489832889473,17738597847102963750]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":76,"id":{"name":"impl_serde","disambiguator":[8302623203868640053,1295238832359201906]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":77,"id":{"name":"environmental","disambiguator":[6347572879023193819,10576995237739164786]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":78,"id":{"name":"primitive_types","disambiguator":[8674084511203116323,18057188405653416080]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":79,"id":{"name":"fixed_hash","disambiguator":[13610794239381522249,7680950302475378929]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":80,"id":{"name":"static_assertions","disambiguator":[2800172271264622283,16868211187352620724]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":81,"id":{"name":"rustc_hex","disambiguator":[17441328496794956230,970388078387978999]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":82,"id":{"name":"rand","disambiguator":[1052035276626706867,5697506913480721013]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":83,"id":{"name":"rand_core","disambiguator":[7873266713166871070,3900550269098453307]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":84,"id":{"name":"getrandom","disambiguator":[9974383089918438446,9797316574049181606]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":85,"id":{"name":"uint","disambiguator":[13394015458781351245,16732330757324271756]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":86,"id":{"name":"hex","disambiguator":[1631317938896525150,12209530835525682059]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":87,"id":{"name":"crunchy","disambiguator":[17619218191002482289,2269427654497740388]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":88,"id":{"name":"impl_codec","disambiguator":[6817402374190563707,62431368395485845]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":89,"id":{"name":"sha2","disambiguator":[14361898895340719512,13735529485073163947]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":90,"id":{"name":"block_buffer","disambiguator":[3978303305993926390,8510109573664866771]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":91,"id":{"name":"generic_array","disambiguator":[14243802694031767939,1438805964005100436]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":92,"id":{"name":"typenum","disambiguator":[6578675967236591406,12581686752636525447]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":93,"id":{"name":"digest","disambiguator":[18429762179806425625,13221353243685484064]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":94,"id":{"name":"opaque_debug","disambiguator":[17895543252167649484,1529394115718377223]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":95,"id":{"name":"cpufeatures","disambiguator":[17918414462149825574,1327987606936023573]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":96,"id":{"name":"tiny_keccak","disambiguator":[13602009866564011787,2115782419145344347]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":97,"id":{"name":"rand","disambiguator":[10104458195138828070,14708897342035781846]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":98,"id":{"name":"rand_core","disambiguator":[8168600991406213666,7731094546320414973]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":99,"id":{"name":"getrandom","disambiguator":[6092044390307500327,7449311275759007257]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":100,"id":{"name":"rand_chacha","disambiguator":[14715815460365568280,12277819961177439939]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":101,"id":{"name":"ppv_lite86","disambiguator":[16342140534606003648,15606045994417953711]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":102,"id":{"name":"rand_pcg","disambiguator":[5342309791845251759,7542980990625891251]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":103,"id":{"name":"base58","disambiguator":[9948311484690109531,1185773021601369373]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":104,"id":{"name":"zeroize","disambiguator":[12827983992855849373,6048528860301093046]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":105,"id":{"name":"zeroize_derive","disambiguator":[8846451443595622030,18415566963249974393]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":106,"id":{"name":"secrecy","disambiguator":[6374937265427411378,13253474212058473441]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":107,"id":{"name":"ed25519_dalek","disambiguator":[11458631928805191845,2169459921409803996]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":108,"id":{"name":"ed25519","disambiguator":[14626764059776426807,10374049177595959085]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":109,"id":{"name":"signature","disambiguator":[4173135177510074979,9672590489054501700]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":110,"id":{"name":"curve25519_dalek","disambiguator":[7224955439218375084,14168854423555505824]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":111,"id":{"name":"subtle","disambiguator":[10119681378915675371,11153087873494906157]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":112,"id":{"name":"substrate_bip39","disambiguator":[3229070020819919595,14815767372285391109]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":113,"id":{"name":"sha2","disambiguator":[14265813088146361728,13867311408166017397]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":114,"id":{"name":"block_buffer","disambiguator":[1106799921965378791,15142214264326969534]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":115,"id":{"name":"block_padding","disambiguator":[5959993695349436658,9158637949195490439]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":116,"id":{"name":"byte_tools","disambiguator":[11080469669453245737,5986290842937788228]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":117,"id":{"name":"generic_array","disambiguator":[468521920810271379,6308368386225795697]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":118,"id":{"name":"fake_simd","disambiguator":[1972530413421215340,11624191712553872842]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":119,"id":{"name":"opaque_debug","disambiguator":[10008437937655825331,10026059429878192125]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":120,"id":{"name":"digest","disambiguator":[10123127812650022976,14361139477428131810]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":121,"id":{"name":"hmac","disambiguator":[3194947236956686664,7280873657306625950]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":122,"id":{"name":"crypto_mac","disambiguator":[17088905705163145708,9206190900112779750]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":123,"id":{"name":"subtle","disambiguator":[1610201410659375534,16281438285148157453]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":124,"id":{"name":"pbkdf2","disambiguator":[12661020769218030930,8553159140014899406]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":125,"id":{"name":"schnorrkel","disambiguator":[11032496182252516084,14207469927636100396]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":126,"id":{"name":"arrayref","disambiguator":[7182672989026383584,9381797795682384601]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":127,"id":{"name":"curve25519_dalek","disambiguator":[4310340147329237785,8440771998134417436]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":128,"id":{"name":"merlin","disambiguator":[18419285781239816797,4244201307574362490]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":129,"id":{"name":"keccak","disambiguator":[4166653274539750117,6108742692447987433]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":130,"id":{"name":"arrayvec","disambiguator":[15424034480939085771,729664177555154619]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":131,"id":{"name":"bip39","disambiguator":[16431490494461771690,810437311810588290]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":132,"id":{"name":"thiserror","disambiguator":[11826844310775633001,7232977664804698519]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":133,"id":{"name":"thiserror_impl","disambiguator":[15034830344643695346,3570421962437252377]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":134,"id":{"name":"rustc_hash","disambiguator":[14034990781480687947,7284321016188038421]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":135,"id":{"name":"anyhow","disambiguator":[3957825682152055074,8833221029693451282]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":136,"id":{"name":"unicode_normalization","disambiguator":[9172877048366789641,8862097905030873859]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":137,"id":{"name":"tinyvec","disambiguator":[13436341677049969168,16911514833766957755]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":138,"id":{"name":"tinyvec_macros","disambiguator":[16861904645501066133,8072044776194435868]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":139,"id":{"name":"hmac","disambiguator":[11365093315327904620,16203764683919995972]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":140,"id":{"name":"crypto_mac","disambiguator":[14780830138013675860,2226593884177290324]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":141,"id":{"name":"pbkdf2","disambiguator":[7686476682800005969,18209456446927920857]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":142,"id":{"name":"secp256k1","disambiguator":[13568872506563113999,12640127276620014770]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":143,"id":{"name":"hmac_drbg","disambiguator":[1663604535369504733,2333569057007048699]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":144,"id":{"name":"hash_db","disambiguator":[17133198868170704571,9276653769965525230]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":145,"id":{"name":"hash256_std_hasher","disambiguator":[9173114410465121650,11021809311462915349]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":146,"id":{"name":"parity_util_mem","disambiguator":[5296572423964858728,6427433724444266698]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":147,"id":{"name":"parity_util_mem_derive","disambiguator":[745585518166065290,4657381930045939952]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":148,"id":{"name":"hashbrown","disambiguator":[1409465637180905903,13960350635997306741]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":149,"id":{"name":"ahash","disambiguator":[8115782313198960911,1618164949964186540]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":150,"id":{"name":"dyn_clonable","disambiguator":[5978395754545217841,17042432683714324860]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":151,"id":{"name":"dyn_clone","disambiguator":[229060014869772319,1761035384001269300]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":152,"id":{"name":"dyn_clonable_impl","disambiguator":[13244785219391527467,3542801123337569641]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":153,"id":{"name":"blake2_rfc","disambiguator":[1571535678652171201,13942110578131448606]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":154,"id":{"name":"arrayvec","disambiguator":[8379684785787417792,527361484718232246]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":155,"id":{"name":"nodrop","disambiguator":[4757912953554896694,8642030366303686606]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":156,"id":{"name":"constant_time_eq","disambiguator":[9691593894436788728,10833859660961375188]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":157,"id":{"name":"twox_hash","disambiguator":[4214654636705520795,13722061997964221786]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":158,"id":{"name":"cfg_if","disambiguator":[16032648971317944029,3391597224278519551]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":159,"id":{"name":"futures","disambiguator":[8396710240088635480,14225192720137542329]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":160,"id":{"name":"futures_core","disambiguator":[1146831099891734046,1355076027306116781]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":161,"id":{"name":"futures_util","disambiguator":[13436632395791529984,12798848195123694721]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":162,"id":{"name":"pin_utils","disambiguator":[9212437317893473852,3409318353310669863]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":163,"id":{"name":"futures_macro","disambiguator":[12489104770257520816,14771837375143540983]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":164,"id":{"name":"futures_task","disambiguator":[12764784445193263657,6118880633058950338]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":165,"id":{"name":"futures_sink","disambiguator":[6393790124496786777,16242734385808978800]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":166,"id":{"name":"futures_channel","disambiguator":[172535194296577207,13520333266307135331]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":167,"id":{"name":"slab","disambiguator":[15082221935741963601,9737765728630811904]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":168,"id":{"name":"futures_io","disambiguator":[16668743713700835307,9196727856865856789]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":169,"id":{"name":"futures_executor","disambiguator":[15253163258453458409,10165982875376273183]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":170,"id":{"name":"num_cpus","disambiguator":[673221153316475616,14141541788652730693]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":171,"id":{"name":"paste","disambiguator":[12143654713612889414,8249778021288085851]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":172,"id":{"name":"sp_state_machine","disambiguator":[11174963734054188837,13247643660873731905]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":173,"id":{"name":"sp_trie","disambiguator":[1045182311516083698,14648549408193115851]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":174,"id":{"name":"trie_db","disambiguator":[15887945843532262897,13261997196166292686]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":175,"id":{"name":"trie_root","disambiguator":[13115484494465907898,10092111208902148460]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":176,"id":{"name":"memory_db","disambiguator":[11466926832702196130,6165833531221435064]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":177,"id":{"name":"sp_panic_handler","disambiguator":[10083127503021557322,12990837717287795118]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":178,"id":{"name":"backtrace","disambiguator":[661002490634909096,9692025504576857177]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":179,"id":{"name":"rustc_demangle","disambiguator":[2499770586753271006,888685918063177590]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":180,"id":{"name":"addr2line","disambiguator":[4341677854237614482,17732111654398053666]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":181,"id":{"name":"gimli","disambiguator":[6539440397955681520,5544790458356978803]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":182,"id":{"name":"object","disambiguator":[15942519171338184044,728121135576459081]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":183,"id":{"name":"miniz_oxide","disambiguator":[7007881904853442861,1648100382242146301]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":184,"id":{"name":"adler","disambiguator":[601693519152416884,13836920305963515529]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":185,"id":{"name":"sp_io","disambiguator":[14036930754537658611,11986680873149918300]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":186,"id":{"name":"sp_keystore","disambiguator":[5889640710627991161,16744612074729778463]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":187,"id":{"name":"async_trait","disambiguator":[5079435754150642488,14600826846175272578]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":188,"id":{"name":"derive_more","disambiguator":[4605774131044783626,7153774826437987930]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","num":189,"id":{"name":"frame_metadata","disambiguator":[3861961086760243367,518835269896529047]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","num":190,"id":{"name":"sp_runtime","disambiguator":[16899049059128124027,7947678893580002786]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","num":191,"id":{"name":"sp_application_crypto","disambiguator":[5962680206587504098,1873018758936752686]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","num":192,"id":{"name":"sp_arithmetic","disambiguator":[12366176412486720700,16434090749860582712]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","num":193,"id":{"name":"integer_sqrt","disambiguator":[4828971386122269704,12979638080760466369]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","num":194,"id":{"name":"either","disambiguator":[5716995655836708761,2190946131691477301]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","num":195,"id":{"name":"sp_inherents","disambiguator":[18134249943815161956,214328450889923857]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","num":196,"id":{"name":"sp_staking","disambiguator":[2964171646033705118,13271557997675914076]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","num":197,"id":{"name":"frame_support_procedural","disambiguator":[16315696241770722980,15955977427335329021]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","num":198,"id":{"name":"bitflags","disambiguator":[3338513493405122659,15496964268187056915]}}],"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":686,"byte_end":74928,"line_start":18,"line_end":2274,"column_start":1,"column_end":42}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":884,"byte_end":894,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"alias_span":null,"name":"sp_tracing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":929,"byte_end":934,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":60,"index":4366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":953,"byte_end":957,"line_start":30,"line_end":30,"column_start":18,"column_end":22},"alias_span":null,"name":"Void","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":982,"byte_end":988,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1013,"byte_end":1018,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"alias_span":null,"name":"codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":49,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1067,"byte_end":1076,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"alias_span":null,"name":"once_cell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":171,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1101,"byte_end":1106,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":172,"index":3261},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1173,"byte_end":1191,"line_start":42,"line_end":42,"column_start":27,"column_end":45},"alias_span":null,"name":"BasicExternalities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":185,"index":267},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1233,"byte_end":1237,"line_start":44,"line_end":44,"column_start":26,"column_end":30},"alias_span":null,"name":"storage_root","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":185,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1216,"byte_end":1221,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"alias_span":null,"name":"sp_io","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":73,"index":63},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1297,"byte_end":1309,"line_start":46,"line_end":46,"column_start":21,"column_end":33},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":42,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1334,"byte_end":1337,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"alias_span":null,"name":"log","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":8144},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91538,"byte_end":91544,"line_start":21,"line_end":21,"column_start":25,"column_end":31},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":5,"index":4043},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91546,"byte_end":91549,"line_start":21,"line_end":21,"column_start":33,"column_end":36},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":5,"index":6773},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91561,"byte_end":91564,"line_start":21,"line_end":21,"column_start":48,"column_end":51},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2474},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91566,"byte_end":91571,"line_start":21,"line_end":21,"column_start":53,"column_end":58},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2477},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91566,"byte_end":91571,"line_start":21,"line_end":21,"column_start":53,"column_end":58},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2509},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91573,"byte_end":91575,"line_start":21,"line_end":21,"column_start":60,"column_end":62},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2511},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91573,"byte_end":91575,"line_start":21,"line_end":21,"column_start":60,"column_end":62},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2504},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91577,"byte_end":91586,"line_start":21,"line_end":21,"column_start":64,"column_end":73},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2508},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91577,"byte_end":91586,"line_start":21,"line_end":21,"column_start":64,"column_end":73},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":2,"index":2837},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91589,"byte_end":91595,"line_start":21,"line_end":21,"column_start":76,"column_end":82},"alias_span":null,"name":"marker","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":221},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91621,"byte_end":91626,"line_start":22,"line_end":22,"column_start":24,"column_end":29},"alias_span":null,"name":"Codec","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":861},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91628,"byte_end":91638,"line_start":22,"line_end":22,"column_start":31,"column_end":41},"alias_span":null,"name":"EncodeLike","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91640,"byte_end":91646,"line_start":22,"line_end":22,"column_start":43,"column_end":49},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":22,"index":337},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91640,"byte_end":91646,"line_start":22,"line_end":22,"column_start":43,"column_end":49},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":195},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91648,"byte_end":91654,"line_start":22,"line_end":22,"column_start":51,"column_end":57},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":22,"index":336},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91648,"byte_end":91654,"line_start":22,"line_end":22,"column_start":51,"column_end":57},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":145},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91656,"byte_end":91661,"line_start":22,"line_end":22,"column_start":59,"column_end":64},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":166},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91663,"byte_end":91669,"line_start":22,"line_end":22,"column_start":66,"column_end":72},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":623},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91671,"byte_end":91681,"line_start":22,"line_end":22,"column_start":74,"column_end":84},"alias_span":null,"name":"HasCompact","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":320},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91683,"byte_end":91694,"line_start":22,"line_end":22,"column_start":86,"column_end":97},"alias_span":null,"name":"EncodeAsRef","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":146},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91724,"byte_end":91740,"line_start":24,"line_end":24,"column_start":2,"column_end":18},"alias_span":null,"name":"FunctionMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":116},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91742,"byte_end":91757,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"alias_span":null,"name":"DecodeDifferent","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":61},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91759,"byte_end":91779,"line_start":24,"line_end":24,"column_start":37,"column_end":57},"alias_span":null,"name":"DecodeDifferentArray","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":178},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91781,"byte_end":91805,"line_start":24,"line_end":24,"column_start":59,"column_end":83},"alias_span":null,"name":"FunctionArgumentMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":318},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91808,"byte_end":91830,"line_start":25,"line_end":25,"column_start":2,"column_end":24},"alias_span":null,"name":"ModuleConstantMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":85},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91832,"byte_end":91843,"line_start":25,"line_end":25,"column_start":26,"column_end":37},"alias_span":null,"name":"DefaultByte","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":365},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91845,"byte_end":91862,"line_start":25,"line_end":25,"column_start":39,"column_end":56},"alias_span":null,"name":"DefaultByteGetter","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91845,"byte_end":91862,"line_start":25,"line_end":25,"column_start":39,"column_end":56},"alias_span":null,"name":"DefaultByteGetter","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":81},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91864,"byte_end":91883,"line_start":25,"line_end":25,"column_start":58,"column_end":77},"alias_span":null,"name":"ModuleErrorMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":189,"index":351},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91885,"byte_end":91898,"line_start":25,"line_end":25,"column_start":79,"column_end":92},"alias_span":null,"name":"ErrorMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3979},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91929,"byte_end":91944,"line_start":28,"line_end":28,"column_start":2,"column_end":17},"alias_span":null,"name":"GetDispatchInfo","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":10995},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91946,"byte_end":91958,"line_start":28,"line_end":28,"column_start":19,"column_end":31},"alias_span":null,"name":"DispatchInfo","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3941},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91960,"byte_end":91969,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"alias_span":null,"name":"WeighData","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3944},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91971,"byte_end":91987,"line_start":28,"line_end":28,"column_start":44,"column_end":60},"alias_span":null,"name":"ClassifyDispatch","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":190,"index":1709},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91989,"byte_end":92008,"line_start":28,"line_end":28,"column_start":62,"column_end":81},"alias_span":null,"name":"TransactionPriority","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92010,"byte_end":92016,"line_start":28,"line_end":28,"column_start":83,"column_end":89},"alias_span":null,"name":"Weight","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3947},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92019,"byte_end":92026,"line_start":29,"line_end":29,"column_start":2,"column_end":9},"alias_span":null,"name":"PaysFee","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":11024},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92028,"byte_end":92044,"line_start":29,"line_end":29,"column_start":11,"column_end":27},"alias_span":null,"name":"PostDispatchInfo","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3996},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92046,"byte_end":92066,"line_start":29,"line_end":29,"column_start":29,"column_end":49},"alias_span":null,"name":"WithPostDispatchInfo","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":190,"index":1565},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92100,"byte_end":92112,"line_start":31,"line_end":31,"column_start":30,"column_end":42},"alias_span":null,"name":"Dispatchable","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":190,"index":4559},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92114,"byte_end":92127,"line_start":31,"line_end":31,"column_start":44,"column_end":57},"alias_span":null,"name":"DispatchError","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":7481},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92156,"byte_end":92168,"line_start":33,"line_end":33,"column_start":2,"column_end":14},"alias_span":null,"name":"CallMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92170,"byte_end":92185,"line_start":33,"line_end":33,"column_start":16,"column_end":31},"alias_span":null,"name":"GetCallMetadata","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3606},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92187,"byte_end":92198,"line_start":33,"line_end":33,"column_start":33,"column_end":44},"alias_span":null,"name":"GetCallName","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3791},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92200,"byte_end":92222,"line_start":33,"line_end":33,"column_start":46,"column_end":68},"alias_span":null,"name":"UnfilteredDispatchable","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92224,"byte_end":92240,"line_start":33,"line_end":33,"column_start":70,"column_end":86},"alias_span":null,"name":"GetPalletVersion","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":190,"index":2151},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185270,"byte_end":185288,"line_start":28,"line_end":28,"column_start":21,"column_end":39},"alias_span":null,"name":"TransactionOutcome","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":72,"index":439},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":242201,"byte_end":242210,"line_start":26,"line_end":26,"column_start":28,"column_end":37},"alias_span":null,"name":"ChildInfo","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":72,"index":463},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":242212,"byte_end":242221,"line_start":26,"line_end":26,"column_start":39,"column_end":48},"alias_span":null,"name":"ChildType","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":185,"index":231},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":242246,"byte_end":242268,"line_start":27,"line_end":27,"column_start":23,"column_end":45},"alias_span":null,"name":"KillChildStorageResult","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249186,"byte_end":249196,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"alias_span":null,"name":"StorageMap","value":"","parent":{"krate":0,"index":534}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249218,"byte_end":249234,"line_start":32,"line_end":32,"column_start":21,"column_end":37},"alias_span":null,"name":"StorageDoubleMap","value":"","parent":{"krate":0,"index":534}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249251,"byte_end":249263,"line_start":33,"line_end":33,"column_start":16,"column_end":28},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":534}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303698,"byte_end":303710,"line_start":28,"line_end":28,"column_start":17,"column_end":29},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":1007}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303712,"byte_end":303732,"line_start":28,"line_end":28,"column_start":31,"column_end":51},"alias_span":null,"name":"StorageValueMetadata","value":"","parent":{"krate":0,"index":1007}},{"kind":"Use","ref_id":{"krate":0,"index":1197},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303749,"byte_end":303759,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"alias_span":null,"name":"StorageMap","value":"","parent":{"krate":0,"index":1007}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303761,"byte_end":303779,"line_start":29,"line_end":29,"column_start":27,"column_end":45},"alias_span":null,"name":"StorageMapMetadata","value":"","parent":{"krate":0,"index":1007}},{"kind":"Use","ref_id":{"krate":0,"index":1383},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303803,"byte_end":303819,"line_start":30,"line_end":30,"column_start":22,"column_end":38},"alias_span":null,"name":"StorageDoubleMap","value":"","parent":{"krate":0,"index":1007}},{"kind":"Use","ref_id":{"krate":0,"index":1533},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303821,"byte_end":303845,"line_start":30,"line_end":30,"column_start":40,"column_end":64},"alias_span":null,"name":"StorageDoubleMapMetadata","value":"","parent":{"krate":0,"index":1007}},{"kind":"Use","ref_id":{"krate":189,"index":252},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363708,"byte_end":363721,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"alias_span":null,"name":"EventMetadata","value":"","parent":{"krate":0,"index":2007}},{"kind":"Use","ref_id":{"krate":189,"index":116},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363723,"byte_end":363738,"line_start":24,"line_end":24,"column_start":41,"column_end":56},"alias_span":null,"name":"DecodeDifferent","value":"","parent":{"krate":0,"index":2007}},{"kind":"Use","ref_id":{"krate":189,"index":221},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363740,"byte_end":363758,"line_start":24,"line_end":24,"column_start":58,"column_end":76},"alias_span":null,"name":"OuterEventMetadata","value":"","parent":{"krate":0,"index":2007}},{"kind":"Use","ref_id":{"krate":189,"index":192},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363760,"byte_end":363768,"line_start":24,"line_end":24,"column_start":78,"column_end":86},"alias_span":null,"name":"FnEncode","value":"","parent":{"krate":0,"index":2007}},{"kind":"Use","ref_id":{"krate":189,"index":193},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363760,"byte_end":363768,"line_start":24,"line_end":24,"column_start":78,"column_end":86},"alias_span":null,"name":"FnEncode","value":"","parent":{"krate":0,"index":2007}},{"kind":"Use","ref_id":{"krate":189,"index":116},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384317,"byte_end":384332,"line_start":19,"line_end":19,"column_start":2,"column_end":17},"alias_span":null,"name":"DecodeDifferent","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":192},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384334,"byte_end":384342,"line_start":19,"line_end":19,"column_start":19,"column_end":27},"alias_span":null,"name":"FnEncode","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":193},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384334,"byte_end":384342,"line_start":19,"line_end":19,"column_start":19,"column_end":27},"alias_span":null,"name":"FnEncode","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":595},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384344,"byte_end":384359,"line_start":19,"line_end":19,"column_start":29,"column_end":44},"alias_span":null,"name":"RuntimeMetadata","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":708},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384361,"byte_end":384375,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"alias_span":null,"name":"ModuleMetadata","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":107},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384377,"byte_end":384403,"line_start":19,"line_end":19,"column_start":62,"column_end":88},"alias_span":null,"name":"RuntimeMetadataLastVersion","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":365},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384406,"byte_end":384423,"line_start":20,"line_end":20,"column_start":2,"column_end":19},"alias_span":null,"name":"DefaultByteGetter","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384406,"byte_end":384423,"line_start":20,"line_end":20,"column_start":2,"column_end":19},"alias_span":null,"name":"DefaultByteGetter","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":536},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384425,"byte_end":384448,"line_start":20,"line_end":20,"column_start":21,"column_end":44},"alias_span":null,"name":"RuntimeMetadataPrefixed","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":537},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384425,"byte_end":384448,"line_start":20,"line_end":20,"column_start":21,"column_end":44},"alias_span":null,"name":"RuntimeMetadataPrefixed","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":284},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384450,"byte_end":384470,"line_start":20,"line_end":20,"column_start":46,"column_end":66},"alias_span":null,"name":"StorageEntryMetadata","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":507},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384472,"byte_end":384487,"line_start":20,"line_end":20,"column_start":68,"column_end":83},"alias_span":null,"name":"StorageMetadata","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":430},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384490,"byte_end":384506,"line_start":21,"line_end":21,"column_start":2,"column_end":18},"alias_span":null,"name":"StorageEntryType","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":473},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384508,"byte_end":384528,"line_start":21,"line_end":21,"column_start":20,"column_end":40},"alias_span":null,"name":"StorageEntryModifier","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":85},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384530,"byte_end":384541,"line_start":21,"line_end":21,"column_start":42,"column_end":53},"alias_span":null,"name":"DefaultByte","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":386},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384543,"byte_end":384556,"line_start":21,"line_end":21,"column_start":55,"column_end":68},"alias_span":null,"name":"StorageHasher","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":81},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384558,"byte_end":384577,"line_start":21,"line_end":21,"column_start":70,"column_end":89},"alias_span":null,"name":"ModuleErrorMetadata","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":189,"index":566},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":384580,"byte_end":384597,"line_start":22,"line_end":22,"column_start":2,"column_end":19},"alias_span":null,"name":"ExtrinsicMetadata","value":"","parent":{"krate":0,"index":2026}},{"kind":"Use","ref_id":{"krate":5,"index":6773},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406585,"byte_end":406588,"line_start":19,"line_end":19,"column_start":29,"column_end":32},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":190,"index":1527},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406641,"byte_end":406646,"line_start":21,"line_end":21,"column_start":37,"column_end":42},"alias_span":null,"name":"BlockT","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":190,"index":1537},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406658,"byte_end":406667,"line_start":21,"line_end":21,"column_start":54,"column_end":63},"alias_span":null,"name":"Extrinsic","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":195,"index":128},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406710,"byte_end":406722,"line_start":24,"line_end":24,"column_start":2,"column_end":14},"alias_span":null,"name":"InherentData","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":195,"index":90},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406724,"byte_end":406739,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"alias_span":null,"name":"ProvideInherent","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":195,"index":149},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406741,"byte_end":406761,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"alias_span":null,"name":"CheckInherentsResult","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":195,"index":82},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406763,"byte_end":406775,"line_start":24,"line_end":24,"column_start":55,"column_end":67},"alias_span":null,"name":"IsFatalError","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":195,"index":39},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406777,"byte_end":406795,"line_start":24,"line_end":24,"column_start":69,"column_end":87},"alias_span":null,"name":"InherentIdentifier","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":195,"index":172},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":406798,"byte_end":406812,"line_start":25,"line_end":25,"column_start":2,"column_end":16},"alias_span":null,"name":"MakeFatalError","value":"","parent":{"krate":0,"index":2081}},{"kind":"Use","ref_id":{"krate":190,"index":1613},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","byte_start":419362,"byte_end":419378,"line_start":19,"line_end":19,"column_start":36,"column_end":52},"alias_span":null,"name":"ValidateUnsigned","value":"","parent":{"krate":0,"index":2112}},{"kind":"Use","ref_id":{"krate":190,"index":1732},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","byte_start":419447,"byte_end":419466,"line_start":22,"line_end":22,"column_start":2,"column_end":21},"alias_span":null,"name":"TransactionValidity","value":"","parent":{"krate":0,"index":2112}},{"kind":"Use","ref_id":{"krate":190,"index":4043},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","byte_start":419468,"byte_end":419486,"line_start":22,"line_end":22,"column_start":23,"column_end":41},"alias_span":null,"name":"UnknownTransaction","value":"","parent":{"krate":0,"index":2112}},{"kind":"Use","ref_id":{"krate":190,"index":4081},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","byte_start":419488,"byte_end":419512,"line_start":22,"line_end":22,"column_start":43,"column_end":67},"alias_span":null,"name":"TransactionValidityError","value":"","parent":{"krate":0,"index":2112}},{"kind":"Use","ref_id":{"krate":190,"index":4094},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","byte_start":419514,"byte_end":419531,"line_start":22,"line_end":22,"column_start":69,"column_end":86},"alias_span":null,"name":"TransactionSource","value":"","parent":{"krate":0,"index":2112}},{"kind":"Use","ref_id":{"krate":190,"index":3426},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423415,"byte_end":423426,"line_start":21,"line_end":21,"column_start":30,"column_end":41},"alias_span":null,"name":"LookupError","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":190,"index":3427},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423415,"byte_end":423426,"line_start":21,"line_end":21,"column_start":30,"column_end":41},"alias_span":null,"name":"LookupError","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":190,"index":3392},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423428,"byte_end":423437,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"alias_span":null,"name":"BadOrigin","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":190,"index":3393},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423428,"byte_end":423437,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"alias_span":null,"name":"BadOrigin","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":189,"index":81},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423480,"byte_end":423499,"line_start":23,"line_end":23,"column_start":26,"column_end":45},"alias_span":null,"name":"ModuleErrorMetadata","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":189,"index":351},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423501,"byte_end":423514,"line_start":23,"line_end":23,"column_start":47,"column_end":60},"alias_span":null,"name":"ErrorMetadata","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":189,"index":116},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423516,"byte_end":423531,"line_start":23,"line_end":23,"column_start":62,"column_end":77},"alias_span":null,"name":"DecodeDifferent","value":"","parent":{"krate":0,"index":2130}},{"kind":"Use","ref_id":{"krate":0,"index":2209},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433186,"byte_end":433194,"line_start":28,"line_end":28,"column_start":20,"column_end":28},"alias_span":null,"name":"Balanced","value":"","parent":{"krate":0,"index":2151}},{"kind":"Use","ref_id":{"krate":0,"index":2221},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433196,"byte_end":433206,"line_start":28,"line_end":28,"column_start":30,"column_end":40},"alias_span":null,"name":"Unbalanced","value":"","parent":{"krate":0,"index":2151}},{"kind":"Use","ref_id":{"krate":0,"index":2296},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433229,"byte_end":433238,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"alias_span":null,"name":"Imbalance","value":"","parent":{"krate":0,"index":2151}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433240,"byte_end":433259,"line_start":29,"line_end":29,"column_start":32,"column_end":51},"alias_span":null,"name":"HandleImbalanceDrop","value":"","parent":{"krate":0,"index":2151}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433261,"byte_end":433267,"line_start":29,"line_end":29,"column_start":53,"column_end":59},"alias_span":null,"name":"DebtOf","value":"","parent":{"krate":0,"index":2151}},{"kind":"Use","ref_id":{"krate":0,"index":2337},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433269,"byte_end":433277,"line_start":29,"line_end":29,"column_start":61,"column_end":69},"alias_span":null,"name":"CreditOf","value":"","parent":{"krate":0,"index":2151}},{"kind":"Use","ref_id":{"krate":0,"index":2497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":463925,"byte_end":463933,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"alias_span":null,"name":"Balanced","value":"","parent":{"krate":0,"index":2445}},{"kind":"Use","ref_id":{"krate":0,"index":2509},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":463935,"byte_end":463945,"line_start":26,"line_end":26,"column_start":30,"column_end":40},"alias_span":null,"name":"Unbalanced","value":"","parent":{"krate":0,"index":2445}},{"kind":"Use","ref_id":{"krate":0,"index":2593},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":463983,"byte_end":463992,"line_start":28,"line_end":28,"column_start":21,"column_end":30},"alias_span":null,"name":"Imbalance","value":"","parent":{"krate":0,"index":2445}},{"kind":"Use","ref_id":{"krate":0,"index":2589},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":463994,"byte_end":464013,"line_start":28,"line_end":28,"column_start":32,"column_end":51},"alias_span":null,"name":"HandleImbalanceDrop","value":"","parent":{"krate":0,"index":2445}},{"kind":"Use","ref_id":{"krate":0,"index":2627},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464015,"byte_end":464021,"line_start":28,"line_end":28,"column_start":53,"column_end":59},"alias_span":null,"name":"DebtOf","value":"","parent":{"krate":0,"index":2445}},{"kind":"Use","ref_id":{"krate":0,"index":2630},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464023,"byte_end":464031,"line_start":28,"line_end":28,"column_start":61,"column_end":69},"alias_span":null,"name":"CreditOf","value":"","parent":{"krate":0,"index":2445}},{"kind":"Use","ref_id":{"krate":0,"index":2726},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493042,"byte_end":493060,"line_start":28,"line_end":28,"column_start":21,"column_end":39},"alias_span":null,"name":"ReservableCurrency","value":"","parent":{"krate":0,"index":2681}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493095,"byte_end":493111,"line_start":30,"line_end":30,"column_start":20,"column_end":36},"alias_span":null,"name":"LockableCurrency","value":"","parent":{"krate":0,"index":2681}},{"kind":"Use","ref_id":{"krate":0,"index":2759},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493113,"byte_end":493128,"line_start":30,"line_end":30,"column_start":38,"column_end":53},"alias_span":null,"name":"VestingSchedule","value":"","parent":{"krate":0,"index":2681}},{"kind":"Use","ref_id":{"krate":0,"index":2750},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493130,"byte_end":493144,"line_start":30,"line_end":30,"column_start":55,"column_end":69},"alias_span":null,"name":"LockIdentifier","value":"","parent":{"krate":0,"index":2681}},{"kind":"Use","ref_id":{"krate":0,"index":2834},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508231,"byte_end":508243,"line_start":28,"line_end":28,"column_start":25,"column_end":37},"alias_span":null,"name":"SplitTwoWays","value":"","parent":{"krate":0,"index":2799}},{"kind":"Use","ref_id":{"krate":0,"index":2871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508271,"byte_end":508286,"line_start":29,"line_end":29,"column_start":27,"column_end":42},"alias_span":null,"name":"SignedImbalance","value":"","parent":{"krate":0,"index":2799}},{"kind":"Use","ref_id":{"krate":0,"index":2891},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508311,"byte_end":508323,"line_start":30,"line_end":30,"column_start":24,"column_end":36},"alias_span":null,"name":"OnUnbalanced","value":"","parent":{"krate":0,"index":2799}},{"kind":"Use","ref_id":{"krate":0,"index":4497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":432030,"byte_end":432049,"line_start":26,"line_end":26,"column_start":2,"column_end":21},"alias_span":null,"name":"WithdrawConsequence","value":"","parent":{"krate":0,"index":2150}},{"kind":"Use","ref_id":{"krate":0,"index":4532},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":432051,"byte_end":432069,"line_start":26,"line_end":26,"column_start":23,"column_end":41},"alias_span":null,"name":"DepositConsequence","value":"","parent":{"krate":0,"index":2150}},{"kind":"Use","ref_id":{"krate":0,"index":4552},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":432071,"byte_end":432091,"line_start":26,"line_end":26,"column_start":43,"column_end":63},"alias_span":null,"name":"ExistenceRequirement","value":"","parent":{"krate":0,"index":2150}},{"kind":"Use","ref_id":{"krate":0,"index":4566},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":432093,"byte_end":432106,"line_start":26,"line_end":26,"column_start":65,"column_end":78},"alias_span":null,"name":"BalanceStatus","value":"","parent":{"krate":0,"index":2150}},{"kind":"Use","ref_id":{"krate":0,"index":4609},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":432108,"byte_end":432123,"line_start":26,"line_end":26,"column_start":80,"column_end":95},"alias_span":null,"name":"WithdrawReasons","value":"","parent":{"krate":0,"index":2150}},{"kind":"Use","ref_id":{"krate":0,"index":2910},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":432147,"byte_end":432156,"line_start":28,"line_end":28,"column_start":20,"column_end":29},"alias_span":null,"name":"Imbalance","value":"","parent":{"krate":0,"index":2150}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429292,"byte_end":429300,"line_start":23,"line_end":23,"column_start":17,"column_end":25},"alias_span":null,"name":"fungible","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2445},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429318,"byte_end":429327,"line_start":24,"line_end":24,"column_start":17,"column_end":26},"alias_span":null,"name":"fungibles","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2776},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429358,"byte_end":429366,"line_start":26,"line_end":26,"column_start":2,"column_end":10},"alias_span":null,"name":"Currency","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2750},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429368,"byte_end":429382,"line_start":26,"line_end":26,"column_start":12,"column_end":26},"alias_span":null,"name":"LockIdentifier","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429384,"byte_end":429400,"line_start":26,"line_end":26,"column_start":28,"column_end":44},"alias_span":null,"name":"LockableCurrency","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2726},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429402,"byte_end":429420,"line_start":26,"line_end":26,"column_start":46,"column_end":64},"alias_span":null,"name":"ReservableCurrency","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2759},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429422,"byte_end":429437,"line_start":26,"line_end":26,"column_start":66,"column_end":81},"alias_span":null,"name":"VestingSchedule","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2910},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429470,"byte_end":429479,"line_start":28,"line_end":28,"column_start":29,"column_end":38},"alias_span":null,"name":"Imbalance","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2891},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429481,"byte_end":429493,"line_start":28,"line_end":28,"column_start":40,"column_end":52},"alias_span":null,"name":"OnUnbalanced","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429495,"byte_end":429510,"line_start":28,"line_end":28,"column_start":54,"column_end":69},"alias_span":null,"name":"SignedImbalance","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":4552},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429530,"byte_end":429550,"line_start":29,"line_end":29,"column_start":18,"column_end":38},"alias_span":null,"name":"ExistenceRequirement","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":4609},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429552,"byte_end":429567,"line_start":29,"line_end":29,"column_start":40,"column_end":55},"alias_span":null,"name":"WithdrawReasons","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":4566},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429569,"byte_end":429582,"line_start":29,"line_end":29,"column_start":57,"column_end":70},"alias_span":null,"name":"BalanceStatus","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3034},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429619,"byte_end":429627,"line_start":33,"line_end":33,"column_start":2,"column_end":10},"alias_span":null,"name":"Contains","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3070},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429629,"byte_end":429648,"line_start":33,"line_end":33,"column_start":12,"column_end":31},"alias_span":null,"name":"ContainsLengthBound","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3045},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429650,"byte_end":429663,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"SortedMembers","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3073},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429665,"byte_end":429682,"line_start":33,"line_end":33,"column_start":48,"column_end":65},"alias_span":null,"name":"InitializeMembers","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429684,"byte_end":429697,"line_start":33,"line_end":33,"column_start":67,"column_end":80},"alias_span":null,"name":"ChangeMembers","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3037},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429699,"byte_end":429702,"line_start":33,"line_end":33,"column_start":82,"column_end":85},"alias_span":null,"name":"All","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3058},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429704,"byte_end":429711,"line_start":33,"line_end":33,"column_start":87,"column_end":94},"alias_span":null,"name":"IsInVec","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429714,"byte_end":429724,"line_start":34,"line_end":34,"column_start":2,"column_end":12},"alias_span":null,"name":"AsContains","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3156},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429769,"byte_end":429781,"line_start":39,"line_end":39,"column_start":2,"column_end":14},"alias_span":null,"name":"ValidatorSet","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3162},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429783,"byte_end":429813,"line_start":39,"line_end":39,"column_start":16,"column_end":46},"alias_span":null,"name":"ValidatorSetWithIdentification","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3180},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429815,"byte_end":429832,"line_start":39,"line_end":39,"column_start":48,"column_end":65},"alias_span":null,"name":"OneSessionHandler","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3166},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429834,"byte_end":429844,"line_start":39,"line_end":39,"column_start":67,"column_end":77},"alias_span":null,"name":"FindAuthor","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3176},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429846,"byte_end":429856,"line_start":39,"line_end":39,"column_start":79,"column_end":89},"alias_span":null,"name":"VerifySeal","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3201},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429859,"byte_end":429881,"line_start":40,"line_end":40,"column_start":2,"column_end":24},"alias_span":null,"name":"EstimateNextNewSession","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3191},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429883,"byte_end":429910,"line_start":40,"line_end":40,"column_start":26,"column_end":53},"alias_span":null,"name":"EstimateNextSessionRotation","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3209},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429912,"byte_end":429931,"line_start":40,"line_end":40,"column_start":55,"column_end":74},"alias_span":null,"name":"KeyOwnerProofSystem","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3227},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429933,"byte_end":429954,"line_start":40,"line_end":40,"column_start":76,"column_end":97},"alias_span":null,"name":"ValidatorRegistration","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3221},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429957,"byte_end":429965,"line_start":41,"line_end":41,"column_start":2,"column_end":10},"alias_span":null,"name":"Lateness","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3265},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430002,"byte_end":430008,"line_start":46,"line_end":46,"column_start":2,"column_end":8},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3271},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430010,"byte_end":430021,"line_start":46,"line_end":46,"column_start":10,"column_end":21},"alias_span":null,"name":"FilterStack","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3279},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430023,"byte_end":430039,"line_start":46,"line_end":46,"column_start":23,"column_end":39},"alias_span":null,"name":"FilterStackGuard","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3284},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430041,"byte_end":430057,"line_start":46,"line_end":46,"column_start":41,"column_end":57},"alias_span":null,"name":"ClearFilterGuard","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3307},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430059,"byte_end":430073,"line_start":46,"line_end":46,"column_start":59,"column_end":73},"alias_span":null,"name":"InstanceFilter","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":5269},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430075,"byte_end":430088,"line_start":46,"line_end":46,"column_start":75,"column_end":88},"alias_span":null,"name":"IntegrityTest","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430121,"byte_end":430124,"line_start":51,"line_end":51,"column_start":2,"column_end":5},"alias_span":null,"name":"Len","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430126,"byte_end":430129,"line_start":51,"line_end":51,"column_start":7,"column_end":10},"alias_span":null,"name":"Get","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3377},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430131,"byte_end":430141,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"alias_span":null,"name":"GetDefault","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430131,"byte_end":430141,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"alias_span":null,"name":"GetDefault","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3407},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430143,"byte_end":430157,"line_start":51,"line_end":51,"column_start":24,"column_end":38},"alias_span":null,"name":"HandleLifetime","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3382},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430159,"byte_end":430166,"line_start":51,"line_end":51,"column_start":40,"column_end":47},"alias_span":null,"name":"TryDrop","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3413},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430168,"byte_end":430172,"line_start":51,"line_end":51,"column_start":49,"column_end":53},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3416},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430174,"byte_end":430182,"line_start":51,"line_end":51,"column_start":55,"column_end":63},"alias_span":null,"name":"UnixTime","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3418},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430184,"byte_end":430190,"line_start":51,"line_end":51,"column_start":65,"column_end":71},"alias_span":null,"name":"IsType","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3430},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430192,"byte_end":430201,"line_start":51,"line_end":51,"column_start":73,"column_end":82},"alias_span":null,"name":"IsSubType","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3433},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430203,"byte_end":430215,"line_start":51,"line_end":51,"column_start":84,"column_end":96},"alias_span":null,"name":"ExecuteBlock","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3384},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430218,"byte_end":430229,"line_start":52,"line_end":52,"column_start":2,"column_end":13},"alias_span":null,"name":"SameOrOther","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":5798},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430231,"byte_end":430243,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"alias_span":null,"name":"OnNewAccount","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6359},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430245,"byte_end":430260,"line_start":52,"line_end":52,"column_start":29,"column_end":44},"alias_span":null,"name":"OnKilledAccount","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6920},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430262,"byte_end":430276,"line_start":52,"line_end":52,"column_start":46,"column_end":60},"alias_span":null,"name":"OffchainWorker","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3439},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430278,"byte_end":430288,"line_start":52,"line_end":52,"column_start":62,"column_end":72},"alias_span":null,"name":"GetBacking","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430290,"byte_end":430297,"line_start":52,"line_end":52,"column_start":74,"column_end":81},"alias_span":null,"name":"Backing","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3444},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430299,"byte_end":430312,"line_start":52,"line_end":52,"column_start":83,"column_end":96},"alias_span":null,"name":"ExtrinsicCall","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3441},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430315,"byte_end":430338,"line_start":53,"line_end":53,"column_start":2,"column_end":25},"alias_span":null,"name":"EnsureInherentsAreFirst","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3524},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430381,"byte_end":430390,"line_start":57,"line_end":57,"column_start":22,"column_end":31},"alias_span":null,"name":"StoredMap","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430392,"byte_end":430406,"line_start":57,"line_end":57,"column_start":33,"column_end":47},"alias_span":null,"name":"StorageMapShim","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3579},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430445,"byte_end":430455,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"alias_span":null,"name":"Randomness","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":7481},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430493,"byte_end":430505,"line_start":63,"line_end":63,"column_start":2,"column_end":14},"alias_span":null,"name":"CallMetadata","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430507,"byte_end":430522,"line_start":63,"line_end":63,"column_start":16,"column_end":31},"alias_span":null,"name":"GetCallMetadata","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3606},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430524,"byte_end":430535,"line_start":63,"line_end":63,"column_start":33,"column_end":44},"alias_span":null,"name":"GetCallName","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3598},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430537,"byte_end":430547,"line_start":63,"line_end":63,"column_start":46,"column_end":56},"alias_span":null,"name":"PalletInfo","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":7497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430549,"byte_end":430562,"line_start":63,"line_end":63,"column_start":58,"column_end":71},"alias_span":null,"name":"PalletVersion","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430564,"byte_end":430580,"line_start":63,"line_end":63,"column_start":73,"column_end":89},"alias_span":null,"name":"GetPalletVersion","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3613},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430583,"byte_end":430617,"line_start":64,"line_end":64,"column_start":2,"column_end":36},"alias_span":null,"name":"PALLET_VERSION_STORAGE_KEY_POSTFIX","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3603},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430619,"byte_end":430635,"line_start":64,"line_end":64,"column_start":38,"column_end":54},"alias_span":null,"name":"PalletInfoAccess","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3674},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430668,"byte_end":430673,"line_start":68,"line_end":68,"column_start":17,"column_end":22},"alias_span":null,"name":"Hooks","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":9203},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430675,"byte_end":430684,"line_start":68,"line_end":68,"column_start":24,"column_end":33},"alias_span":null,"name":"OnGenesis","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3666},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430686,"byte_end":430698,"line_start":68,"line_end":68,"column_start":35,"column_end":47},"alias_span":null,"name":"OnInitialize","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":8084},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430700,"byte_end":430710,"line_start":68,"line_end":68,"column_start":49,"column_end":59},"alias_span":null,"name":"OnFinalize","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430712,"byte_end":430718,"line_start":68,"line_end":68,"column_start":61,"column_end":67},"alias_span":null,"name":"OnIdle","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3672},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430720,"byte_end":430736,"line_start":68,"line_end":68,"column_start":69,"column_end":85},"alias_span":null,"name":"OnRuntimeUpgrade","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":10259},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430738,"byte_end":430752,"line_start":68,"line_end":68,"column_start":87,"column_end":101},"alias_span":null,"name":"OnTimestampSet","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430898,"byte_end":430910,"line_start":72,"line_end":72,"column_start":16,"column_end":28},"alias_span":null,"name":"GenesisBuild","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3765},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430962,"byte_end":430970,"line_start":76,"line_end":76,"column_start":19,"column_end":27},"alias_span":null,"name":"Instance","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3768},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430972,"byte_end":430987,"line_start":76,"line_end":76,"column_start":29,"column_end":44},"alias_span":null,"name":"StorageInstance","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3785},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431024,"byte_end":431036,"line_start":79,"line_end":79,"column_start":20,"column_end":32},"alias_span":null,"name":"EnsureOrigin","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3794},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431038,"byte_end":431049,"line_start":79,"line_end":79,"column_start":34,"column_end":45},"alias_span":null,"name":"OriginTrait","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3791},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431051,"byte_end":431073,"line_start":79,"line_end":79,"column_start":47,"column_end":69},"alias_span":null,"name":"UnfilteredDispatchable","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3832},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431106,"byte_end":431120,"line_start":82,"line_end":82,"column_start":18,"column_end":32},"alias_span":null,"name":"CurrencyToVote","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431122,"byte_end":431146,"line_start":82,"line_end":82,"column_start":34,"column_end":58},"alias_span":null,"name":"SaturatingCurrencyToVote","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3844},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431122,"byte_end":431146,"line_start":82,"line_end":82,"column_start":34,"column_end":58},"alias_span":null,"name":"SaturatingCurrencyToVote","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3836},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431148,"byte_end":431166,"line_start":82,"line_end":82,"column_start":60,"column_end":78},"alias_span":null,"name":"U128CurrencyToVote","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":3837},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":431148,"byte_end":431166,"line_start":82,"line_end":82,"column_start":60,"column_end":78},"alias_span":null,"name":"U128CurrencyToVote","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":190,"index":1709},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605508,"byte_end":605527,"line_start":141,"line_end":141,"column_start":43,"column_end":62},"alias_span":null,"name":"TransactionPriority","value":"","parent":{"krate":0,"index":3859}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1685,"byte_end":1692,"line_start":73,"line_end":73,"column_start":2,"column_end":9},"alias_span":null,"name":"Twox256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1685,"byte_end":1692,"line_start":73,"line_end":73,"column_start":2,"column_end":9},"alias_span":null,"name":"Twox256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1991},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1694,"byte_end":1701,"line_start":73,"line_end":73,"column_start":11,"column_end":18},"alias_span":null,"name":"Twox128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1992},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1694,"byte_end":1701,"line_start":73,"line_end":73,"column_start":11,"column_end":18},"alias_span":null,"name":"Twox128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1703,"byte_end":1713,"line_start":73,"line_end":73,"column_start":20,"column_end":30},"alias_span":null,"name":"Blake2_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1984},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1703,"byte_end":1713,"line_start":73,"line_end":73,"column_start":20,"column_end":30},"alias_span":null,"name":"Blake2_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1975},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1715,"byte_end":1725,"line_start":73,"line_end":73,"column_start":32,"column_end":42},"alias_span":null,"name":"Blake2_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1976},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1715,"byte_end":1725,"line_start":73,"line_end":73,"column_start":32,"column_end":42},"alias_span":null,"name":"Blake2_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1951},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1727,"byte_end":1735,"line_start":73,"line_end":73,"column_start":44,"column_end":52},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1727,"byte_end":1735,"line_start":73,"line_end":73,"column_start":44,"column_end":52},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1959},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1737,"byte_end":1749,"line_start":73,"line_end":73,"column_start":54,"column_end":66},"alias_span":null,"name":"Twox64Concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1960},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1737,"byte_end":1749,"line_start":73,"line_end":73,"column_start":54,"column_end":66},"alias_span":null,"name":"Twox64Concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1967},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1751,"byte_end":1767,"line_start":73,"line_end":73,"column_start":68,"column_end":84},"alias_span":null,"name":"Blake2_128Concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1751,"byte_end":1767,"line_start":73,"line_end":73,"column_start":68,"column_end":84},"alias_span":null,"name":"Blake2_128Concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1769,"byte_end":1777,"line_start":73,"line_end":73,"column_start":86,"column_end":94},"alias_span":null,"name":"Hashable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1945},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1780,"byte_end":1793,"line_start":74,"line_end":74,"column_start":2,"column_end":15},"alias_span":null,"name":"StorageHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1949},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1795,"byte_end":1818,"line_start":74,"line_end":74,"column_start":17,"column_end":40},"alias_span":null,"name":"ReversibleStorageHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1848,"byte_end":1860,"line_start":77,"line_end":77,"column_start":2,"column_end":14},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1862,"byte_end":1872,"line_start":77,"line_end":77,"column_start":16,"column_end":26},"alias_span":null,"name":"StorageMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1744},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1874,"byte_end":1890,"line_start":77,"line_end":77,"column_start":28,"column_end":44},"alias_span":null,"name":"StorageDoubleMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1855},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1892,"byte_end":1910,"line_start":77,"line_end":77,"column_start":46,"column_end":64},"alias_span":null,"name":"StoragePrefixedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1720},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1912,"byte_end":1930,"line_start":77,"line_end":77,"column_start":66,"column_end":84},"alias_span":null,"name":"IterableStorageMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1729},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1933,"byte_end":1957,"line_start":78,"line_end":78,"column_start":2,"column_end":26},"alias_span":null,"name":"IterableStorageDoubleMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1959,"byte_end":1968,"line_start":78,"line_end":78,"column_start":28,"column_end":37},"alias_span":null,"name":"migration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1971,"byte_end":1982,"line_start":79,"line_end":79,"column_start":2,"column_end":13},"alias_span":null,"name":"bounded_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4452},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1991,"byte_end":2001,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"alias_span":null,"name":"BoundedVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2032,"byte_end":2041,"line_start":81,"line_end":81,"column_start":26,"column_end":35},"alias_span":null,"name":"Parameter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2043,"byte_end":2051,"line_start":81,"line_end":81,"column_start":37,"column_end":45},"alias_span":null,"name":"Callable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":190,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2062,"byte_end":2072,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"alias_span":null,"name":"sp_runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":190,"index":2008},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2081,"byte_end":2098,"line_start":82,"line_end":82,"column_start":28,"column_end":45},"alias_span":null,"name":"ConsensusEngineId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":190,"index":2141},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2100,"byte_end":2105,"line_start":82,"line_end":82,"column_start":47,"column_end":52},"alias_span":null,"name":"print","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":190,"index":1671},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2115,"byte_end":2124,"line_start":82,"line_end":82,"column_start":62,"column_end":71},"alias_span":null,"name":"Printable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1474},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":13994,"byte_end":14006,"line_start":501,"line_end":501,"column_start":2,"column_end":14},"alias_span":null,"name":"decl_storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1475},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":14008,"byte_end":14025,"line_start":501,"line_end":501,"column_start":16,"column_end":33},"alias_span":null,"name":"construct_runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1477},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":14027,"byte_end":14040,"line_start":501,"line_end":501,"column_start":35,"column_end":48},"alias_span":null,"name":"transactional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1481},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":14042,"byte_end":14061,"line_start":501,"line_end":501,"column_start":50,"column_end":69},"alias_span":null,"name":"RuntimeDebugNoBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1479},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":14542,"byte_end":14554,"line_start":520,"line_end":520,"column_start":35,"column_end":47},"alias_span":null,"name":"CloneNoBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1483},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":15050,"byte_end":15059,"line_start":538,"line_end":538,"column_start":35,"column_end":44},"alias_span":null,"name":"EqNoBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1482},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":15566,"byte_end":15582,"line_start":556,"line_end":556,"column_start":35,"column_end":51},"alias_span":null,"name":"PartialEqNoBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1480},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":16089,"byte_end":16101,"line_start":575,"line_end":575,"column_start":35,"column_end":47},"alias_span":null,"name":"DebugNoBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1484},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":16628,"byte_end":16642,"line_start":594,"line_end":594,"column_start":35,"column_end":49},"alias_span":null,"name":"DefaultNoBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1485},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":17472,"byte_end":17493,"line_start":625,"line_end":625,"column_start":35,"column_end":56},"alias_span":null,"name":"require_transactional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":197,"index":1487},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":18108,"byte_end":18131,"line_start":640,"line_end":640,"column_start":35,"column_end":58},"alias_span":null,"name":"crate_to_pallet_version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":2075},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":20846,"byte_end":20855,"line_start":749,"line_end":749,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1252},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":20846,"byte_end":20855,"line_start":749,"line_end":749,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":1536},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":20857,"byte_end":20868,"line_start":749,"line_end":749,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1253},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":20857,"byte_end":20868,"line_start":749,"line_end":749,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35271,"byte_end":35282,"line_start":1230,"line_end":1230,"column_start":26,"column_end":37},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":2,"index":2872},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35271,"byte_end":35282,"line_start":1230,"line_end":1230,"column_start":26,"column_end":37},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35341,"byte_end":35353,"line_start":1232,"line_end":1232,"column_start":33,"column_end":45},"alias_span":null,"name":"GenesisBuild","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":197,"index":1483},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35383,"byte_end":35392,"line_start":1234,"line_end":1234,"column_start":3,"column_end":12},"alias_span":null,"name":"EqNoBound","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":197,"index":1482},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35394,"byte_end":35410,"line_start":1234,"line_end":1234,"column_start":14,"column_end":30},"alias_span":null,"name":"PartialEqNoBound","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":197,"index":1481},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35412,"byte_end":35431,"line_start":1234,"line_end":1234,"column_start":32,"column_end":51},"alias_span":null,"name":"RuntimeDebugNoBound","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":197,"index":1480},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35433,"byte_end":35445,"line_start":1234,"line_end":1234,"column_start":53,"column_end":65},"alias_span":null,"name":"DebugNoBound","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":197,"index":1479},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35447,"byte_end":35459,"line_start":1234,"line_end":1234,"column_start":67,"column_end":79},"alias_span":null,"name":"CloneNoBound","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35461,"byte_end":35468,"line_start":1234,"line_end":1234,"column_start":81,"column_end":88},"alias_span":null,"name":"Twox256","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35461,"byte_end":35468,"line_start":1234,"line_end":1234,"column_start":81,"column_end":88},"alias_span":null,"name":"Twox256","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1991},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35472,"byte_end":35479,"line_start":1235,"line_end":1235,"column_start":3,"column_end":10},"alias_span":null,"name":"Twox128","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1992},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35472,"byte_end":35479,"line_start":1235,"line_end":1235,"column_start":3,"column_end":10},"alias_span":null,"name":"Twox128","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35481,"byte_end":35491,"line_start":1235,"line_end":1235,"column_start":12,"column_end":22},"alias_span":null,"name":"Blake2_256","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1984},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35481,"byte_end":35491,"line_start":1235,"line_end":1235,"column_start":12,"column_end":22},"alias_span":null,"name":"Blake2_256","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1975},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35493,"byte_end":35503,"line_start":1235,"line_end":1235,"column_start":24,"column_end":34},"alias_span":null,"name":"Blake2_128","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1976},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35493,"byte_end":35503,"line_start":1235,"line_end":1235,"column_start":24,"column_end":34},"alias_span":null,"name":"Blake2_128","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1951},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35505,"byte_end":35513,"line_start":1235,"line_end":1235,"column_start":36,"column_end":44},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35505,"byte_end":35513,"line_start":1235,"line_end":1235,"column_start":36,"column_end":44},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1959},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35515,"byte_end":35527,"line_start":1235,"line_end":1235,"column_start":46,"column_end":58},"alias_span":null,"name":"Twox64Concat","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1960},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35515,"byte_end":35527,"line_start":1235,"line_end":1235,"column_start":46,"column_end":58},"alias_span":null,"name":"Twox64Concat","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1967},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35529,"byte_end":35545,"line_start":1235,"line_end":1235,"column_start":60,"column_end":76},"alias_span":null,"name":"Blake2_128Concat","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35529,"byte_end":35545,"line_start":1235,"line_end":1235,"column_start":60,"column_end":76},"alias_span":null,"name":"Blake2_128Concat","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":4265},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35547,"byte_end":35553,"line_start":1235,"line_end":1235,"column_start":78,"column_end":84},"alias_span":null,"name":"ensure","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":73,"index":63},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35557,"byte_end":35569,"line_start":1236,"line_end":1236,"column_start":3,"column_end":15},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35571,"byte_end":35578,"line_start":1236,"line_end":1236,"column_start":17,"column_end":24},"alias_span":null,"name":"storage","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35591,"byte_end":35594,"line_start":1237,"line_end":1237,"column_start":12,"column_end":15},"alias_span":null,"name":"Get","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3674},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35596,"byte_end":35601,"line_start":1237,"line_end":1237,"column_start":17,"column_end":22},"alias_span":null,"name":"Hooks","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3418},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35603,"byte_end":35609,"line_start":1237,"line_end":1237,"column_start":24,"column_end":30},"alias_span":null,"name":"IsType","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35611,"byte_end":35627,"line_start":1237,"line_end":1237,"column_start":32,"column_end":48},"alias_span":null,"name":"GetPalletVersion","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3785},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35629,"byte_end":35641,"line_start":1237,"line_end":1237,"column_start":50,"column_end":62},"alias_span":null,"name":"EnsureOrigin","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3603},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35643,"byte_end":35659,"line_start":1237,"line_end":1237,"column_start":64,"column_end":80},"alias_span":null,"name":"PalletInfoAccess","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35675,"byte_end":35701,"line_start":1238,"line_end":1238,"column_start":14,"column_end":40},"alias_span":null,"name":"DispatchResultWithPostInfo","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35703,"byte_end":35712,"line_start":1238,"line_end":1238,"column_start":42,"column_end":51},"alias_span":null,"name":"Parameter","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":4559},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35714,"byte_end":35727,"line_start":1238,"line_end":1238,"column_start":53,"column_end":66},"alias_span":null,"name":"DispatchError","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35729,"byte_end":35743,"line_start":1238,"line_end":1238,"column_start":68,"column_end":82},"alias_span":null,"name":"DispatchResult","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":10965},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35758,"byte_end":35771,"line_start":1239,"line_end":1239,"column_start":13,"column_end":26},"alias_span":null,"name":"DispatchClass","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":10890},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35773,"byte_end":35777,"line_start":1239,"line_end":1239,"column_start":28,"column_end":32},"alias_span":null,"name":"Pays","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35779,"byte_end":35785,"line_start":1239,"line_end":1239,"column_start":34,"column_end":40},"alias_span":null,"name":"Weight","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35807,"byte_end":35819,"line_start":1240,"line_end":1240,"column_start":20,"column_end":32},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1197},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35821,"byte_end":35831,"line_start":1240,"line_end":1240,"column_start":34,"column_end":44},"alias_span":null,"name":"StorageMap","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1383},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35833,"byte_end":35849,"line_start":1240,"line_end":1240,"column_start":46,"column_end":62},"alias_span":null,"name":"StorageDoubleMap","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1589},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35851,"byte_end":35861,"line_start":1240,"line_end":1240,"column_start":64,"column_end":74},"alias_span":null,"name":"ValueQuery","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35851,"byte_end":35861,"line_start":1240,"line_end":1240,"column_start":64,"column_end":74},"alias_span":null,"name":"ValueQuery","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1581},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35863,"byte_end":35874,"line_start":1240,"line_end":1240,"column_start":76,"column_end":87},"alias_span":null,"name":"OptionQuery","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35863,"byte_end":35874,"line_start":1240,"line_end":1240,"column_start":76,"column_end":87},"alias_span":null,"name":"OptionQuery","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":21,"index":195},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35898,"byte_end":35904,"line_start":1242,"line_end":1242,"column_start":18,"column_end":24},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":22,"index":336},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35898,"byte_end":35904,"line_start":1242,"line_end":1242,"column_start":18,"column_end":24},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":21,"index":213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35906,"byte_end":35912,"line_start":1242,"line_end":1242,"column_start":26,"column_end":32},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":22,"index":337},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35906,"byte_end":35912,"line_start":1242,"line_end":1242,"column_start":26,"column_end":32},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":195,"index":128},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35939,"byte_end":35951,"line_start":1243,"line_end":1243,"column_start":25,"column_end":37},"alias_span":null,"name":"InherentData","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":195,"index":39},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35953,"byte_end":35971,"line_start":1243,"line_end":1243,"column_start":39,"column_end":57},"alias_span":null,"name":"InherentIdentifier","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":195,"index":90},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35973,"byte_end":35988,"line_start":1243,"line_end":1243,"column_start":59,"column_end":74},"alias_span":null,"name":"ProvideInherent","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":3601},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36025,"byte_end":36050,"line_start":1245,"line_end":1245,"column_start":12,"column_end":37},"alias_span":null,"name":"MaybeSerializeDeserialize","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":1505},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36052,"byte_end":36058,"line_start":1245,"line_end":1245,"column_start":39,"column_end":45},"alias_span":null,"name":"Member","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":1613},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36060,"byte_end":36076,"line_start":1245,"line_end":1245,"column_start":47,"column_end":63},"alias_span":null,"name":"ValidateUnsigned","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":4094},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36108,"byte_end":36125,"line_start":1247,"line_end":1247,"column_start":4,"column_end":21},"alias_span":null,"name":"TransactionSource","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":1732},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36127,"byte_end":36146,"line_start":1247,"line_end":1247,"column_start":23,"column_end":42},"alias_span":null,"name":"TransactionValidity","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":4126},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36148,"byte_end":36164,"line_start":1247,"line_end":1247,"column_start":44,"column_end":60},"alias_span":null,"name":"ValidTransaction","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":1709},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36166,"byte_end":36185,"line_start":1247,"line_end":1247,"column_start":62,"column_end":81},"alias_span":null,"name":"TransactionPriority","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":1711},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36190,"byte_end":36204,"line_start":1248,"line_end":1248,"column_start":4,"column_end":18},"alias_span":null,"name":"TransactionTag","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":1710},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36206,"byte_end":36226,"line_start":1248,"line_end":1248,"column_start":20,"column_end":40},"alias_span":null,"name":"TransactionLongevity","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":4081},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36228,"byte_end":36252,"line_start":1248,"line_end":1248,"column_start":42,"column_end":66},"alias_span":null,"name":"TransactionValidityError","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":3991},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36254,"byte_end":36272,"line_start":1248,"line_end":1248,"column_start":68,"column_end":86},"alias_span":null,"name":"InvalidTransaction","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":190,"index":4043},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":36277,"byte_end":36295,"line_start":1249,"line_end":1249,"column_start":4,"column_end":22},"alias_span":null,"name":"UnknownTransaction","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":197,"index":1476},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":74921,"byte_end":74927,"line_start":2274,"line_end":2274,"column_start":35,"column_end":41},"alias_span":null,"name":"pallet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":686,"byte_end":74928,"line_start":18,"line_end":2274,"column_start":1,"column_end":42},"name":"","qualname":"::","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":191},{"krate":0,"index":1897},{"krate":0,"index":2007},{"krate":0,"index":2026},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":2112},{"krate":0,"index":2130},{"krate":0,"index":2149},{"krate":0,"index":3859},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4151},{"krate":0,"index":4154},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4164},{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4176},{"krate":0,"index":4179},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4186},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4216},{"krate":0,"index":4219},{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11369},{"krate":0,"index":11370},{"krate":0,"index":11372},{"krate":0,"index":11373},{"krate":0,"index":11375},{"krate":0,"index":11377},{"krate":0,"index":11381},{"krate":0,"index":11384},{"krate":0,"index":11385},{"krate":0,"index":11386},{"krate":0,"index":11389},{"krate":0,"index":11390},{"krate":0,"index":11393},{"krate":0,"index":11403},{"krate":0,"index":4220},{"krate":0,"index":4228},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4243},{"krate":0,"index":4246},{"krate":0,"index":4249},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4261},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4279},{"krate":0,"index":4446}],"decl_id":null,"docs":" Support code for the runtime.\n","sig":null,"attributes":[{"value":"/ Support code for the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":686,"byte_end":719,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatch","qualname":"::dispatch","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" Dispatch system. Contains a macro for defining runtime modules and\n generating values representing lazy module function calls.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1365,"byte_end":1377,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ Dispatch system. Contains a macro for defining runtime modules and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91379,"byte_end":91449,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ generating values representing lazy module function calls.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":91450,"byte_end":91512,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92444,"byte_end":92470,"line_start":39,"line_end":39,"column_start":10,"column_end":36},"name":"DispatchResultWithPostInfo","qualname":"::dispatch::DispatchResultWithPostInfo","value":"sp_runtime::DispatchResultWithInfo<crate::weights::PostDispatchInfo>","parent":null,"children":[],"decl_id":null,"docs":" The return typ of a `Dispatchable` in frame. When returned explicitly from\n a dispatchable function it allows overriding the default `PostDispatchInfo`\n returned from a dispatch.\n","sig":null,"attributes":[{"value":"/ The return typ of a `Dispatchable` in frame. When returned explicitly from","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92246,"byte_end":92324,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ a dispatchable function it allows overriding the default `PostDispatchInfo`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92325,"byte_end":92404,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ returned from a dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92405,"byte_end":92434,"line_start":38,"line_end":38,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":172},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92894,"byte_end":92908,"line_start":46,"line_end":46,"column_start":10,"column_end":24},"name":"DispatchResult","qualname":"::dispatch::DispatchResult","value":"Result<(), sp_runtime::DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" Unaugmented version of `DispatchResultWithPostInfo` that can be returned from\n dispatchable functions and is automatically converted to the augmented type. Should be\n used whenever the `PostDispatchInfo` does not need to be overwritten. As this should\n be the common case it is the implicit return type when none is specified.\n","sig":null,"attributes":[{"value":"/ Unaugmented version of `DispatchResultWithPostInfo` that can be returned from","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92545,"byte_end":92626,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ dispatchable functions and is automatically converted to the augmented type. Should be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92627,"byte_end":92717,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ used whenever the `PostDispatchInfo` does not need to be overwritten. As this should","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92718,"byte_end":92806,"line_start":44,"line_end":44,"column_start":1,"column_end":89}},{"value":"/ be the common case it is the implicit return type when none is specified.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92807,"byte_end":92884,"line_start":45,"line_end":45,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":173},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93024,"byte_end":93049,"line_start":49,"line_end":49,"column_start":10,"column_end":35},"name":"DispatchErrorWithPostInfo","qualname":"::dispatch::DispatchErrorWithPostInfo","value":"sp_runtime::DispatchErrorWithPostInfo<crate::weights::PostDispatchInfo>","parent":null,"children":[],"decl_id":null,"docs":" The error type contained in a `DispatchResultWithPostInfo`.\n","sig":null,"attributes":[{"value":"/ The error type contained in a `DispatchResultWithPostInfo`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":92951,"byte_end":93014,"line_start":48,"line_end":48,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93186,"byte_end":93194,"line_start":53,"line_end":53,"column_start":11,"column_end":19},"name":"Callable","qualname":"::dispatch::Callable","value":"Callable<T>","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" Serializable version of pallet dispatchable.\n","sig":null,"attributes":[{"value":"/ Serializable version of pallet dispatchable.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93127,"byte_end":93175,"line_start":52,"line_end":52,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93206,"byte_end":93210,"line_start":54,"line_end":54,"column_start":7,"column_end":11},"name":"Call","qualname":"::dispatch::Callable::Call","value":"type Call: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":177},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93379,"byte_end":93394,"line_start":59,"line_end":59,"column_start":10,"column_end":25},"name":"CallableCallFor","qualname":"::dispatch::CallableCallFor","value":"<A as Callable<R>>::Call","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93604,"byte_end":93613,"line_start":64,"line_end":64,"column_start":11,"column_end":20},"name":"Parameter","qualname":"::dispatch::Parameter","value":"Parameter: Codec + EncodeLike + Clone + Eq + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" A type that can be used as a parameter in a dispatchable function.","sig":null,"attributes":[{"value":"/ A type that can be used as a parameter in a dispatchable function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93430,"byte_end":93500,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93501,"byte_end":93504,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ When using `decl_module` all arguments for call functions must implement this trait.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93505,"byte_end":93593,"line_start":63,"line_end":63,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::storage","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":273},{"krate":0,"index":335},{"krate":0,"index":480},{"krate":0,"index":534},{"krate":0,"index":914},{"krate":0,"index":1007},{"krate":0,"index":1614},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1642},{"krate":0,"index":1669},{"krate":0,"index":1720},{"krate":0,"index":1729},{"krate":0,"index":1744},{"krate":0,"index":1815},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1829},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1844},{"krate":0,"index":1850},{"krate":0,"index":1855},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895}],"decl_id":null,"docs":" Stuff to do with the runtime's storage.\n","sig":null,"attributes":[{"value":"/ Stuff to do with the runtime's storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":184949,"byte_end":184992,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":236},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unhashed","qualname":"::storage::unhashed","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"decl_id":null,"docs":" Operation on unhashed runtime storage.\n","sig":null,"attributes":[{"value":"/ Operation on unhashed runtime storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":218592,"byte_end":218634,"line_start":18,"line_end":18,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":218795,"byte_end":218798,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"name":"get","qualname":"::storage::unhashed::get","value":"pub fn get<T: Decode + Sized>(&[u8]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `None` if there is no explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `None` if there is no explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":218690,"byte_end":218787,"line_start":23,"line_end":23,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219203,"byte_end":219217,"line_start":36,"line_end":36,"column_start":8,"column_end":22},"name":"get_or_default","qualname":"::storage::unhashed::get_or_default","value":"pub fn get_or_default<T: Decode + Sized + Default>(&[u8]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or the type's default if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or the type's default if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219082,"byte_end":219175,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219176,"byte_end":219195,"line_start":35,"line_end":35,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219430,"byte_end":219436,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"get_or","qualname":"::storage::unhashed::get_or","value":"pub fn get_or<T: Decode + Sized>(&[u8], T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value` if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219312,"byte_end":219402,"line_start":40,"line_end":40,"column_start":1,"column_end":91}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219403,"byte_end":219422,"line_start":41,"line_end":41,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":253},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219651,"byte_end":219662,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"get_or_else","qualname":"::storage::unhashed::get_or_else","value":"pub fn get_or_else<T: Decode + Sized, F: FnOnce() -> T>(&[u8], F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value()` if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value()` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219531,"byte_end":219623,"line_start":46,"line_end":46,"column_start":1,"column_end":93}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219624,"byte_end":219643,"line_start":47,"line_end":47,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219827,"byte_end":219830,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"put","qualname":"::storage::unhashed::put","value":"pub fn put<T: Encode + ?Sized>(&[u8], &T)","parent":null,"children":[],"decl_id":null,"docs":" Put `value` in storage under `key`.\n","sig":null,"attributes":[{"value":"/ Put `value` in storage under `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219780,"byte_end":219819,"line_start":52,"line_end":52,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220049,"byte_end":220053,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"take","qualname":"::storage::unhashed::take","value":"pub fn take<T: Decode + Sized>(&[u8]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove `key` from storage, returning its value if it had an explicit entry or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Remove `key` from storage, returning its value if it had an explicit entry or `None` otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":219942,"byte_end":220041,"line_start":57,"line_end":57,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":261},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220295,"byte_end":220310,"line_start":68,"line_end":68,"column_start":8,"column_end":23},"name":"take_or_default","qualname":"::storage::unhashed::take_or_default","value":"pub fn take_or_default<T: Decode + Sized + Default>(&[u8]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Remove `key` from storage, returning its value, or, if there was no explicit entry in storage,\n the default for its type.\n","sig":null,"attributes":[{"value":"/ Remove `key` from storage, returning its value, or, if there was no explicit entry in storage,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220159,"byte_end":220257,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ the default for its type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220258,"byte_end":220287,"line_start":67,"line_end":67,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":263},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220569,"byte_end":220576,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"take_or","qualname":"::storage::unhashed::take_or","value":"pub fn take_or<T: Decode + Sized>(&[u8], T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value` if there is no\n explicit entry. Ensure there is no explicit entry on return.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220406,"byte_end":220496,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ explicit entry. Ensure there is no explicit entry on return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220497,"byte_end":220561,"line_start":73,"line_end":73,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220837,"byte_end":220849,"line_start":80,"line_end":80,"column_start":8,"column_end":20},"name":"take_or_else","qualname":"::storage::unhashed::take_or_else","value":"pub fn take_or_else<T: Decode + Sized, F: FnOnce() -> T>(&[u8], F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value()` if there is no\n explicit entry. Ensure there is no explicit entry on return.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value()` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220672,"byte_end":220764,"line_start":78,"line_end":78,"column_start":1,"column_end":93}},{"value":"/ explicit entry. Ensure there is no explicit entry on return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220765,"byte_end":220829,"line_start":79,"line_end":79,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":268},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221035,"byte_end":221041,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"exists","qualname":"::storage::unhashed::exists","value":"pub fn exists(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check to see if `key` has an explicit entry in storage.\n","sig":null,"attributes":[{"value":"/ Check to see if `key` has an explicit entry in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":220968,"byte_end":221027,"line_start":84,"line_end":84,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221154,"byte_end":221158,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"kill","qualname":"::storage::unhashed::kill","value":"pub fn kill(&[u8])","parent":null,"children":[],"decl_id":null,"docs":" Ensure `key` has no explicit entry in storage.\n","sig":null,"attributes":[{"value":"/ Ensure `key` has no explicit entry in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221096,"byte_end":221146,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221280,"byte_end":221291,"line_start":95,"line_end":95,"column_start":8,"column_end":19},"name":"kill_prefix","qualname":"::storage::unhashed::kill_prefix","value":"pub fn kill_prefix(&[u8])","parent":null,"children":[],"decl_id":null,"docs":" Ensure keys with the given `prefix` have no entries in storage.\n","sig":null,"attributes":[{"value":"/ Ensure keys with the given `prefix` have no entries in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221205,"byte_end":221272,"line_start":94,"line_end":94,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221395,"byte_end":221402,"line_start":100,"line_end":100,"column_start":8,"column_end":15},"name":"get_raw","qualname":"::storage::unhashed::get_raw","value":"pub fn get_raw(&[u8]) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a Vec of bytes from storage.\n","sig":null,"attributes":[{"value":"/ Get a Vec of bytes from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221351,"byte_end":221387,"line_start":99,"line_end":99,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221719,"byte_end":221726,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"put_raw","qualname":"::storage::unhashed::put_raw","value":"pub fn put_raw(&[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Put a raw byte slice into storage.","sig":null,"attributes":[{"value":"/ Put a raw byte slice into storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221465,"byte_end":221503,"line_start":104,"line_end":104,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221504,"byte_end":221507,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ **WARNING**: If you set the storage of the Substrate Wasm (`well_known_keys::CODE`),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221508,"byte_end":221596,"line_start":106,"line_end":106,"column_start":1,"column_end":89}},{"value":"/ you should also call `frame_system::RuntimeUpgraded::put(true)` to trigger the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221597,"byte_end":221679,"line_start":107,"line_end":107,"column_start":1,"column_end":83}},{"value":"/ `on_runtime_upgrade` logic.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/unhashed.rs","byte_start":221680,"byte_end":221711,"line_start":108,"line_end":108,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":273},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashed","qualname":"::storage::hashed","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332}],"decl_id":null,"docs":" Operation on runtime storage using hashed keys.\n","sig":null,"attributes":[{"value":"/ Operation on runtime storage using hashed keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":222477,"byte_end":222528,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":285},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":222710,"byte_end":222713,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"get","qualname":"::storage::hashed::get","value":"pub fn get<T, HashFn, R>(&HashFn, &[u8]) -> Option<T> where T: Decode + Sized,\nHashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `None` if there is no explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `None` if there is no explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":222605,"byte_end":222702,"line_start":24,"line_end":24,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":289},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":222998,"byte_end":223012,"line_start":36,"line_end":36,"column_start":8,"column_end":22},"name":"get_or_default","qualname":"::storage::hashed::get_or_default","value":"pub fn get_or_default<T, HashFn, R>(&HashFn, &[u8]) -> T where T: Decode +\nSized + Default, HashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or the type's default if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or the type's default if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":222877,"byte_end":222970,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":222971,"byte_end":222990,"line_start":35,"line_end":35,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":293},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223307,"byte_end":223313,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"get_or","qualname":"::storage::hashed::get_or","value":"pub fn get_or<T, HashFn, R>(&HashFn, &[u8], T) -> T where T: Decode + Sized,\nHashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value` if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223189,"byte_end":223279,"line_start":45,"line_end":45,"column_start":1,"column_end":91}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223280,"byte_end":223299,"line_start":46,"line_end":46,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223625,"byte_end":223636,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"get_or_else","qualname":"::storage::hashed::get_or_else","value":"pub fn get_or_else<T, F, HashFn, R>(&HashFn, &[u8], F) -> T where T: Decode +\nSized, F: FnOnce() -> T, HashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value()` if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value()` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223505,"byte_end":223597,"line_start":56,"line_end":56,"column_start":1,"column_end":93}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223598,"byte_end":223617,"line_start":57,"line_end":57,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":302},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223902,"byte_end":223905,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"put","qualname":"::storage::hashed::put","value":"pub fn put<T, HashFn, R>(&HashFn, &[u8], &T) where T: Encode,\nHashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Put `value` in storage under `key`.\n","sig":null,"attributes":[{"value":"/ Put `value` in storage under `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":223855,"byte_end":223894,"line_start":68,"line_end":68,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":306},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224173,"byte_end":224177,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"take","qualname":"::storage::hashed::take","value":"pub fn take<T, HashFn, R>(&HashFn, &[u8]) -> Option<T> where T: Decode +\nSized, HashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Remove `key` from storage, returning its value if it had an explicit entry or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Remove `key` from storage, returning its value if it had an explicit entry or `None` otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224066,"byte_end":224165,"line_start":78,"line_end":78,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":310},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224478,"byte_end":224493,"line_start":90,"line_end":90,"column_start":8,"column_end":23},"name":"take_or_default","qualname":"::storage::hashed::take_or_default","value":"pub fn take_or_default<T, HashFn, R>(&HashFn, &[u8]) -> T where T: Decode +\nSized + Default, HashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Remove `key` from storage, returning its value, or, if there was no explicit entry in storage,\n the default for its type.\n","sig":null,"attributes":[{"value":"/ Remove `key` from storage, returning its value, or, if there was no explicit entry in storage,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224342,"byte_end":224440,"line_start":88,"line_end":88,"column_start":1,"column_end":99}},{"value":"/ the default for its type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224441,"byte_end":224470,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224834,"byte_end":224841,"line_start":101,"line_end":101,"column_start":8,"column_end":15},"name":"take_or","qualname":"::storage::hashed::take_or","value":"pub fn take_or<T, HashFn, R>(&HashFn, &[u8], T) -> T where T: Decode + Sized,\nHashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value` if there is no\n explicit entry. Ensure there is no explicit entry on return.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224671,"byte_end":224761,"line_start":99,"line_end":99,"column_start":1,"column_end":91}},{"value":"/ explicit entry. Ensure there is no explicit entry on return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":224762,"byte_end":224826,"line_start":100,"line_end":100,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225199,"byte_end":225211,"line_start":112,"line_end":112,"column_start":8,"column_end":20},"name":"take_or_else","qualname":"::storage::hashed::take_or_else","value":"pub fn take_or_else<T, F, HashFn, R>(&HashFn, &[u8], F) -> T where T: Decode +\nSized, F: FnOnce() -> T, HashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value()` if there is no\n explicit entry. Ensure there is no explicit entry on return.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value()` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225034,"byte_end":225126,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/ explicit entry. Ensure there is no explicit entry on return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225127,"byte_end":225191,"line_start":111,"line_end":111,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":323},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225498,"byte_end":225504,"line_start":123,"line_end":123,"column_start":8,"column_end":14},"name":"exists","qualname":"::storage::hashed::exists","value":"pub fn exists<HashFn, R>(&HashFn, &[u8]) -> bool where HashFn: Fn(&[u8]) -> R,\nR: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Check to see if `key` has an explicit entry in storage.\n","sig":null,"attributes":[{"value":"/ Check to see if `key` has an explicit entry in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225431,"byte_end":225490,"line_start":122,"line_end":122,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225701,"byte_end":225705,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"kill","qualname":"::storage::hashed::kill","value":"pub fn kill<HashFn, R>(&HashFn, &[u8]) where HashFn: Fn(&[u8]) -> R,\nR: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Ensure `key` has no explicit entry in storage.\n","sig":null,"attributes":[{"value":"/ Ensure `key` has no explicit entry in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225643,"byte_end":225693,"line_start":131,"line_end":131,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":329},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225878,"byte_end":225885,"line_start":141,"line_end":141,"column_start":8,"column_end":15},"name":"get_raw","qualname":"::storage::hashed::get_raw","value":"pub fn get_raw<HashFn, R>(&HashFn, &[u8]) -> Option<Vec<u8>> where\nHashFn: Fn(&[u8]) -> R, R: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Get a Vec of bytes from storage.\n","sig":null,"attributes":[{"value":"/ Get a Vec of bytes from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":225834,"byte_end":225870,"line_start":140,"line_end":140,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":226082,"byte_end":226089,"line_start":150,"line_end":150,"column_start":8,"column_end":15},"name":"put_raw","qualname":"::storage::hashed::put_raw","value":"pub fn put_raw<HashFn, R>(&HashFn, &[u8], &[u8]) where HashFn: Fn(&[u8]) -> R,\nR: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Put a raw byte slice into storage.\n","sig":null,"attributes":[{"value":"/ Put a raw byte slice into storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/hashed.rs","byte_start":226036,"byte_end":226074,"line_start":149,"line_end":149,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":335},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounded_vec","qualname":"::storage::bounded_vec","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":4452},{"krate":0,"index":4458},{"krate":0,"index":4468},{"krate":0,"index":4475},{"krate":0,"index":4480},{"krate":0,"index":4485},{"krate":0,"index":380},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":403},{"krate":0,"index":408},{"krate":0,"index":412},{"krate":0,"index":417},{"krate":0,"index":422},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":440},{"krate":0,"index":447},{"krate":0,"index":456},{"krate":0,"index":462},{"krate":0,"index":470}],"decl_id":null,"docs":" Traits, types and structs to support putting a bounded vector into storage, as a raw value, map\n or a double map.\n","sig":null,"attributes":[{"value":"/ Traits, types and structs to support putting a bounded vector into storage, as a raw value, map","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":226928,"byte_end":227027,"line_start":18,"line_end":18,"column_start":1,"column_end":100}},{"value":"/ or a double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227028,"byte_end":227048,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227392,"byte_end":227407,"line_start":30,"line_end":30,"column_start":11,"column_end":26},"name":"BoundedVecValue","qualname":"::storage::bounded_vec::BoundedVecValue","value":"BoundedVecValue: FullCodec + Clone + sp_std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types `T` that can be stored in storage as `BoundedVec<T, _>`.\n","sig":null,"attributes":[{"value":"/ Marker trait for types `T` that can be stored in storage as `BoundedVec<T, _>`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227298,"byte_end":227381,"line_start":29,"line_end":29,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4452},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227943,"byte_end":227953,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"BoundedVec","qualname":"::storage::bounded_vec::BoundedVec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bounded vector.","sig":null,"attributes":[{"value":"/ A bounded vector.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227525,"byte_end":227546,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227547,"byte_end":227550,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It has implementations for efficient append and length decoding, as with a normal `Vec<_>`, once","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227551,"byte_end":227651,"line_start":35,"line_end":35,"column_start":1,"column_end":101}},{"value":"/ put into storage as a raw value, map or double-map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227652,"byte_end":227707,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227708,"byte_end":227711,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ As the name suggests, the length of the queue is always bounded. All internal operations ensure","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227712,"byte_end":227811,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ this bound is respected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227812,"byte_end":227840,"line_start":39,"line_end":39,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228550,"byte_end":228555,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"bound","qualname":"<BoundedVec<T, S>>::bound","value":"pub fn bound() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the bound of the type in `usize`.\n","sig":null,"attributes":[{"value":"/ Get the bound of the type in `usize`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228500,"byte_end":228541,"line_start":54,"line_end":54,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229090,"byte_end":229100,"line_start":75,"line_end":75,"column_start":9,"column_end":19},"name":"force_from","qualname":"<BoundedVec<T, S>>::force_from","value":"pub fn force_from(Vec<T>, Option<&'static str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create `Self` from `t` without any checks. Logs warnings if the bound is not being\n respected. The additional scope can be used to indicate where a potential overflow is\n happening.","sig":null,"attributes":[{"value":"/ Create `Self` from `t` without any checks. Logs warnings if the bound is not being","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228802,"byte_end":228888,"line_start":68,"line_end":68,"column_start":2,"column_end":88}},{"value":"/ respected. The additional scope can be used to indicate where a potential overflow is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228890,"byte_end":228979,"line_start":69,"line_end":69,"column_start":2,"column_end":91}},{"value":"/ happening.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228981,"byte_end":228995,"line_start":70,"line_end":70,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228997,"byte_end":229000,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ # WARNING","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229002,"byte_end":229015,"line_start":72,"line_end":72,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229017,"byte_end":229020,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ Only use when you are sure you know what you are doing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229022,"byte_end":229081,"line_start":74,"line_end":74,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229727,"byte_end":229737,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BoundedVec<T, S>>::into_inner","value":"pub fn into_inner(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Consume self, and return the inner `Vec`. Henceforth, the `Vec<_>` can be altered in an\n arbitrary way. At some point, if the reverse conversion is required, `TryFrom<Vec<_>>` can\n be used.","sig":null,"attributes":[{"value":"/ Consume self, and return the inner `Vec`. Henceforth, the `Vec<_>` can be altered in an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229366,"byte_end":229457,"line_start":87,"line_end":87,"column_start":2,"column_end":93}},{"value":"/ arbitrary way. At some point, if the reverse conversion is required, `TryFrom<Vec<_>>` can","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229459,"byte_end":229553,"line_start":88,"line_end":88,"column_start":2,"column_end":96}},{"value":"/ be used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229555,"byte_end":229567,"line_start":89,"line_end":89,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229569,"byte_end":229572,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ This is useful for cases if you need access to an internal API of the inner `Vec<_>` which","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229574,"byte_end":229668,"line_start":91,"line_end":91,"column_start":2,"column_end":96}},{"value":"/ is not provided by the wrapper `BoundedVec`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229670,"byte_end":229718,"line_start":92,"line_end":92,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230118,"byte_end":230128,"line_start":105,"line_end":105,"column_start":9,"column_end":19},"name":"try_mutate","qualname":"<BoundedVec<T, S>>::try_mutate","value":"pub fn try_mutate<impl FnMut(&mut Vec<T>): FnMut(&mut Vec<T>) ->\n                  ()>(Self, impl FnMut(&mut Vec<T>)) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and mutates self via the given `mutate` function.","sig":null,"attributes":[{"value":"/ Consumes self and mutates self via the given `mutate` function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229818,"byte_end":229885,"line_start":98,"line_end":98,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229887,"byte_end":229890,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ If the outcome of mutation is within bounds, `Some(Self)` is returned. Else, `None` is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229892,"byte_end":229982,"line_start":100,"line_end":100,"column_start":2,"column_end":92}},{"value":"/ returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229984,"byte_end":229997,"line_start":101,"line_end":101,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":229999,"byte_end":230002,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ This is essentially a *consuming* shorthand [`Self::into_inner`] -> `...` ->","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230004,"byte_end":230084,"line_start":103,"line_end":103,"column_start":2,"column_end":82}},{"value":"/ [`Self::try_from`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230086,"byte_end":230109,"line_start":104,"line_end":104,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230475,"byte_end":230485,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"try_insert","qualname":"<BoundedVec<T, S>>::try_insert","value":"pub fn try_insert(&mut Self, usize, T) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Exactly the same semantics as [`Vec::insert`], but returns an `Err` (and is a noop) if the\n new length of the vector exceeds `S`.","sig":null,"attributes":[{"value":"/ Exactly the same semantics as [`Vec::insert`], but returns an `Err` (and is a noop) if the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230275,"byte_end":230369,"line_start":110,"line_end":110,"column_start":2,"column_end":96}},{"value":"/ new length of the vector exceeds `S`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230371,"byte_end":230412,"line_start":111,"line_end":111,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230414,"byte_end":230417,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230419,"byte_end":230431,"line_start":113,"line_end":113,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230433,"byte_end":230436,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ Panics if `index > len`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230438,"byte_end":230466,"line_start":115,"line_end":115,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230878,"byte_end":230886,"line_start":131,"line_end":131,"column_start":9,"column_end":17},"name":"try_push","qualname":"<BoundedVec<T, S>>::try_push","value":"pub fn try_push(&mut Self, T) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Exactly the same semantics as [`Vec::push`], but returns an `Err` (and is a noop) if the\n new length of the vector exceeds `S`.","sig":null,"attributes":[{"value":"/ Exactly the same semantics as [`Vec::push`], but returns an `Err` (and is a noop) if the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230652,"byte_end":230744,"line_start":125,"line_end":125,"column_start":2,"column_end":94}},{"value":"/ new length of the vector exceeds `S`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230746,"byte_end":230787,"line_start":126,"line_end":126,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230789,"byte_end":230792,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230794,"byte_end":230806,"line_start":128,"line_end":128,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230808,"byte_end":230811,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ Panics if the new capacity exceeds isize::MAX bytes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":230813,"byte_end":230869,"line_start":130,"line_end":130,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231154,"byte_end":231160,"line_start":145,"line_end":145,"column_start":9,"column_end":15},"name":"remove","qualname":"<BoundedVec<T, S>>::remove","value":"pub fn remove(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Exactly the same semantics as [`Vec::remove`].","sig":null,"attributes":[{"value":"/ Exactly the same semantics as [`Vec::remove`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231030,"byte_end":231080,"line_start":140,"line_end":140,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231082,"byte_end":231085,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231087,"byte_end":231099,"line_start":142,"line_end":142,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231101,"byte_end":231104,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231106,"byte_end":231145,"line_start":144,"line_end":144,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231346,"byte_end":231357,"line_start":154,"line_end":154,"column_start":9,"column_end":20},"name":"swap_remove","qualname":"<BoundedVec<T, S>>::swap_remove","value":"pub fn swap_remove(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Exactly the same semantics as [`Vec::swap_remove`].","sig":null,"attributes":[{"value":"/ Exactly the same semantics as [`Vec::swap_remove`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231217,"byte_end":231272,"line_start":149,"line_end":149,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231274,"byte_end":231277,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231279,"byte_end":231291,"line_start":151,"line_end":151,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231293,"byte_end":231296,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231298,"byte_end":231337,"line_start":153,"line_end":153,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231478,"byte_end":231484,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"retain","qualname":"<BoundedVec<T, S>>::retain","value":"pub fn retain<F: FnMut(&T) -> bool>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Exactly the same semantics as [`Vec::retain`].\n","sig":null,"attributes":[{"value":"/ Exactly the same semantics as [`Vec::retain`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231419,"byte_end":231469,"line_start":158,"line_end":158,"column_start":2,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":435},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233269,"byte_end":233283,"line_start":218,"line_end":218,"column_start":11,"column_end":25},"name":"TryAppendValue","qualname":"::storage::bounded_vec::TryAppendValue","value":"TryAppendValue<T: BoundedVecValue, S: Get<u32>>","parent":null,"children":[{"krate":0,"index":438}],"decl_id":null,"docs":" Storage value that is *maybe* capable of [`StorageAppend`](crate::storage::StorageAppend).\n","sig":null,"attributes":[{"value":"/ Storage value that is *maybe* capable of [`StorageAppend`](crate::storage::StorageAppend).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233164,"byte_end":233258,"line_start":217,"line_end":217,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233432,"byte_end":233442,"line_start":222,"line_end":222,"column_start":5,"column_end":15},"name":"try_append","qualname":"::storage::bounded_vec::TryAppendValue::try_append","value":"pub fn try_append<LikeT: EncodeLike<T>>(LikeT) -> Result<(), ()>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Try and append the `item` into the storage item.","sig":null,"attributes":[{"value":"/ Try and append the `item` into the storage item.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233320,"byte_end":233372,"line_start":219,"line_end":219,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233374,"byte_end":233377,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ This might fail if bounds are not respected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233379,"byte_end":233427,"line_start":221,"line_end":221,"column_start":2,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233603,"byte_end":233615,"line_start":226,"line_end":226,"column_start":11,"column_end":23},"name":"TryAppendMap","qualname":"::storage::bounded_vec::TryAppendMap","value":"TryAppendMap<K: FullCodec, T: BoundedVecValue, S: Get<u32>>","parent":null,"children":[{"krate":0,"index":444}],"decl_id":null,"docs":" Storage map that is *maybe* capable of [`StorageAppend`](crate::storage::StorageAppend).\n","sig":null,"attributes":[{"value":"/ Storage map that is *maybe* capable of [`StorageAppend`](crate::storage::StorageAppend).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233500,"byte_end":233592,"line_start":225,"line_end":225,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233796,"byte_end":233806,"line_start":230,"line_end":230,"column_start":5,"column_end":15},"name":"try_append","qualname":"::storage::bounded_vec::TryAppendMap::try_append","value":"pub fn try_append<LikeK: EncodeLike<K> + Clone,\n                  LikeT: EncodeLike<T>>(LikeK, LikeT) -> Result<(), ()>","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Try and append the `item` into the storage map at the given `key`.","sig":null,"attributes":[{"value":"/ Try and append the `item` into the storage map at the given `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233666,"byte_end":233736,"line_start":227,"line_end":227,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233738,"byte_end":233741,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ This might fail if bounds are not respected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233743,"byte_end":233791,"line_start":229,"line_end":229,"column_start":2,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":447},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234024,"byte_end":234042,"line_start":237,"line_end":237,"column_start":11,"column_end":29},"name":"TryAppendDoubleMap","qualname":"::storage::bounded_vec::TryAppendDoubleMap","value":"TryAppendDoubleMap<K1: FullCodec, K2: FullCodec, T: BoundedVecValue, S: Get<u32>>","parent":null,"children":[{"krate":0,"index":452}],"decl_id":null,"docs":" Storage double map that is *maybe* capable of [`StorageAppend`](crate::storage::StorageAppend).\n","sig":null,"attributes":[{"value":"/ Storage double map that is *maybe* capable of [`StorageAppend`](crate::storage::StorageAppend).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233914,"byte_end":234013,"line_start":236,"line_end":236,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234246,"byte_end":234256,"line_start":241,"line_end":241,"column_start":5,"column_end":15},"name":"try_append","qualname":"::storage::bounded_vec::TryAppendDoubleMap::try_append","value":"pub fn try_append<LikeK1: EncodeLike<K1> + Clone, LikeK2: EncodeLike<K2> +\n                  Clone, LikeT: EncodeLike<T>>(LikeK1, LikeK2, LikeT)\n-> Result<(), ()>","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Try and append the `item` into the storage double map at the given `key`.","sig":null,"attributes":[{"value":"/ Try and append the `item` into the storage double map at the given `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234109,"byte_end":234186,"line_start":238,"line_end":238,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234188,"byte_end":234191,"line_start":239,"line_end":239,"column_start":2,"column_end":5}},{"value":"/ This might fail if bounds are not respected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234193,"byte_end":234241,"line_start":240,"line_end":240,"column_start":2,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":480},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"child","qualname":"::storage::child","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"decl_id":null,"docs":" Operation on runtime child storages.","sig":null,"attributes":[{"value":"/ Operation on runtime child storages.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":241836,"byte_end":241876,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":241877,"byte_end":241880,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module is a currently only a variant of unhashed with additional `child_info`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":241881,"byte_end":241968,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":242376,"byte_end":242379,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"get","qualname":"::storage::child::get","value":"pub fn get<T: Decode + Sized>(&ChildInfo, &[u8]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `None` if there is no explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `None` if there is no explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":242271,"byte_end":242368,"line_start":29,"line_end":29,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243040,"byte_end":243054,"line_start":57,"line_end":57,"column_start":8,"column_end":22},"name":"get_or_default","qualname":"::storage::child::get_or_default","value":"pub fn get_or_default<T: Decode + Sized + Default>(&ChildInfo, &[u8]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or the type's default if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or the type's default if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":242919,"byte_end":243012,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243013,"byte_end":243032,"line_start":56,"line_end":56,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":508},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243308,"byte_end":243314,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"get_or","qualname":"::storage::child::get_or","value":"pub fn get_or<T: Decode + Sized>(&ChildInfo, &[u8], T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value` if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243190,"byte_end":243280,"line_start":64,"line_end":64,"column_start":1,"column_end":91}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243281,"byte_end":243300,"line_start":65,"line_end":65,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243571,"byte_end":243582,"line_start":76,"line_end":76,"column_start":8,"column_end":19},"name":"get_or_else","qualname":"::storage::child::get_or_else","value":"pub fn get_or_else<T: Decode + Sized, F: FnOnce() -> T>(&ChildInfo, &[u8], F)\n-> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value()` if there is no\n explicit entry.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value()` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243451,"byte_end":243543,"line_start":74,"line_end":74,"column_start":1,"column_end":93}},{"value":"/ explicit entry.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243544,"byte_end":243563,"line_start":75,"line_end":75,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243789,"byte_end":243792,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"put","qualname":"::storage::child::put","value":"pub fn put<T: Encode>(&ChildInfo, &[u8], &T)","parent":null,"children":[],"decl_id":null,"docs":" Put `value` in storage under `key`.\n","sig":null,"attributes":[{"value":"/ Put `value` in storage under `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":243742,"byte_end":243781,"line_start":84,"line_end":84,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244159,"byte_end":244163,"line_start":102,"line_end":102,"column_start":8,"column_end":12},"name":"take","qualname":"::storage::child::take","value":"pub fn take<T: Decode + Sized>(&ChildInfo, &[u8]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove `key` from storage, returning its value if it had an explicit entry or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Remove `key` from storage, returning its value if it had an explicit entry or `None` otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244052,"byte_end":244151,"line_start":101,"line_end":101,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244458,"byte_end":244473,"line_start":115,"line_end":115,"column_start":8,"column_end":23},"name":"take_or_default","qualname":"::storage::child::take_or_default","value":"pub fn take_or_default<T: Codec + Sized + Default>(&ChildInfo, &[u8]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Remove `key` from storage, returning its value, or, if there was no explicit entry in storage,\n the default for its type.\n","sig":null,"attributes":[{"value":"/ Remove `key` from storage, returning its value, or, if there was no explicit entry in storage,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244322,"byte_end":244420,"line_start":113,"line_end":113,"column_start":1,"column_end":99}},{"value":"/ the default for its type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244421,"byte_end":244450,"line_start":114,"line_end":114,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244772,"byte_end":244779,"line_start":124,"line_end":124,"column_start":8,"column_end":15},"name":"take_or","qualname":"::storage::child::take_or","value":"pub fn take_or<T: Codec + Sized>(&ChildInfo, &[u8], T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value` if there is no\n explicit entry. Ensure there is no explicit entry on return.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244609,"byte_end":244699,"line_start":122,"line_end":122,"column_start":1,"column_end":91}},{"value":"/ explicit entry. Ensure there is no explicit entry on return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244700,"byte_end":244764,"line_start":123,"line_end":123,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":522},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245081,"byte_end":245093,"line_start":134,"line_end":134,"column_start":8,"column_end":20},"name":"take_or_else","qualname":"::storage::child::take_or_else","value":"pub fn take_or_else<T: Codec + Sized, F: FnOnce() -> T>(&ChildInfo, &[u8], F)\n-> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value of the item in storage under `key`, or `default_value()` if there is no\n explicit entry. Ensure there is no explicit entry on return.\n","sig":null,"attributes":[{"value":"/ Return the value of the item in storage under `key`, or `default_value()` if there is no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":244916,"byte_end":245008,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ explicit entry. Ensure there is no explicit entry on return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245009,"byte_end":245073,"line_start":133,"line_end":133,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245320,"byte_end":245326,"line_start":143,"line_end":143,"column_start":8,"column_end":14},"name":"exists","qualname":"::storage::child::exists","value":"pub fn exists(&ChildInfo, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check to see if `key` has an explicit entry in storage.\n","sig":null,"attributes":[{"value":"/ Check to see if `key` has an explicit entry in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245253,"byte_end":245312,"line_start":142,"line_end":142,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":527},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246496,"byte_end":246508,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"kill_storage","qualname":"::storage::child::kill_storage","value":"pub fn kill_storage(&ChildInfo, Option<u32>) -> KillChildStorageResult","parent":null,"children":[],"decl_id":null,"docs":" Remove all `storage_key` key/values","sig":null,"attributes":[{"value":"/ Remove all `storage_key` key/values","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245552,"byte_end":245591,"line_start":155,"line_end":155,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245592,"byte_end":245595,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Deletes all keys from the overlay and up to `limit` keys from the backend if","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245596,"byte_end":245676,"line_start":157,"line_end":157,"column_start":1,"column_end":81}},{"value":"/ it is set to `Some`. No limit is applied when `limit` is set to `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245677,"byte_end":245752,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245753,"byte_end":245756,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The limit can be used to partially delete a child trie in case it is too large","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245757,"byte_end":245839,"line_start":160,"line_end":160,"column_start":1,"column_end":83}},{"value":"/ to delete in one go (block).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245840,"byte_end":245872,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245873,"byte_end":245876,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245877,"byte_end":245887,"line_start":163,"line_end":163,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245888,"byte_end":245891,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Please note that keys that are residing in the overlay for that child trie when","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245892,"byte_end":245975,"line_start":165,"line_end":165,"column_start":1,"column_end":84}},{"value":"/ issuing this call are all deleted without counting towards the `limit`. Only keys","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":245976,"byte_end":246061,"line_start":166,"line_end":166,"column_start":1,"column_end":86}},{"value":"/ written during the current block are part of the overlay. Deleting with a `limit`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246062,"byte_end":246147,"line_start":167,"line_end":167,"column_start":1,"column_end":86}},{"value":"/ mostly makes sense with an empty overlay for that child trie.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246148,"byte_end":246213,"line_start":168,"line_end":168,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246214,"byte_end":246217,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Calling this function multiple times per block for the same `storage_key` does","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246218,"byte_end":246300,"line_start":170,"line_end":170,"column_start":1,"column_end":83}},{"value":"/ not make much sense because it is not cumulative when called inside the same block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246301,"byte_end":246388,"line_start":171,"line_end":171,"column_start":1,"column_end":88}},{"value":"/ Use this function to distribute the deletion of a single child trie across multiple","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246389,"byte_end":246476,"line_start":172,"line_end":172,"column_start":1,"column_end":88}},{"value":"/ blocks.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246477,"byte_end":246488,"line_start":173,"line_end":173,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246798,"byte_end":246802,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"kill","qualname":"::storage::child::kill","value":"pub fn kill(&ChildInfo, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Ensure `key` has no explicit entry in storage.\n","sig":null,"attributes":[{"value":"/ Ensure `key` has no explicit entry in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":246740,"byte_end":246790,"line_start":186,"line_end":186,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247049,"byte_end":247056,"line_start":202,"line_end":202,"column_start":8,"column_end":15},"name":"get_raw","qualname":"::storage::child::get_raw","value":"pub fn get_raw(&ChildInfo, &[u8]) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a Vec of bytes from storage.\n","sig":null,"attributes":[{"value":"/ Get a Vec of bytes from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247005,"byte_end":247041,"line_start":201,"line_end":201,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247309,"byte_end":247316,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"put_raw","qualname":"::storage::child::put_raw","value":"pub fn put_raw(&ChildInfo, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Put a raw byte slice into storage.\n","sig":null,"attributes":[{"value":"/ Put a raw byte slice into storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247263,"byte_end":247301,"line_start":214,"line_end":214,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247576,"byte_end":247580,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"root","qualname":"::storage::child::root","value":"pub fn root(&ChildInfo) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculate current child root value.\n","sig":null,"attributes":[{"value":"/ Calculate current child root value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247529,"byte_end":247568,"line_start":229,"line_end":229,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247859,"byte_end":247862,"line_start":241,"line_end":241,"column_start":8,"column_end":11},"name":"len","qualname":"::storage::child::len","value":"pub fn len(&ChildInfo, &[u8]) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Return the length in bytes of the value without reading it. `None` if it does not exist.\n","sig":null,"attributes":[{"value":"/ Return the length in bytes of the value without reading it. `None` if it does not exist.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/child.rs","byte_start":247759,"byte_end":247851,"line_start":240,"line_end":240,"column_start":1,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":534},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"generator","qualname":"::storage::generator","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":672},{"krate":0,"index":829},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911}],"decl_id":null,"docs":" Generators are a set of trait on which storage traits are implemented.","sig":null,"attributes":[{"value":"/ Generators are a set of trait on which storage traits are implemented.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":248815,"byte_end":248889,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":248890,"byte_end":248893,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ (i.e. implementing the generator for StorageValue on a type will automatically derive the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":248894,"byte_end":248987,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ implementation of StorageValue for this type).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":248988,"byte_end":249038,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249039,"byte_end":249042,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ They are used by `decl_storage`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249043,"byte_end":249079,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249080,"byte_end":249083,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is internal api and is subject to change.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/mod.rs","byte_start":249084,"byte_end":249134,"line_start":25,"line_end":25,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":582},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254278,"byte_end":254288,"line_start":38,"line_end":38,"column_start":11,"column_end":21},"name":"StorageMap","qualname":"::storage::generator::map::StorageMap","value":"StorageMap<K: FullEncode, V: FullCodec>","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" Generator for `StorageMap` used by `decl_storage`.","sig":null,"attributes":[{"value":"/ Generator for `StorageMap` used by `decl_storage`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":253860,"byte_end":253914,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":253915,"byte_end":253918,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ By default each key value is stored at:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":253919,"byte_end":253962,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":253963,"byte_end":253979,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/ Twox128(module_prefix) ++ Twox128(storage_prefix) ++ Hasher(encode(key))","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":253980,"byte_end":254056,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254057,"byte_end":254064,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254065,"byte_end":254068,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254069,"byte_end":254082,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254083,"byte_end":254086,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ If the keys are not trusted (e.g. can be set by a user), a cryptographic `hasher` such as","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254087,"byte_end":254180,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/ `blake2_256` must be used.  Otherwise, other values in storage can be compromised.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254181,"byte_end":254267,"line_start":37,"line_end":37,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":585},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254363,"byte_end":254368,"line_start":40,"line_end":40,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::generator::map::StorageMap::Query","value":"type Query;","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" The type that get/take returns.\n","sig":null,"attributes":[{"value":"/ The type that get/take returns.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254321,"byte_end":254356,"line_start":39,"line_end":39,"column_start":2,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":586},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254421,"byte_end":254427,"line_start":43,"line_end":43,"column_start":7,"column_end":13},"name":"Hasher","qualname":"::storage::generator::map::StorageMap::Hasher","value":"type Hasher: StorageHasher;","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Hasher. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Hasher. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254372,"byte_end":254414,"line_start":42,"line_end":42,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254500,"byte_end":254513,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"name":"module_prefix","qualname":"::storage::generator::map::StorageMap::module_prefix","value":"pub fn module_prefix() -> &'static [u8]","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Module prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Module prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254446,"byte_end":254495,"line_start":45,"line_end":45,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254591,"byte_end":254605,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"storage_prefix","qualname":"::storage::generator::map::StorageMap::storage_prefix","value":"pub fn storage_prefix() -> &'static [u8]","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Storage prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Storage prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254536,"byte_end":254586,"line_start":48,"line_end":48,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254737,"byte_end":254748,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"prefix_hash","qualname":"::storage::generator::map::StorageMap::prefix_hash","value":"pub fn prefix_hash() -> Vec<u8>","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" The full prefix; just the hash of `module_prefix` concatenated to the hash of\n `storage_prefix`.\n","sig":null,"attributes":[{"value":"/ The full prefix; just the hash of `module_prefix` concatenated to the hash of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254628,"byte_end":254709,"line_start":51,"line_end":51,"column_start":2,"column_end":83}},{"value":"/ `storage_prefix`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":254711,"byte_end":254732,"line_start":52,"line_end":52,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":255210,"byte_end":255238,"line_start":68,"line_end":68,"column_start":5,"column_end":33},"name":"from_optional_value_to_query","qualname":"::storage::generator::map::StorageMap::from_optional_value_to_query","value":"pub fn from_optional_value_to_query(Option<V>) -> Self::Query","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Convert an optional value retrieved from storage to the type queried.\n","sig":null,"attributes":[{"value":"/ Convert an optional value retrieved from storage to the type queried.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":255132,"byte_end":255205,"line_start":67,"line_end":67,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":255330,"byte_end":255358,"line_start":71,"line_end":71,"column_start":5,"column_end":33},"name":"from_query_to_optional_value","qualname":"::storage::generator::map::StorageMap::from_query_to_optional_value","value":"pub fn from_query_to_optional_value(Self::Query) -> Option<V>","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Convert a query to an optional value into storage.\n","sig":null,"attributes":[{"value":"/ Convert a query to an optional value into storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":255271,"byte_end":255325,"line_start":70,"line_end":70,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":255442,"byte_end":255463,"line_start":74,"line_end":74,"column_start":5,"column_end":26},"name":"storage_map_final_key","qualname":"::storage::generator::map::StorageMap::storage_map_final_key","value":"pub fn storage_map_final_key<KeyArg>(KeyArg) -> Vec<u8> where\nKeyArg: EncodeLike<K>","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" Generate the full key used in top storage.\n","sig":null,"attributes":[{"value":"/ Generate the full key used in top storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":255391,"byte_end":255437,"line_start":73,"line_end":73,"column_start":2,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":720},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267155,"byte_end":267171,"line_start":44,"line_end":44,"column_start":11,"column_end":27},"name":"StorageDoubleMap","qualname":"::storage::generator::double_map::StorageDoubleMap","value":"StorageDoubleMap<K1: FullEncode, K2: FullEncode, V: FullCodec>","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734}],"decl_id":null,"docs":" Generator for `StorageDoubleMap` used by `decl_storage`.","sig":null,"attributes":[{"value":"/ Generator for `StorageDoubleMap` used by `decl_storage`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266193,"byte_end":266253,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266254,"byte_end":266257,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Mapping of keys to a storage path","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266258,"byte_end":266297,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266298,"byte_end":266301,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The storage key (i.e. the key under which the `Value` will be stored) is created from two parts.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266302,"byte_end":266402,"line_start":28,"line_end":28,"column_start":1,"column_end":101}},{"value":"/ The first part is a hash of a concatenation of the `key1_prefix` and `Key1`. And the second part","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266403,"byte_end":266503,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/ is a hash of a `Key2`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266504,"byte_end":266530,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266531,"byte_end":266534,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Thus value for (key1, key2) is stored at:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266535,"byte_end":266580,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266581,"byte_end":266597,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ Twox128(module_prefix) ++ Twox128(storage_prefix) ++ Hasher1(encode(key1)) ++ Hasher2(encode(key2))","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266598,"byte_end":266701,"line_start":34,"line_end":34,"column_start":1,"column_end":104}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266702,"byte_end":266709,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266710,"byte_end":266713,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266714,"byte_end":266727,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266728,"byte_end":266731,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If the key1s are not trusted (e.g. can be set by a user), a cryptographic `hasher` such as","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266732,"byte_end":266826,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ `blake2_256` must be used for Hasher1. Otherwise, other values in storage can be compromised.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266827,"byte_end":266924,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/ If the key2s are not trusted (e.g. can be set by a user), a cryptographic `hasher` such as","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":266925,"byte_end":267019,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ `blake2_256` must be used for Hasher2. Otherwise, other items in storage with the same first","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267020,"byte_end":267116,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"/ key can be compromised.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267117,"byte_end":267144,"line_start":43,"line_end":43,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":724},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267263,"byte_end":267268,"line_start":46,"line_end":46,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::generator::double_map::StorageDoubleMap::Query","value":"type Query;","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" The type that get/take returns.\n","sig":null,"attributes":[{"value":"/ The type that get/take returns.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267221,"byte_end":267256,"line_start":45,"line_end":45,"column_start":2,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":725},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267308,"byte_end":267315,"line_start":49,"line_end":49,"column_start":7,"column_end":14},"name":"Hasher1","qualname":"::storage::generator::double_map::StorageDoubleMap::Hasher1","value":"type Hasher1: StorageHasher;","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Hasher for the first key.\n","sig":null,"attributes":[{"value":"/ Hasher for the first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267272,"byte_end":267301,"line_start":48,"line_end":48,"column_start":2,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":726},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267371,"byte_end":267378,"line_start":52,"line_end":52,"column_start":7,"column_end":14},"name":"Hasher2","qualname":"::storage::generator::double_map::StorageDoubleMap::Hasher2","value":"type Hasher2: StorageHasher;","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Hasher for the second key.\n","sig":null,"attributes":[{"value":"/ Hasher for the second key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267334,"byte_end":267364,"line_start":51,"line_end":51,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267451,"byte_end":267464,"line_start":55,"line_end":55,"column_start":5,"column_end":18},"name":"module_prefix","qualname":"::storage::generator::double_map::StorageDoubleMap::module_prefix","value":"pub fn module_prefix() -> &'static [u8]","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Module prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Module prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267397,"byte_end":267446,"line_start":54,"line_end":54,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267542,"byte_end":267556,"line_start":58,"line_end":58,"column_start":5,"column_end":19},"name":"storage_prefix","qualname":"::storage::generator::double_map::StorageDoubleMap::storage_prefix","value":"pub fn storage_prefix() -> &'static [u8]","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Storage prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Storage prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267487,"byte_end":267537,"line_start":57,"line_end":57,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267688,"byte_end":267699,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"prefix_hash","qualname":"::storage::generator::double_map::StorageDoubleMap::prefix_hash","value":"pub fn prefix_hash() -> Vec<u8>","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" The full prefix; just the hash of `module_prefix` concatenated to the hash of\n `storage_prefix`.\n","sig":null,"attributes":[{"value":"/ The full prefix; just the hash of `module_prefix` concatenated to the hash of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267579,"byte_end":267660,"line_start":60,"line_end":60,"column_start":2,"column_end":83}},{"value":"/ `storage_prefix`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":267662,"byte_end":267683,"line_start":61,"line_end":61,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":268161,"byte_end":268189,"line_start":77,"line_end":77,"column_start":5,"column_end":33},"name":"from_optional_value_to_query","qualname":"::storage::generator::double_map::StorageDoubleMap::from_optional_value_to_query","value":"pub fn from_optional_value_to_query(Option<V>) -> Self::Query","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Convert an optional value retrieved from storage to the type queried.\n","sig":null,"attributes":[{"value":"/ Convert an optional value retrieved from storage to the type queried.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":268083,"byte_end":268156,"line_start":76,"line_end":76,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":268281,"byte_end":268309,"line_start":80,"line_end":80,"column_start":5,"column_end":33},"name":"from_query_to_optional_value","qualname":"::storage::generator::double_map::StorageDoubleMap::from_query_to_optional_value","value":"pub fn from_query_to_optional_value(Self::Query) -> Option<V>","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Convert a query to an optional value into storage.\n","sig":null,"attributes":[{"value":"/ Convert a query to an optional value into storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":268222,"byte_end":268276,"line_start":79,"line_end":79,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":268406,"byte_end":268435,"line_start":83,"line_end":83,"column_start":5,"column_end":34},"name":"storage_double_map_final_key1","qualname":"::storage::generator::double_map::StorageDoubleMap::storage_double_map_final_key1","value":"pub fn storage_double_map_final_key1<KArg1>(KArg1) -> Vec<u8> where\nKArg1: EncodeLike<K1>","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Generate the first part of the key used in top storage.\n","sig":null,"attributes":[{"value":"/ Generate the first part of the key used in top storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":268342,"byte_end":268401,"line_start":82,"line_end":82,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":269077,"byte_end":269105,"line_start":102,"line_end":102,"column_start":5,"column_end":33},"name":"storage_double_map_final_key","qualname":"::storage::generator::double_map::StorageDoubleMap::storage_double_map_final_key","value":"pub fn storage_double_map_final_key<KArg1, KArg2>(KArg1, KArg2) -> Vec<u8>\nwhere KArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Generate the full key used in top storage.\n","sig":null,"attributes":[{"value":"/ Generate the full key used in top storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":269026,"byte_end":269072,"line_start":101,"line_end":101,"column_start":2,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":864},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283149,"byte_end":283161,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"name":"StorageValue","qualname":"::storage::generator::value::StorageValue","value":"StorageValue<T: FullCodec>","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":" Generator for `StorageValue` used by `decl_storage`.","sig":null,"attributes":[{"value":"/ Generator for `StorageValue` used by `decl_storage`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":282964,"byte_end":283020,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283021,"byte_end":283024,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ By default value is stored at:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283025,"byte_end":283059,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283060,"byte_end":283076,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/ Twox128(module_prefix) ++ Twox128(storage_prefix)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283077,"byte_end":283130,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283131,"byte_end":283138,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":866},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283221,"byte_end":283226,"line_start":33,"line_end":33,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::generator::value::StorageValue::Query","value":"type Query;","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" The type that get/take returns.\n","sig":null,"attributes":[{"value":"/ The type that get/take returns.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283179,"byte_end":283214,"line_start":32,"line_end":32,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283284,"byte_end":283297,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"module_prefix","qualname":"::storage::generator::value::StorageValue::module_prefix","value":"pub fn module_prefix() -> &'static [u8]","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Module prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Module prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283230,"byte_end":283279,"line_start":35,"line_end":35,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283375,"byte_end":283389,"line_start":39,"line_end":39,"column_start":5,"column_end":19},"name":"storage_prefix","qualname":"::storage::generator::value::StorageValue::storage_prefix","value":"pub fn storage_prefix() -> &'static [u8]","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Storage prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Storage prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283320,"byte_end":283370,"line_start":38,"line_end":38,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283490,"byte_end":283518,"line_start":42,"line_end":42,"column_start":5,"column_end":33},"name":"from_optional_value_to_query","qualname":"::storage::generator::value::StorageValue::from_optional_value_to_query","value":"pub fn from_optional_value_to_query(Option<T>) -> Self::Query","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Convert an optional value retrieved from storage to the type queried.\n","sig":null,"attributes":[{"value":"/ Convert an optional value retrieved from storage to the type queried.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283412,"byte_end":283485,"line_start":41,"line_end":41,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283610,"byte_end":283638,"line_start":45,"line_end":45,"column_start":5,"column_end":33},"name":"from_query_to_optional_value","qualname":"::storage::generator::value::StorageValue::from_query_to_optional_value","value":"pub fn from_query_to_optional_value(Self::Query) -> Option<T>","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Convert a query to an optional value into storage.\n","sig":null,"attributes":[{"value":"/ Convert a query to an optional value into storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283551,"byte_end":283605,"line_start":44,"line_end":44,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283722,"byte_end":283745,"line_start":48,"line_end":48,"column_start":5,"column_end":28},"name":"storage_value_final_key","qualname":"::storage::generator::value::StorageValue::storage_value_final_key","value":"pub fn storage_value_final_key() -> [u8; ]","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Generate the full key used in top storage.\n","sig":null,"attributes":[{"value":"/ Generate the full key used in top storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":283671,"byte_end":283717,"line_start":47,"line_end":47,"column_start":2,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"migration","qualname":"::storage::migration","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":945},{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":963},{"krate":0,"index":970},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"decl_id":null,"docs":" Some utilities for helping access storage with arbitrary key types.\n","sig":null,"attributes":[{"value":"/ Some utilities for helping access storage with arbitrary key types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":286892,"byte_end":286963,"line_start":18,"line_end":18,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":939},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287209,"byte_end":287224,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"StorageIterator","qualname":"::storage::migration::StorageIterator","value":"StorageIterator {  }","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":" Utility to iterate through raw items in storage.\n","sig":null,"attributes":[{"value":"/ Utility to iterate through raw items in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287145,"byte_end":287197,"line_start":27,"line_end":27,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287557,"byte_end":287560,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageIterator<T>>::new","value":"pub fn new(&[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287364,"byte_end":287451,"line_start":36,"line_end":36,"column_start":2,"column_end":89}},{"value":"deprecated(note =\n             \"Please use the storage_iter or storage_iter_with_suffix functions instead\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287453,"byte_end":287548,"line_start":37,"line_end":37,"column_start":2,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287863,"byte_end":287874,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"with_suffix","qualname":"<StorageIterator<T>>::with_suffix","value":"pub fn with_suffix(&[u8], &[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287670,"byte_end":287757,"line_start":43,"line_end":43,"column_start":2,"column_end":89}},{"value":"deprecated(note =\n             \"Please use the storage_iter or storage_iter_with_suffix functions instead\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287759,"byte_end":287854,"line_start":44,"line_end":44,"column_start":2,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":288315,"byte_end":288320,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"drain","qualname":"<StorageIterator<T>>::drain","value":"pub fn drain(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mutate this iterator into a draining iterator; items iterated are removed from storage.\n","sig":null,"attributes":[{"value":"/ Mutate this iterator into a draining iterator; items iterated are removed from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":288215,"byte_end":288306,"line_start":54,"line_end":54,"column_start":2,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289135,"byte_end":289153,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"StorageKeyIterator","qualname":"::storage::migration::StorageKeyIterator","value":"StorageKeyIterator {  }","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"decl_id":null,"docs":" Utility to iterate through raw items in storage.\n","sig":null,"attributes":[{"value":"/ Utility to iterate through raw items in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289071,"byte_end":289123,"line_start":88,"line_end":88,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289573,"byte_end":289576,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageKeyIterator<K, T, H>>::new","value":"pub fn new(&[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289372,"byte_end":289459,"line_start":97,"line_end":97,"column_start":2,"column_end":89}},{"value":"deprecated(note =\n             \"Please use the storage_key_iter or storage_key_iter_with_suffix functions instead\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289461,"byte_end":289564,"line_start":98,"line_end":98,"column_start":2,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289887,"byte_end":289898,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"name":"with_suffix","qualname":"<StorageKeyIterator<K, T, H>>::with_suffix","value":"pub fn with_suffix(&[u8], &[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289686,"byte_end":289773,"line_start":104,"line_end":104,"column_start":2,"column_end":89}},{"value":"deprecated(note =\n             \"Please use the storage_key_iter or storage_key_iter_with_suffix functions instead\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289775,"byte_end":289878,"line_start":105,"line_end":105,"column_start":2,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":290339,"byte_end":290344,"line_start":116,"line_end":116,"column_start":9,"column_end":14},"name":"drain","qualname":"<StorageKeyIterator<K, T, H>>::drain","value":"pub fn drain(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mutate this iterator into a draining iterator; items iterated are removed from storage.\n","sig":null,"attributes":[{"value":"/ Mutate this iterator into a draining iterator; items iterated are removed from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":290239,"byte_end":290330,"line_start":115,"line_end":115,"column_start":2,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":977},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":291381,"byte_end":291393,"line_start":158,"line_end":158,"column_start":8,"column_end":20},"name":"storage_iter","qualname":"::storage::migration::storage_iter","value":"pub fn storage_iter<T: Decode + Sized>(&[u8], &[u8])\n-> PrefixIterator<(Vec<u8>, T)>","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":291286,"byte_end":291373,"line_start":157,"line_end":157,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":979},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":291622,"byte_end":291646,"line_start":163,"line_end":163,"column_start":8,"column_end":32},"name":"storage_iter_with_suffix","qualname":"::storage::migration::storage_iter_with_suffix","value":"pub fn storage_iter_with_suffix<T: Decode + Sized>(&[u8], &[u8], &[u8])\n-> PrefixIterator<(Vec<u8>, T)>","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":291527,"byte_end":291614,"line_start":162,"line_end":162,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":982},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":292278,"byte_end":292294,"line_start":182,"line_end":182,"column_start":8,"column_end":24},"name":"storage_key_iter","qualname":"::storage::migration::storage_key_iter","value":"pub fn storage_key_iter<K: Decode + Sized, T: Decode + Sized,\n                        H: ReversibleStorageHasher>(&[u8], &[u8])\n-> PrefixIterator<(K, T)>","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":292183,"byte_end":292270,"line_start":181,"line_end":181,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":986},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":292584,"byte_end":292612,"line_start":190,"line_end":190,"column_start":8,"column_end":36},"name":"storage_key_iter_with_suffix","qualname":"::storage::migration::storage_key_iter_with_suffix","value":"pub fn storage_key_iter_with_suffix<K: Decode + Sized, T: Decode + Sized,\n                                    H: ReversibleStorageHasher>(&[u8], &[u8],\n                                                                &[u8])\n-> PrefixIterator<(K, T)>","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over map items in `module` for the map called `item`.\n","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over map items in `module` for the map called `item`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":292489,"byte_end":292576,"line_start":189,"line_end":189,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":991},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":293369,"byte_end":293387,"line_start":210,"line_end":210,"column_start":8,"column_end":26},"name":"have_storage_value","qualname":"::storage::migration::have_storage_value","value":"pub fn have_storage_value(&[u8], &[u8], &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.\n","sig":null,"attributes":[{"value":"/ Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":293265,"byte_end":293361,"line_start":209,"line_end":209,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":293601,"byte_end":293618,"line_start":215,"line_end":215,"column_start":8,"column_end":25},"name":"get_storage_value","qualname":"::storage::migration::get_storage_value","value":"pub fn get_storage_value<T: Decode + Sized>(&[u8], &[u8], &[u8]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.\n","sig":null,"attributes":[{"value":"/ Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":293497,"byte_end":293593,"line_start":214,"line_end":214,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":994},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":294034,"byte_end":294052,"line_start":224,"line_end":224,"column_start":8,"column_end":26},"name":"take_storage_value","qualname":"::storage::migration::take_storage_value","value":"pub fn take_storage_value<T: Decode + Sized>(&[u8], &[u8], &[u8]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Take a particular value in storage by the `module`, the map's `item` name and the key `hash`.\n","sig":null,"attributes":[{"value":"/ Take a particular value in storage by the `module`, the map's `item` name and the key `hash`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":293929,"byte_end":294026,"line_start":223,"line_end":223,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":996},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":294470,"byte_end":294487,"line_start":233,"line_end":233,"column_start":8,"column_end":25},"name":"put_storage_value","qualname":"::storage::migration::put_storage_value","value":"pub fn put_storage_value<T: Encode>(&[u8], &[u8], &[u8], T)","parent":null,"children":[],"decl_id":null,"docs":" Put a particular value into storage by the `module`, the map's `item` name and the key `hash`.\n","sig":null,"attributes":[{"value":"/ Put a particular value into storage by the `module`, the map's `item` name and the key `hash`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":294364,"byte_end":294462,"line_start":232,"line_end":232,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":998},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":294895,"byte_end":294916,"line_start":242,"line_end":242,"column_start":8,"column_end":29},"name":"remove_storage_prefix","qualname":"::storage::migration::remove_storage_prefix","value":"pub fn remove_storage_prefix(&[u8], &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.\n","sig":null,"attributes":[{"value":"/ Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":294791,"byte_end":294887,"line_start":241,"line_end":241,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":999},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295302,"byte_end":295319,"line_start":251,"line_end":251,"column_start":8,"column_end":25},"name":"take_storage_item","qualname":"::storage::migration::take_storage_item","value":"pub fn take_storage_item<K: Encode + Sized, T: Decode + Sized,\n                         H: StorageHasher>(&[u8], &[u8], K) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.\n","sig":null,"attributes":[{"value":"/ Get a particular value in storage by the `module`, the map's `item` name and the key `hash`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295198,"byte_end":295294,"line_start":250,"line_end":250,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":1003},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296432,"byte_end":296456,"line_start":279,"line_end":279,"column_start":8,"column_end":32},"name":"move_storage_from_pallet","qualname":"::storage::migration::move_storage_from_pallet","value":"pub fn move_storage_from_pallet(&[u8], &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Move a storage from a pallet prefix to another pallet prefix.","sig":null,"attributes":[{"value":"/ Move a storage from a pallet prefix to another pallet prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295507,"byte_end":295572,"line_start":259,"line_end":259,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295573,"byte_end":295576,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Keys used in pallet storages always start with:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295577,"byte_end":295628,"line_start":261,"line_end":261,"column_start":1,"column_end":52}},{"value":"/ `concat(twox_128(pallet_name), towx_128(storage_name))`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295629,"byte_end":295689,"line_start":262,"line_end":262,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295690,"byte_end":295693,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function will remove all value for which the key start with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295694,"byte_end":295762,"line_start":264,"line_end":264,"column_start":1,"column_end":69}},{"value":"/ `concat(twox_128(old_pallet_name), towx_128(storage_name))` and insert them at the key with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295763,"byte_end":295858,"line_start":265,"line_end":265,"column_start":1,"column_end":96}},{"value":"/ the start replaced by `concat(twox_128(new_pallet_name), towx_128(storage_name))`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295859,"byte_end":295945,"line_start":266,"line_end":266,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295946,"byte_end":295949,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295950,"byte_end":295963,"line_start":268,"line_end":268,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295964,"byte_end":295967,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ If a pallet named \"my_example\" has 2 storages named \"Foo\" and \"Bar\" and the pallet is renamed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":295968,"byte_end":296065,"line_start":270,"line_end":270,"column_start":1,"column_end":98}},{"value":"/ \"my_new_example_name\", a migration can be:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296066,"byte_end":296112,"line_start":271,"line_end":271,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296113,"byte_end":296120,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # use frame_support::storage::migration::move_storage_from_pallet;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296121,"byte_end":296191,"line_start":273,"line_end":273,"column_start":1,"column_end":71}},{"value":"/ # sp_io::TestExternalities::new_empty().execute_with(|| {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296192,"byte_end":296253,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/ move_storage_from_pallet(b\"Foo\", b\"my_example\", b\"my_new_example_name\");","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296254,"byte_end":296330,"line_start":275,"line_end":275,"column_start":1,"column_end":77}},{"value":"/ move_storage_from_pallet(b\"Bar\", b\"my_example\", b\"my_new_example_name\");","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296331,"byte_end":296407,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ # })","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296408,"byte_end":296416,"line_start":277,"line_end":277,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":296417,"byte_end":296424,"line_start":278,"line_end":278,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1004},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297835,"byte_end":297846,"line_start":320,"line_end":320,"column_start":8,"column_end":19},"name":"move_pallet","qualname":"::storage::migration::move_pallet","value":"pub fn move_pallet(&[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Move all storages from a pallet prefix to another pallet prefix.","sig":null,"attributes":[{"value":"/ Move all storages from a pallet prefix to another pallet prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297028,"byte_end":297096,"line_start":300,"line_end":300,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297097,"byte_end":297100,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Keys used in pallet storages always start with:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297101,"byte_end":297152,"line_start":302,"line_end":302,"column_start":1,"column_end":52}},{"value":"/ `concat(twox_128(pallet_name), towx_128(storage_name))`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297153,"byte_end":297213,"line_start":303,"line_end":303,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297214,"byte_end":297217,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ This function will remove all value for which the key start with `twox_128(old_pallet_name)`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297218,"byte_end":297314,"line_start":305,"line_end":305,"column_start":1,"column_end":97}},{"value":"/ and insert them at the key with the start replaced by `twox_128(new_pallet_name)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297315,"byte_end":297401,"line_start":306,"line_end":306,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297402,"byte_end":297405,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ NOTE: The value at the key `twox_128(old_pallet_name)` is not moved.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297406,"byte_end":297478,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297479,"byte_end":297482,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297483,"byte_end":297496,"line_start":310,"line_end":310,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297497,"byte_end":297500,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ If a pallet named \"my_example\" has some storages and the pallet is renamed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297501,"byte_end":297579,"line_start":312,"line_end":312,"column_start":1,"column_end":79}},{"value":"/ \"my_new_example_name\", a migration can be:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297580,"byte_end":297626,"line_start":313,"line_end":313,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297627,"byte_end":297634,"line_start":314,"line_end":314,"column_start":1,"column_end":8}},{"value":"/ # use frame_support::storage::migration::move_pallet;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297635,"byte_end":297692,"line_start":315,"line_end":315,"column_start":1,"column_end":58}},{"value":"/ # sp_io::TestExternalities::new_empty().execute_with(|| {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297693,"byte_end":297754,"line_start":316,"line_end":316,"column_start":1,"column_end":62}},{"value":"/ move_pallet(b\"my_example\", b\"my_new_example_name\");","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297755,"byte_end":297810,"line_start":317,"line_end":317,"column_start":1,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297811,"byte_end":297819,"line_start":318,"line_end":318,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297820,"byte_end":297827,"line_start":319,"line_end":319,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":298275,"byte_end":298286,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"move_prefix","qualname":"::storage::migration::move_prefix","value":"pub fn move_prefix(&[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Move all `(key, value)` after some prefix to the another prefix","sig":null,"attributes":[{"value":"/ Move all `(key, value)` after some prefix to the another prefix","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":297979,"byte_end":298046,"line_start":324,"line_end":324,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":298047,"byte_end":298050,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ This function will remove all value for which the key start with `from_prefix`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":298051,"byte_end":298133,"line_start":326,"line_end":326,"column_start":1,"column_end":83}},{"value":"/ and insert them at the key with the start replaced by `to_prefix`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":298134,"byte_end":298204,"line_start":327,"line_end":327,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":298205,"byte_end":298208,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ NOTE: The value at the key `from_prefix` is not moved.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":298209,"byte_end":298267,"line_start":329,"line_end":329,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1007},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::storage::types","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1140},{"krate":0,"index":1324},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1599},{"krate":0,"index":1604},{"krate":0,"index":1608},{"krate":0,"index":1611}],"decl_id":null,"docs":" Storage types to build abstraction on storage, they implements storage traits such as\n StorageMap and others.\n","sig":null,"attributes":[{"value":"/ Storage types to build abstraction on storage, they implements storage traits such as","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303447,"byte_end":303536,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ StorageMap and others.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303537,"byte_end":303563,"line_start":19,"line_end":19,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307761,"byte_end":307773,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"StorageValue","qualname":"::storage::types::value::StorageValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type that allow to store a value.","sig":null,"attributes":[{"value":"/ A type that allow to store a value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307580,"byte_end":307619,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307620,"byte_end":307623,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Each value is stored at:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307624,"byte_end":307652,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307653,"byte_end":307669,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/ Twox128(Prefix::pallet_prefix()) ++ Twox128(Prefix::STORAGE_PREFIX)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307670,"byte_end":307741,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307742,"byte_end":307749,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309103,"byte_end":309113,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"try_append","qualname":"<StorageValue<Prefix, BoundedVec<VecValue, VecBound>, QueryKind, OnEmpty>>::try_append","value":"pub fn try_append<EncodeLikeItem>(EncodeLikeItem) -> Result<(), ()> where\nEncodeLikeItem: EncodeLike<VecValue>","parent":null,"children":[],"decl_id":null,"docs":" Try and append the given item to the value in the storage.","sig":null,"attributes":[{"value":"/ Try and append the given item to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":308959,"byte_end":309021,"line_start":73,"line_end":73,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309023,"byte_end":309026,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ Is only available if `Value` of the storage is [`BoundedVec`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309028,"byte_end":309094,"line_start":75,"line_end":75,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309597,"byte_end":309607,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"name":"hashed_key","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::hashed_key","value":"pub fn hashed_key() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the storage key.\n","sig":null,"attributes":[{"value":"/ Get the storage key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309564,"byte_end":309588,"line_start":91,"line_end":91,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309746,"byte_end":309752,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"exists","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::exists","value":"pub fn exists() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the value (explicitly) exist in storage?\n","sig":null,"attributes":[{"value":"/ Does the value (explicitly) exist in storage?","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309688,"byte_end":309737,"line_start":94,"line_end":94,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309888,"byte_end":309891,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"name":"get","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::get","value":"pub fn get() -> QueryKind::Query","parent":null,"children":[],"decl_id":null,"docs":" Load the value from the provided storage instance.\n","sig":null,"attributes":[{"value":"/ Load the value from the provided storage instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309825,"byte_end":309879,"line_start":97,"line_end":97,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310091,"byte_end":310098,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"name":"try_get","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::try_get","value":"pub fn try_get() -> Result<Value, ()>","parent":null,"children":[],"decl_id":null,"docs":" Try to get the underlying value from the provided storage instance; `Ok` if it exists,\n `Err` if not.\n","sig":null,"attributes":[{"value":"/ Try to get the underlying value from the provided storage instance; `Ok` if it exists,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309973,"byte_end":310063,"line_start":100,"line_end":100,"column_start":2,"column_end":92}},{"value":"/ `Err` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310065,"byte_end":310082,"line_start":101,"line_end":101,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311082,"byte_end":311091,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"translate","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::translate","value":"pub fn translate<O: Decode, F: FnOnce(Option<O>) -> Option<Value>>(F)\n-> Result<Option<Value>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a value from some previous type (`O`) to the current type.","sig":null,"attributes":[{"value":"/ Translate a value from some previous type (`O`) to the current type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310188,"byte_end":310260,"line_start":106,"line_end":106,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310262,"byte_end":310265,"line_start":107,"line_end":107,"column_start":2,"column_end":5}},{"value":"/ `f: F` is the translation function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310267,"byte_end":310306,"line_start":108,"line_end":108,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310308,"byte_end":310311,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ Returns `Err` if the storage item could not be interpreted as the old type, and Ok, along","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310313,"byte_end":310406,"line_start":110,"line_end":110,"column_start":2,"column_end":95}},{"value":"/ with the new value if it could.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310408,"byte_end":310443,"line_start":111,"line_end":111,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310445,"byte_end":310448,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ NOTE: This operates from and to `Option<_>` types; no effort is made to respect the default","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310450,"byte_end":310545,"line_start":113,"line_end":113,"column_start":2,"column_end":97}},{"value":"/ value of the original type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310547,"byte_end":310578,"line_start":114,"line_end":114,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310580,"byte_end":310583,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310585,"byte_end":310598,"line_start":116,"line_end":116,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310600,"byte_end":310603,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ This function must be used with care, before being updated the storage still contains the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310605,"byte_end":310698,"line_start":118,"line_end":118,"column_start":2,"column_end":95}},{"value":"/ old type, thus other calls (such as `get`) will fail at decoding it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310700,"byte_end":310772,"line_start":119,"line_end":119,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310774,"byte_end":310777,"line_start":120,"line_end":120,"column_start":2,"column_end":5}},{"value":"/ # Usage","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310779,"byte_end":310790,"line_start":121,"line_end":121,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310792,"byte_end":310795,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ This would typically be called inside the module implementation of on_runtime_upgrade,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310797,"byte_end":310887,"line_start":123,"line_end":123,"column_start":2,"column_end":92}},{"value":"/ while ensuring **no usage of this storage are made before the call to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310889,"byte_end":310962,"line_start":124,"line_end":124,"column_start":2,"column_end":75}},{"value":"/ `on_runtime_upgrade`**. (More precisely prior initialized modules doesn't make use of this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":310964,"byte_end":311058,"line_start":125,"line_end":125,"column_start":2,"column_end":96}},{"value":"/ storage).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311060,"byte_end":311073,"line_start":126,"line_end":126,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311329,"byte_end":311332,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"name":"put","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::put","value":"pub fn put<Arg: EncodeLike<Value>>(Arg)","parent":null,"children":[],"decl_id":null,"docs":" Store a value under this key into the provided storage instance.\n","sig":null,"attributes":[{"value":"/ Store a value under this key into the provided storage instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311252,"byte_end":311320,"line_start":133,"line_end":133,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311578,"byte_end":311581,"line_start":141,"line_end":141,"column_start":9,"column_end":12},"name":"set","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::set","value":"pub fn set(QueryKind::Query)","parent":null,"children":[],"decl_id":null,"docs":" Store a value under this key into the provided storage instance.","sig":null,"attributes":[{"value":"/ Store a value under this key into the provided storage instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311432,"byte_end":311500,"line_start":138,"line_end":138,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311502,"byte_end":311505,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ this uses the query type rather than the underlying value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311507,"byte_end":311569,"line_start":140,"line_end":140,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311696,"byte_end":311702,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"mutate","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::mutate","value":"pub fn mutate<R, F: FnOnce(&mut QueryKind::Query) -> R>(F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value\n","sig":null,"attributes":[{"value":"/ Mutate the value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311667,"byte_end":311687,"line_start":143,"line_end":143,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311875,"byte_end":311885,"line_start":149,"line_end":149,"column_start":9,"column_end":19},"name":"try_mutate","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::try_mutate","value":"pub fn try_mutate<R, E, F: FnOnce(&mut QueryKind::Query) -> Result<R, E>>(F)\n-> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value if closure returns `Ok`\n","sig":null,"attributes":[{"value":"/ Mutate the value if closure returns `Ok`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":311822,"byte_end":311866,"line_start":148,"line_end":148,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312077,"byte_end":312081,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"kill","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::kill","value":"pub fn kill()","parent":null,"children":[],"decl_id":null,"docs":" Clear the storage value.\n","sig":null,"attributes":[{"value":"/ Clear the storage value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312040,"byte_end":312068,"line_start":155,"line_end":155,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312207,"byte_end":312211,"line_start":159,"line_end":159,"column_start":9,"column_end":13},"name":"take","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::take","value":"pub fn take() -> QueryKind::Query","parent":null,"children":[],"decl_id":null,"docs":" Take a value from storage, removing it afterwards.\n","sig":null,"attributes":[{"value":"/ Take a value from storage, removing it afterwards.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312144,"byte_end":312198,"line_start":158,"line_end":158,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312635,"byte_end":312641,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"name":"append","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::append","value":"pub fn append<Item, EncodeLikeItem>(EncodeLikeItem) where Item: Encode,\nEncodeLikeItem: EncodeLike<Item>, Value: StorageAppend<Item>","parent":null,"children":[],"decl_id":null,"docs":" Append the given item to the value in the storage.","sig":null,"attributes":[{"value":"/ Append the given item to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312294,"byte_end":312348,"line_start":161,"line_end":161,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312350,"byte_end":312353,"line_start":162,"line_end":162,"column_start":2,"column_end":5}},{"value":"/ `Value` is required to implement [`StorageAppend`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312355,"byte_end":312410,"line_start":163,"line_end":163,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312412,"byte_end":312415,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312417,"byte_end":312430,"line_start":165,"line_end":165,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312432,"byte_end":312435,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ If the storage item is not encoded properly, the storage item will be overwritten","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312437,"byte_end":312522,"line_start":167,"line_end":167,"column_start":2,"column_end":87}},{"value":"/ and set to `[item]`. Any default value set for the storage item will be ignored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312524,"byte_end":312607,"line_start":168,"line_end":168,"column_start":2,"column_end":85}},{"value":"/ on overwrite.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312609,"byte_end":312626,"line_start":169,"line_end":169,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313280,"byte_end":313290,"line_start":190,"line_end":190,"column_start":9,"column_end":19},"name":"decode_len","qualname":"<StorageValue<Prefix, Value, QueryKind, OnEmpty>>::decode_len","value":"pub fn decode_len() -> Option<usize> where Value: StorageDecodeLength","parent":null,"children":[],"decl_id":null,"docs":" Read the length of the storage value without decoding the entire value.","sig":null,"attributes":[{"value":"/ Read the length of the storage value without decoding the entire value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312844,"byte_end":312919,"line_start":179,"line_end":179,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312921,"byte_end":312924,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ `Value` is required to implement [`StorageDecodeLength`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312926,"byte_end":312987,"line_start":181,"line_end":181,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312989,"byte_end":312992,"line_start":182,"line_end":182,"column_start":2,"column_end":5}},{"value":"/ If the value does not exists or it fails to decode the length, `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":312994,"byte_end":313080,"line_start":183,"line_end":183,"column_start":2,"column_end":88}},{"value":"/ Otherwise `Some(len)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313082,"byte_end":313120,"line_start":184,"line_end":184,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313122,"byte_end":313125,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313127,"byte_end":313140,"line_start":186,"line_end":186,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313142,"byte_end":313145,"line_start":187,"line_end":187,"column_start":2,"column_end":5}},{"value":"/ `None` does not mean that `get()` does not return a value. The default value is completly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313147,"byte_end":313240,"line_start":188,"line_end":188,"column_start":2,"column_end":95}},{"value":"/ ignored by this function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313242,"byte_end":313271,"line_start":189,"line_end":189,"column_start":2,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1128},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313471,"byte_end":313491,"line_start":196,"line_end":196,"column_start":11,"column_end":31},"name":"StorageValueMetadata","qualname":"::storage::types::value::StorageValueMetadata","value":"StorageValueMetadata","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" Part of storage metadata for storage value.\n","sig":null,"attributes":[{"value":"/ Part of storage metadata for storage value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313413,"byte_end":313460,"line_start":195,"line_end":195,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":1129},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313501,"byte_end":313509,"line_start":197,"line_end":197,"column_start":8,"column_end":16},"name":"MODIFIER","qualname":"::storage::types::value::StorageValueMetadata::MODIFIER","value":"StorageEntryModifier","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1130},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313540,"byte_end":313544,"line_start":198,"line_end":198,"column_start":8,"column_end":12},"name":"NAME","qualname":"::storage::types::value::StorageValueMetadata::NAME","value":"&'static str","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1131},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313567,"byte_end":313574,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"DEFAULT","qualname":"::storage::types::value::StorageValueMetadata::DEFAULT","value":"DefaultByteGetter","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1197},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318374,"byte_end":318384,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"StorageMap","qualname":"::storage::types::map::StorageMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type that allow to store value for given key. Allowing to insert/remove/iterate on values.","sig":null,"attributes":[{"value":"/ A type that allow to store value for given key. Allowing to insert/remove/iterate on values.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":317892,"byte_end":317988,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":317989,"byte_end":317992,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Each value is stored at:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":317993,"byte_end":318021,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318022,"byte_end":318038,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/ Twox128(Prefix::pallet_prefix())","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318039,"byte_end":318075,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/\t\t++ Twox128(Prefix::STORAGE_PREFIX)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318076,"byte_end":318115,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/\t\t++ Hasher1(encode(key))","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318116,"byte_end":318144,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318145,"byte_end":318152,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318153,"byte_end":318156,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318157,"byte_end":318170,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318171,"byte_end":318174,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the keys are not trusted (e.g. can be set by a user), a cryptographic `hasher` such as","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318175,"byte_end":318268,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/ `blake2_128_concat` must be used.  Otherwise, other values in storage can be compromised.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318269,"byte_end":318362,"line_start":45,"line_end":45,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320532,"byte_end":320542,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"name":"try_append","qualname":"<StorageMap<Prefix, Hasher, Key, BoundedVec<VecValue, VecBound>, QueryKind,\n           OnEmpty>>::try_append","value":"pub fn try_append<EncodeLikeItem,\n                  EncodeLikeKey>(EncodeLikeKey, EncodeLikeItem)\n-> Result<(), ()> where EncodeLikeKey: EncodeLike<Key> + Clone,\nEncodeLikeItem: EncodeLike<VecValue>","parent":null,"children":[],"decl_id":null,"docs":" Try and append the given item to the map in the storage.","sig":null,"attributes":[{"value":"/ Try and append the given item to the map in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320394,"byte_end":320454,"line_start":106,"line_end":106,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320456,"byte_end":320459,"line_start":107,"line_end":107,"column_start":2,"column_end":5}},{"value":"/ Is only available if `Value` of the map is [`BoundedVec`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320461,"byte_end":320523,"line_start":108,"line_end":108,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321260,"byte_end":321274,"line_start":134,"line_end":134,"column_start":9,"column_end":23},"name":"hashed_key_for","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::hashed_key_for","value":"pub fn hashed_key_for<KeyArg: EncodeLike<Key>>(KeyArg) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get the storage key used to fetch a value corresponding to a specific key.\n","sig":null,"attributes":[{"value":"/ Get the storage key used to fetch a value corresponding to a specific key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321173,"byte_end":321251,"line_start":133,"line_end":133,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321461,"byte_end":321473,"line_start":139,"line_end":139,"column_start":9,"column_end":21},"name":"contains_key","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::contains_key","value":"pub fn contains_key<KeyArg: EncodeLike<Key>>(KeyArg) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the value (explicitly) exist in storage?\n","sig":null,"attributes":[{"value":"/ Does the value (explicitly) exist in storage?","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321403,"byte_end":321452,"line_start":138,"line_end":138,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321668,"byte_end":321671,"line_start":144,"line_end":144,"column_start":9,"column_end":12},"name":"get","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::get","value":"pub fn get<KeyArg: EncodeLike<Key>>(KeyArg) -> QueryKind::Query","parent":null,"children":[],"decl_id":null,"docs":" Load the value associated with the given key from the map.\n","sig":null,"attributes":[{"value":"/ Load the value associated with the given key from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321597,"byte_end":321659,"line_start":143,"line_end":143,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321914,"byte_end":321921,"line_start":151,"line_end":151,"column_start":9,"column_end":16},"name":"try_get","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::try_get","value":"pub fn try_get<KeyArg: EncodeLike<Key>>(KeyArg) -> Result<Value, ()>","parent":null,"children":[],"decl_id":null,"docs":" Try to get the value for the given key from the map.","sig":null,"attributes":[{"value":"/ Try to get the value for the given key from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321798,"byte_end":321854,"line_start":148,"line_end":148,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321856,"byte_end":321859,"line_start":149,"line_end":149,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok` if it exists, `Err` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":321861,"byte_end":321905,"line_start":150,"line_end":150,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322094,"byte_end":322098,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"swap","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::swap","value":"pub fn swap<KeyArg1: EncodeLike<Key>,\n            KeyArg2: EncodeLike<Key>>(KeyArg1, KeyArg2)","parent":null,"children":[],"decl_id":null,"docs":" Swap the values of two keys.\n","sig":null,"attributes":[{"value":"/ Swap the values of two keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322053,"byte_end":322085,"line_start":155,"line_end":155,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322333,"byte_end":322339,"line_start":161,"line_end":161,"column_start":9,"column_end":15},"name":"insert","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::insert","value":"pub fn insert<KeyArg: EncodeLike<Key>,\n              ValArg: EncodeLike<Value>>(KeyArg, ValArg)","parent":null,"children":[],"decl_id":null,"docs":" Store a value to be associated with the given key from the map.\n","sig":null,"attributes":[{"value":"/ Store a value to be associated with the given key from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322257,"byte_end":322324,"line_start":160,"line_end":160,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322536,"byte_end":322542,"line_start":166,"line_end":166,"column_start":9,"column_end":15},"name":"remove","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::remove","value":"pub fn remove<KeyArg: EncodeLike<Key>>(KeyArg)","parent":null,"children":[],"decl_id":null,"docs":" Remove the value under a key.\n","sig":null,"attributes":[{"value":"/ Remove the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322494,"byte_end":322527,"line_start":165,"line_end":165,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322694,"byte_end":322700,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"name":"mutate","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::mutate","value":"pub fn mutate<KeyArg: EncodeLike<Key>, R, F: FnOnce(&mut QueryKind::Query) ->\n              R>(KeyArg, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value under a key.\n","sig":null,"attributes":[{"value":"/ Mutate the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322652,"byte_end":322685,"line_start":170,"line_end":170,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322937,"byte_end":322947,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"name":"try_mutate","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::try_mutate","value":"pub fn try_mutate<KeyArg, R, E, F>(KeyArg, F) -> Result<R, E> where\nKeyArg: EncodeLike<Key>, F: FnOnce(&mut QueryKind::Query) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Mutate the item, only if an `Ok` value is returned.\n","sig":null,"attributes":[{"value":"/ Mutate the item, only if an `Ok` value is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":322873,"byte_end":322928,"line_start":178,"line_end":178,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323248,"byte_end":323261,"line_start":188,"line_end":188,"column_start":9,"column_end":22},"name":"mutate_exists","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::mutate_exists","value":"pub fn mutate_exists<KeyArg: EncodeLike<Key>, R, F: FnOnce(&mut Option<Value>)\n                     -> R>(KeyArg, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value under a key. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the value under a key. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323165,"byte_end":323239,"line_start":187,"line_end":187,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323543,"byte_end":323560,"line_start":196,"line_end":196,"column_start":9,"column_end":26},"name":"try_mutate_exists","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::try_mutate_exists","value":"pub fn try_mutate_exists<KeyArg, R, E, F>(KeyArg, F) -> Result<R, E> where\nKeyArg: EncodeLike<Key>, F: FnOnce(&mut Option<Value>) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323438,"byte_end":323534,"line_start":195,"line_end":195,"column_start":2,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323822,"byte_end":323826,"line_start":205,"line_end":205,"column_start":9,"column_end":13},"name":"take","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::take","value":"pub fn take<KeyArg: EncodeLike<Key>>(KeyArg) -> QueryKind::Query","parent":null,"children":[],"decl_id":null,"docs":" Take the value under a key.\n","sig":null,"attributes":[{"value":"/ Take the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323782,"byte_end":323813,"line_start":204,"line_end":204,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324295,"byte_end":324301,"line_start":218,"line_end":218,"column_start":9,"column_end":15},"name":"append","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::append","value":"pub fn append<Item, EncodeLikeItem,\n              EncodeLikeKey>(EncodeLikeKey, EncodeLikeItem) where\nEncodeLikeKey: EncodeLike<Key>, Item: Encode,\nEncodeLikeItem: EncodeLike<Item>, Value: StorageAppend<Item>","parent":null,"children":[],"decl_id":null,"docs":" Append the given items to the value in the storage.","sig":null,"attributes":[{"value":"/ Append the given items to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":323954,"byte_end":324009,"line_start":209,"line_end":209,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324011,"byte_end":324014,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ `Value` is required to implement `codec::EncodeAppend`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324016,"byte_end":324075,"line_start":211,"line_end":211,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324077,"byte_end":324080,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324082,"byte_end":324095,"line_start":213,"line_end":213,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324097,"byte_end":324100,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ If the storage item is not encoded properly, the storage will be overwritten","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324102,"byte_end":324182,"line_start":215,"line_end":215,"column_start":2,"column_end":82}},{"value":"/ and set to `[item]`. Any default value set for the storage item will be ignored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324184,"byte_end":324267,"line_start":216,"line_end":216,"column_start":2,"column_end":85}},{"value":"/ on overwrite.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324269,"byte_end":324286,"line_start":217,"line_end":217,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325044,"byte_end":325054,"line_start":240,"line_end":240,"column_start":9,"column_end":19},"name":"decode_len","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::decode_len","value":"pub fn decode_len<KeyArg: EncodeLike<Key>>(KeyArg) -> Option<usize> where\nValue: StorageDecodeLength","parent":null,"children":[],"decl_id":null,"docs":" Read the length of the storage value without decoding the entire value under the\n given `key`.","sig":null,"attributes":[{"value":"/ Read the length of the storage value without decoding the entire value under the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324581,"byte_end":324665,"line_start":228,"line_end":228,"column_start":2,"column_end":86}},{"value":"/ given `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324667,"byte_end":324683,"line_start":229,"line_end":229,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324685,"byte_end":324688,"line_start":230,"line_end":230,"column_start":2,"column_end":5}},{"value":"/ `Value` is required to implement [`StorageDecodeLength`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324690,"byte_end":324751,"line_start":231,"line_end":231,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324753,"byte_end":324756,"line_start":232,"line_end":232,"column_start":2,"column_end":5}},{"value":"/ If the value does not exists or it fails to decode the length, `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324758,"byte_end":324844,"line_start":233,"line_end":233,"column_start":2,"column_end":88}},{"value":"/ Otherwise `Some(len)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324846,"byte_end":324884,"line_start":234,"line_end":234,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324886,"byte_end":324889,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324891,"byte_end":324904,"line_start":236,"line_end":236,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324906,"byte_end":324909,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ `None` does not mean that `get()` does not return a value. The default value is completly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":324911,"byte_end":325004,"line_start":238,"line_end":238,"column_start":2,"column_end":95}},{"value":"/ ignored by this function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325006,"byte_end":325035,"line_start":239,"line_end":239,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325415,"byte_end":325426,"line_start":249,"line_end":249,"column_start":9,"column_end":20},"name":"migrate_key","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::migrate_key","value":"pub fn migrate_key<OldHasher: crate::hash::StorageHasher,\n                   KeyArg: EncodeLike<Key>>(KeyArg) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Migrate an item with the given `key` from a defunct `OldHasher` to the current hasher.","sig":null,"attributes":[{"value":"/ Migrate an item with the given `key` from a defunct `OldHasher` to the current hasher.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325222,"byte_end":325312,"line_start":246,"line_end":246,"column_start":2,"column_end":92}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325314,"byte_end":325317,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ If the key doesn't exist, then it's a no-op. If it does, then it returns its value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325319,"byte_end":325406,"line_start":248,"line_end":248,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325663,"byte_end":325673,"line_start":256,"line_end":256,"column_start":9,"column_end":19},"name":"remove_all","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::remove_all","value":"pub fn remove_all()","parent":null,"children":[],"decl_id":null,"docs":" Remove all value of the storage.\n","sig":null,"attributes":[{"value":"/ Remove all value of the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325618,"byte_end":325654,"line_start":255,"line_end":255,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325892,"byte_end":325903,"line_start":263,"line_end":263,"column_start":9,"column_end":20},"name":"iter_values","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::iter_values","value":"pub fn iter_values() -> crate::storage::PrefixIterator<Value>","parent":null,"children":[],"decl_id":null,"docs":" Iter over all value of the storage.","sig":null,"attributes":[{"value":"/ Iter over all value of the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325751,"byte_end":325790,"line_start":260,"line_end":260,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325792,"byte_end":325795,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value failed to decode becaues storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":325797,"byte_end":325883,"line_start":262,"line_end":262,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326612,"byte_end":326628,"line_start":281,"line_end":281,"column_start":9,"column_end":25},"name":"translate_values","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::translate_values","value":"pub fn translate_values<OldValue: Decode, F: FnMut(OldValue) ->\n                        Option<Value>>(F)","parent":null,"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326023,"byte_end":326117,"line_start":267,"line_end":267,"column_start":2,"column_end":96}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326119,"byte_end":326122,"line_start":268,"line_end":268,"column_start":2,"column_end":5}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326124,"byte_end":326203,"line_start":269,"line_end":269,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326205,"byte_end":326208,"line_start":270,"line_end":270,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326210,"byte_end":326294,"line_start":271,"line_end":271,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326296,"byte_end":326299,"line_start":272,"line_end":272,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326301,"byte_end":326314,"line_start":273,"line_end":273,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326316,"byte_end":326319,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ This function must be used with care, before being updated the storage still contains the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326321,"byte_end":326414,"line_start":275,"line_end":275,"column_start":2,"column_end":95}},{"value":"/ old type, thus other calls (such as `get`) will fail at decoding it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326416,"byte_end":326488,"line_start":276,"line_end":276,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326490,"byte_end":326493,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ # Usage","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326495,"byte_end":326506,"line_start":278,"line_end":278,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326508,"byte_end":326511,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ This would typically be called inside the module implementation of on_runtime_upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326513,"byte_end":326603,"line_start":280,"line_end":280,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327278,"byte_end":327282,"line_start":299,"line_end":299,"column_start":9,"column_end":13},"name":"iter","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::iter","value":"pub fn iter() -> crate::storage::PrefixIterator<(Key, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Enumerate all elements in the map in no particular order.","sig":null,"attributes":[{"value":"/ Enumerate all elements in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327129,"byte_end":327190,"line_start":296,"line_end":296,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327192,"byte_end":327195,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ If you alter the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327197,"byte_end":327269,"line_start":298,"line_end":298,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327590,"byte_end":327595,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"name":"drain","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::drain","value":"pub fn drain() -> crate::storage::PrefixIterator<(Key, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the map and iterate through them in no particular order.","sig":null,"attributes":[{"value":"/ Remove all elements from the map and iterate through them in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327407,"byte_end":327492,"line_start":303,"line_end":303,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327494,"byte_end":327497,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ If you add elements to the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327499,"byte_end":327581,"line_start":305,"line_end":305,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328001,"byte_end":328010,"line_start":315,"line_end":315,"column_start":9,"column_end":18},"name":"translate","qualname":"<StorageMap<Prefix, Hasher, Key, Value, QueryKind, OnEmpty>>::translate","value":"pub fn translate<O: Decode, F: FnMut(Key, O) -> Option<Value>>(F)","parent":null,"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327721,"byte_end":327815,"line_start":310,"line_end":310,"column_start":2,"column_end":96}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327817,"byte_end":327820,"line_start":311,"line_end":311,"column_start":2,"column_end":5}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327822,"byte_end":327901,"line_start":312,"line_end":312,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327903,"byte_end":327906,"line_start":313,"line_end":313,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":327908,"byte_end":327992,"line_start":314,"line_end":314,"column_start":2,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":1308},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328245,"byte_end":328263,"line_start":323,"line_end":323,"column_start":11,"column_end":29},"name":"StorageMapMetadata","qualname":"::storage::types::map::StorageMapMetadata","value":"StorageMapMetadata","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" Part of storage metadata for a storage map.","sig":null,"attributes":[{"value":"/ Part of storage metadata for a storage map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328144,"byte_end":328191,"line_start":320,"line_end":320,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328192,"byte_end":328195,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ NOTE: Generic hasher is supported.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328196,"byte_end":328234,"line_start":322,"line_end":322,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1309},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328273,"byte_end":328281,"line_start":324,"line_end":324,"column_start":8,"column_end":16},"name":"MODIFIER","qualname":"::storage::types::map::StorageMapMetadata::MODIFIER","value":"StorageEntryModifier","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1310},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328312,"byte_end":328316,"line_start":325,"line_end":325,"column_start":8,"column_end":12},"name":"NAME","qualname":"::storage::types::map::StorageMapMetadata::NAME","value":"&'static str","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1311},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328339,"byte_end":328346,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"DEFAULT","qualname":"::storage::types::map::StorageMapMetadata::DEFAULT","value":"DefaultByteGetter","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1312},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328374,"byte_end":328380,"line_start":327,"line_end":327,"column_start":8,"column_end":14},"name":"HASHER","qualname":"::storage::types::map::StorageMapMetadata::HASHER","value":"frame_metadata::StorageHasher","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336285,"byte_end":336301,"line_start":49,"line_end":49,"column_start":12,"column_end":28},"name":"StorageDoubleMap","qualname":"::storage::types::double_map::StorageDoubleMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type that allow to store values for `(key1, key2)` couple. Similar to `StorageMap` but allow\n to iterate and remove value associated to first key.","sig":null,"attributes":[{"value":"/ A type that allow to store values for `(key1, key2)` couple. Similar to `StorageMap` but allow","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335670,"byte_end":335768,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ to iterate and remove value associated to first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335769,"byte_end":335825,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335826,"byte_end":335829,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Each value is stored at:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335830,"byte_end":335858,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335859,"byte_end":335875,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ Twox128(Prefix::pallet_prefix())","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335876,"byte_end":335912,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/\t\t++ Twox128(Prefix::STORAGE_PREFIX)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335913,"byte_end":335952,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/\t\t++ Hasher1(encode(key1))","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335953,"byte_end":335982,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/\t\t++ Hasher2(encode(key2))","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":335983,"byte_end":336012,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336013,"byte_end":336020,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336021,"byte_end":336024,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336025,"byte_end":336038,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336039,"byte_end":336042,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If the key1s (or key2s) are not trusted (e.g. can be set by a user), a cryptographic `hasher`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336043,"byte_end":336140,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ such as `blake2_128_concat` must be used for Hasher1 (resp. Hasher2). Otherwise, other values","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336141,"byte_end":336238,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ in storage can be compromised.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336239,"byte_end":336273,"line_start":48,"line_end":48,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":338872,"byte_end":338882,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"try_append","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2,\n                 BoundedVec<VecValue, VecBound>, QueryKind, OnEmpty>>::try_append","value":"pub fn try_append<EncodeLikeItem, EncodeLikeKey1,\n                  EncodeLikeKey2>(EncodeLikeKey1, EncodeLikeKey2,\n                                  EncodeLikeItem) -> Result<(), ()> where\nEncodeLikeKey1: EncodeLike<Key1> + Clone, EncodeLikeKey2: EncodeLike<Key2> +\nClone, EncodeLikeItem: EncodeLike<VecValue>","parent":null,"children":[],"decl_id":null,"docs":" Try and append the given item to the double map in the storage.","sig":null,"attributes":[{"value":"/ Try and append the given item to the double map in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":338727,"byte_end":338794,"line_start":127,"line_end":127,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":338796,"byte_end":338799,"line_start":128,"line_end":128,"column_start":2,"column_end":5}},{"value":"/ Is only available if `Value` of the map is [`BoundedVec`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":338801,"byte_end":338863,"line_start":129,"line_end":129,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":339819,"byte_end":339833,"line_start":163,"line_end":163,"column_start":9,"column_end":23},"name":"hashed_key_for","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::hashed_key_for","value":"pub fn hashed_key_for<KArg1, KArg2>(KArg1, KArg2) -> Vec<u8> where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Get the storage key used to fetch a value corresponding to a specific key.\n","sig":null,"attributes":[{"value":"/ Get the storage key used to fetch a value corresponding to a specific key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":339732,"byte_end":339810,"line_start":162,"line_end":162,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340096,"byte_end":340108,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"name":"contains_key","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::contains_key","value":"pub fn contains_key<KArg1, KArg2>(KArg1, KArg2) -> bool where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Does the value (explicitly) exist in storage?\n","sig":null,"attributes":[{"value":"/ Does the value (explicitly) exist in storage?","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340038,"byte_end":340087,"line_start":171,"line_end":171,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340386,"byte_end":340389,"line_start":181,"line_end":181,"column_start":9,"column_end":12},"name":"get","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::get","value":"pub fn get<KArg1, KArg2>(KArg1, KArg2) -> QueryKind::Query where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Load the value associated with the given key from the double map.\n","sig":null,"attributes":[{"value":"/ Load the value associated with the given key from the double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340308,"byte_end":340377,"line_start":180,"line_end":180,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340715,"byte_end":340722,"line_start":192,"line_end":192,"column_start":9,"column_end":16},"name":"try_get","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::try_get","value":"pub fn try_get<KArg1, KArg2>(KArg1, KArg2) -> Result<Value, ()> where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Try to get the value for the given key from the double map.","sig":null,"attributes":[{"value":"/ Try to get the value for the given key from the double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340592,"byte_end":340655,"line_start":189,"line_end":189,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340657,"byte_end":340660,"line_start":190,"line_end":190,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok` if it exists, `Err` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340662,"byte_end":340706,"line_start":191,"line_end":191,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340991,"byte_end":340995,"line_start":200,"line_end":200,"column_start":9,"column_end":13},"name":"take","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::take","value":"pub fn take<KArg1, KArg2>(KArg1, KArg2) -> QueryKind::Query where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Take a value from storage, removing it afterwards.\n","sig":null,"attributes":[{"value":"/ Take a value from storage, removing it afterwards.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":340928,"byte_end":340982,"line_start":199,"line_end":199,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":341245,"byte_end":341249,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"name":"swap","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::swap","value":"pub fn swap<XKArg1, XKArg2, YKArg1, YKArg2>(XKArg1, XKArg2, YKArg1, YKArg2)\nwhere XKArg1: EncodeLike<Key1>, XKArg2: EncodeLike<Key2>,\nYKArg1: EncodeLike<Key1>, YKArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Swap the values of two key-pairs.\n","sig":null,"attributes":[{"value":"/ Swap the values of two key-pairs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":341199,"byte_end":341236,"line_start":208,"line_end":208,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":341643,"byte_end":341649,"line_start":220,"line_end":220,"column_start":9,"column_end":15},"name":"insert","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::insert","value":"pub fn insert<KArg1, KArg2, VArg>(KArg1, KArg2, VArg) where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>, VArg: EncodeLike<Value>","parent":null,"children":[],"decl_id":null,"docs":" Store a value to be associated with the given keys from the double map.\n","sig":null,"attributes":[{"value":"/ Store a value to be associated with the given keys from the double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":341559,"byte_end":341634,"line_start":219,"line_end":219,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":341935,"byte_end":341941,"line_start":230,"line_end":230,"column_start":9,"column_end":15},"name":"remove","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::remove","value":"pub fn remove<KArg1, KArg2>(KArg1, KArg2) where KArg1: EncodeLike<Key1>,\nKArg2: EncodeLike<Key2>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value under the given keys.\n","sig":null,"attributes":[{"value":"/ Remove the value under the given keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":341884,"byte_end":341926,"line_start":229,"line_end":229,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342178,"byte_end":342191,"line_start":239,"line_end":239,"column_start":9,"column_end":22},"name":"remove_prefix","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::remove_prefix","value":"pub fn remove_prefix<KArg1: ?Sized>(KArg1) where KArg1: EncodeLike<Key1>","parent":null,"children":[],"decl_id":null,"docs":" Remove all values under the first key.\n","sig":null,"attributes":[{"value":"/ Remove all values under the first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342127,"byte_end":342169,"line_start":238,"line_end":238,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342397,"byte_end":342415,"line_start":244,"line_end":244,"column_start":9,"column_end":27},"name":"iter_prefix_values","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::iter_prefix_values","value":"pub fn iter_prefix_values<KArg1: ?Sized>(KArg1)\n-> crate::storage::PrefixIterator<Value> where KArg1: EncodeLike<Key1>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over values that share the first key.\n","sig":null,"attributes":[{"value":"/ Iterate over values that share the first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342339,"byte_end":342388,"line_start":243,"line_end":243,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342662,"byte_end":342668,"line_start":251,"line_end":251,"column_start":9,"column_end":15},"name":"mutate","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::mutate","value":"pub fn mutate<KArg1, KArg2, R, F>(KArg1, KArg2, F) -> R where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>,\nF: FnOnce(&mut QueryKind::Query) -> R","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value under the given keys.\n","sig":null,"attributes":[{"value":"/ Mutate the value under the given keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342611,"byte_end":342653,"line_start":250,"line_end":250,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342996,"byte_end":343006,"line_start":261,"line_end":261,"column_start":9,"column_end":19},"name":"try_mutate","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::try_mutate","value":"pub fn try_mutate<KArg1, KArg2, R, E, F>(KArg1, KArg2, F) -> Result<R, E>\nwhere KArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>,\nF: FnOnce(&mut QueryKind::Query) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value under the given keys when the closure returns `Ok`.\n","sig":null,"attributes":[{"value":"/ Mutate the value under the given keys when the closure returns `Ok`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":342915,"byte_end":342987,"line_start":260,"line_end":260,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":343374,"byte_end":343387,"line_start":271,"line_end":271,"column_start":9,"column_end":22},"name":"mutate_exists","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::mutate_exists","value":"pub fn mutate_exists<KArg1, KArg2, R, F>(KArg1, KArg2, F) -> R where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>,\nF: FnOnce(&mut Option<Value>) -> R","parent":null,"children":[],"decl_id":null,"docs":" Mutate the value under the given keys. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the value under the given keys. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":343282,"byte_end":343365,"line_start":270,"line_end":270,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":343743,"byte_end":343760,"line_start":281,"line_end":281,"column_start":9,"column_end":26},"name":"try_mutate_exists","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::try_mutate_exists","value":"pub fn try_mutate_exists<KArg1, KArg2, R, E, F>(KArg1, KArg2, F)\n-> Result<R, E> where KArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>,\nF: FnOnce(&mut Option<Value>) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":343638,"byte_end":343734,"line_start":280,"line_end":280,"column_start":2,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344376,"byte_end":344382,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"name":"append","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::append","value":"pub fn append<Item, EncodeLikeItem, KArg1,\n              KArg2>(KArg1, KArg2, EncodeLikeItem) where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>, Item: Encode,\nEncodeLikeItem: EncodeLike<Item>, Value: StorageAppend<Item>","parent":null,"children":[],"decl_id":null,"docs":" Append the given item to the value in the storage.","sig":null,"attributes":[{"value":"/ Append the given item to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344040,"byte_end":344094,"line_start":290,"line_end":290,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344096,"byte_end":344099,"line_start":291,"line_end":291,"column_start":2,"column_end":5}},{"value":"/ `Value` is required to implement [`StorageAppend`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344101,"byte_end":344156,"line_start":292,"line_end":292,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344158,"byte_end":344161,"line_start":293,"line_end":293,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344163,"byte_end":344176,"line_start":294,"line_end":294,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344178,"byte_end":344181,"line_start":295,"line_end":295,"column_start":2,"column_end":5}},{"value":"/ If the storage item is not encoded properly, the storage will be overwritten","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344183,"byte_end":344263,"line_start":296,"line_end":296,"column_start":2,"column_end":82}},{"value":"/ and set to `[item]`. Any default value set for the storage item will be ignored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344265,"byte_end":344348,"line_start":297,"line_end":297,"column_start":2,"column_end":85}},{"value":"/ on overwrite.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344350,"byte_end":344367,"line_start":298,"line_end":298,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345184,"byte_end":345194,"line_start":325,"line_end":325,"column_start":9,"column_end":19},"name":"decode_len","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::decode_len","value":"pub fn decode_len<KArg1, KArg2>(KArg1, KArg2) -> Option<usize> where\nKArg1: EncodeLike<Key1>, KArg2: EncodeLike<Key2>, Value: StorageDecodeLength","parent":null,"children":[],"decl_id":null,"docs":" Read the length of the storage value without decoding the entire value under the\n given `key1` and `key2`.","sig":null,"attributes":[{"value":"/ Read the length of the storage value without decoding the entire value under the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344709,"byte_end":344793,"line_start":313,"line_end":313,"column_start":2,"column_end":86}},{"value":"/ given `key1` and `key2`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344795,"byte_end":344823,"line_start":314,"line_end":314,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344825,"byte_end":344828,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ `Value` is required to implement [`StorageDecodeLength`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344830,"byte_end":344891,"line_start":316,"line_end":316,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344893,"byte_end":344896,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ If the value does not exists or it fails to decode the length, `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344898,"byte_end":344984,"line_start":318,"line_end":318,"column_start":2,"column_end":88}},{"value":"/ Otherwise `Some(len)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":344986,"byte_end":345024,"line_start":319,"line_end":319,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345026,"byte_end":345029,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345031,"byte_end":345044,"line_start":321,"line_end":321,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345046,"byte_end":345049,"line_start":322,"line_end":322,"column_start":2,"column_end":5}},{"value":"/ `None` does not mean that `get()` does not return a value. The default value is completly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345051,"byte_end":345144,"line_start":323,"line_end":323,"column_start":2,"column_end":95}},{"value":"/ ignored by this function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345146,"byte_end":345175,"line_start":324,"line_end":324,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345666,"byte_end":345678,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"name":"migrate_keys","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::migrate_keys","value":"pub fn migrate_keys<OldHasher1: crate::StorageHasher,\n                    OldHasher2: crate::StorageHasher,\n                    KeyArg1: EncodeLike<Key1>,\n                    KeyArg2: EncodeLike<Key2>>(KeyArg1, KeyArg2)\n-> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Migrate an item with the given `key1` and `key2` from defunct `OldHasher1` and\n `OldHasher2` to the current hashers.","sig":null,"attributes":[{"value":"/ Migrate an item with the given `key1` and `key2` from defunct `OldHasher1` and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345439,"byte_end":345521,"line_start":334,"line_end":334,"column_start":2,"column_end":84}},{"value":"/ `OldHasher2` to the current hashers.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345523,"byte_end":345563,"line_start":335,"line_end":335,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345565,"byte_end":345568,"line_start":336,"line_end":336,"column_start":2,"column_end":5}},{"value":"/ If the key doesn't exist, then it's a no-op. If it does, then it returns its value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345570,"byte_end":345657,"line_start":337,"line_end":337,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346041,"byte_end":346051,"line_start":350,"line_end":350,"column_start":9,"column_end":19},"name":"remove_all","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::remove_all","value":"pub fn remove_all()","parent":null,"children":[],"decl_id":null,"docs":" Remove all value of the storage.\n","sig":null,"attributes":[{"value":"/ Remove all value of the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":345996,"byte_end":346032,"line_start":349,"line_end":349,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346270,"byte_end":346281,"line_start":357,"line_end":357,"column_start":9,"column_end":20},"name":"iter_values","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::iter_values","value":"pub fn iter_values() -> crate::storage::PrefixIterator<Value>","parent":null,"children":[],"decl_id":null,"docs":" Iter over all value of the storage.","sig":null,"attributes":[{"value":"/ Iter over all value of the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346129,"byte_end":346168,"line_start":354,"line_end":354,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346170,"byte_end":346173,"line_start":355,"line_end":355,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value failed to decode becaues storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346175,"byte_end":346261,"line_start":356,"line_end":356,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346985,"byte_end":347001,"line_start":374,"line_end":374,"column_start":9,"column_end":25},"name":"translate_values","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::translate_values","value":"pub fn translate_values<OldValue: Decode, F: FnMut(OldValue) ->\n                        Option<Value>>(F)","parent":null,"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.\n By returning `None` from `f` for an element, you'll remove it from the map.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346401,"byte_end":346495,"line_start":361,"line_end":361,"column_start":2,"column_end":96}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346497,"byte_end":346576,"line_start":362,"line_end":362,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346578,"byte_end":346581,"line_start":363,"line_end":363,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346583,"byte_end":346667,"line_start":364,"line_end":364,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346669,"byte_end":346672,"line_start":365,"line_end":365,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346674,"byte_end":346687,"line_start":366,"line_end":366,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346689,"byte_end":346692,"line_start":367,"line_end":367,"column_start":2,"column_end":5}},{"value":"/ This function must be used with care, before being updated the storage still contains the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346694,"byte_end":346787,"line_start":368,"line_end":368,"column_start":2,"column_end":95}},{"value":"/ old type, thus other calls (such as `get`) will fail at decoding it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346789,"byte_end":346861,"line_start":369,"line_end":369,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346863,"byte_end":346866,"line_start":370,"line_end":370,"column_start":2,"column_end":5}},{"value":"/ # Usage","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346868,"byte_end":346879,"line_start":371,"line_end":371,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346881,"byte_end":346884,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ This would typically be called inside the module implementation of on_runtime_upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":346886,"byte_end":346976,"line_start":373,"line_end":373,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347848,"byte_end":347859,"line_start":395,"line_end":395,"column_start":9,"column_end":20},"name":"iter_prefix","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::iter_prefix","value":"pub fn iter_prefix<impl EncodeLike<Key1>: EncodeLike<Key1>>(impl EncodeLike<Key1>)\n-> crate::storage::PrefixIterator<(Key2, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Enumerate all elements in the map with first key `k1` in no particular order.","sig":null,"attributes":[{"value":"/ Enumerate all elements in the map with first key `k1` in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347632,"byte_end":347713,"line_start":391,"line_end":391,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347715,"byte_end":347718,"line_start":392,"line_end":392,"column_start":2,"column_end":5}},{"value":"/ If you add or remove values whose first key is `k1` to the map while doing this, you'll get","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347720,"byte_end":347815,"line_start":393,"line_end":393,"column_start":2,"column_end":97}},{"value":"/ undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347817,"byte_end":347839,"line_start":394,"line_end":394,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348265,"byte_end":348277,"line_start":404,"line_end":404,"column_start":9,"column_end":21},"name":"drain_prefix","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::drain_prefix","value":"pub fn drain_prefix<impl EncodeLike<Key1>: EncodeLike<Key1>>(impl EncodeLike<Key1>)\n-> crate::storage::PrefixIterator<(Key2, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the map with first key `k1` and iterate through them in no\n particular order.","sig":null,"attributes":[{"value":"/ Remove all elements from the map with first key `k1` and iterate through them in no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348032,"byte_end":348119,"line_start":399,"line_end":399,"column_start":2,"column_end":89}},{"value":"/ particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348121,"byte_end":348142,"line_start":400,"line_end":400,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348144,"byte_end":348147,"line_start":401,"line_end":401,"column_start":2,"column_end":5}},{"value":"/ If you add elements with first key `k1` to the map while doing this, you'll get undefined","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348149,"byte_end":348242,"line_start":402,"line_end":402,"column_start":2,"column_end":95}},{"value":"/ results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348244,"byte_end":348256,"line_start":403,"line_end":403,"column_start":2,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348618,"byte_end":348622,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"name":"iter","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::iter","value":"pub fn iter() -> crate::storage::PrefixIterator<(Key1, Key2, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Enumerate all elements in the map in no particular order.","sig":null,"attributes":[{"value":"/ Enumerate all elements in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348451,"byte_end":348512,"line_start":408,"line_end":408,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348514,"byte_end":348517,"line_start":409,"line_end":409,"column_start":2,"column_end":5}},{"value":"/ If you add or remove values to the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348519,"byte_end":348609,"line_start":410,"line_end":410,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348950,"byte_end":348955,"line_start":418,"line_end":418,"column_start":9,"column_end":14},"name":"drain","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::drain","value":"pub fn drain() -> crate::storage::PrefixIterator<(Key1, Key2, Value)>","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the map and iterate through them in no particular order.","sig":null,"attributes":[{"value":"/ Remove all elements from the map and iterate through them in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348767,"byte_end":348852,"line_start":415,"line_end":415,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348854,"byte_end":348857,"line_start":416,"line_end":416,"column_start":2,"column_end":5}},{"value":"/ If you add elements to the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":348859,"byte_end":348941,"line_start":417,"line_end":417,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349381,"byte_end":349390,"line_start":427,"line_end":427,"column_start":9,"column_end":18},"name":"translate","qualname":"<StorageDoubleMap<Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind,\n                 OnEmpty>>::translate","value":"pub fn translate<O: Decode, F: FnMut(Key1, Key2, O) -> Option<Value>>(F)","parent":null,"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349101,"byte_end":349195,"line_start":422,"line_end":422,"column_start":2,"column_end":96}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349197,"byte_end":349200,"line_start":423,"line_end":423,"column_start":2,"column_end":5}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349202,"byte_end":349281,"line_start":424,"line_end":424,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349283,"byte_end":349286,"line_start":425,"line_end":425,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349288,"byte_end":349372,"line_start":426,"line_end":426,"column_start":2,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":1533},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349653,"byte_end":349677,"line_start":435,"line_end":435,"column_start":11,"column_end":35},"name":"StorageDoubleMapMetadata","qualname":"::storage::types::double_map::StorageDoubleMapMetadata","value":"StorageDoubleMapMetadata","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538}],"decl_id":null,"docs":" Part of storage metadata for a storage double map.","sig":null,"attributes":[{"value":"/ Part of storage metadata for a storage double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349544,"byte_end":349598,"line_start":432,"line_end":432,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349599,"byte_end":349602,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ NOTE: Generic hashers is supported.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349603,"byte_end":349642,"line_start":434,"line_end":434,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":1534},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349687,"byte_end":349695,"line_start":436,"line_end":436,"column_start":8,"column_end":16},"name":"MODIFIER","qualname":"::storage::types::double_map::StorageDoubleMapMetadata::MODIFIER","value":"StorageEntryModifier","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1535},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349726,"byte_end":349730,"line_start":437,"line_end":437,"column_start":8,"column_end":12},"name":"NAME","qualname":"::storage::types::double_map::StorageDoubleMapMetadata::NAME","value":"&'static str","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1536},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349753,"byte_end":349760,"line_start":438,"line_end":438,"column_start":8,"column_end":15},"name":"DEFAULT","qualname":"::storage::types::double_map::StorageDoubleMapMetadata::DEFAULT","value":"DefaultByteGetter","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1537},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349788,"byte_end":349795,"line_start":439,"line_end":439,"column_start":8,"column_end":15},"name":"HASHER1","qualname":"::storage::types::double_map::StorageDoubleMapMetadata::HASHER1","value":"frame_metadata::StorageHasher","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1538},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349835,"byte_end":349842,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"HASHER2","qualname":"::storage::types::double_map::StorageDoubleMapMetadata::HASHER2","value":"frame_metadata::StorageHasher","parent":{"krate":0,"index":1533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1574},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304228,"byte_end":304242,"line_start":39,"line_end":39,"column_start":11,"column_end":25},"name":"QueryKindTrait","qualname":"::storage::types::QueryKindTrait","value":"QueryKindTrait<Value, OnEmpty>","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":" Trait implementing how the storage optional value is converted into the queried type.","sig":null,"attributes":[{"value":"/ Trait implementing how the storage optional value is converted into the queried type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303849,"byte_end":303938,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303939,"byte_end":303942,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ It is implemented by:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303943,"byte_end":303968,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/ * `OptionQuery` which convert an optional value to an optional value, user when querying","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":303969,"byte_end":304061,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/   storage will get an optional value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304062,"byte_end":304103,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ * `ValueQuery` which convert an optional value to a value, user when querying storage will get","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304104,"byte_end":304202,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/   a value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304203,"byte_end":304217,"line_start":38,"line_end":38,"column_start":1,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":1577},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304304,"byte_end":304312,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"METADATA","qualname":"::storage::types::QueryKindTrait::METADATA","value":"StorageEntryModifier","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Metadata for the storage kind.\n","sig":null,"attributes":[{"value":"/ Metadata for the storage kind.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304262,"byte_end":304296,"line_start":40,"line_end":40,"column_start":2,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1578},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304371,"byte_end":304376,"line_start":44,"line_end":44,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::types::QueryKindTrait::Query","value":"type Query: FullCodec + 'static;","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Type returned on query\n","sig":null,"attributes":[{"value":"/ Type returned on query","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304338,"byte_end":304364,"line_start":43,"line_end":43,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304511,"byte_end":304539,"line_start":48,"line_end":48,"column_start":5,"column_end":33},"name":"from_optional_value_to_query","qualname":"::storage::types::QueryKindTrait::from_optional_value_to_query","value":"pub fn from_optional_value_to_query(Option<Value>) -> Self::Query","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Convert an optional value (i.e. some if trie contains the value or none otherwise) to the\n query.\n","sig":null,"attributes":[{"value":"/ Convert an optional value (i.e. some if trie contains the value or none otherwise) to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304401,"byte_end":304494,"line_start":46,"line_end":46,"column_start":2,"column_end":95}},{"value":"/ query.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304496,"byte_end":304506,"line_start":47,"line_end":47,"column_start":2,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304622,"byte_end":304650,"line_start":51,"line_end":51,"column_start":5,"column_end":33},"name":"from_query_to_optional_value","qualname":"::storage::types::QueryKindTrait::from_query_to_optional_value","value":"pub fn from_query_to_optional_value(Self::Query) -> Option<Value>","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Convert a query to an optional value.\n","sig":null,"attributes":[{"value":"/ Convert a query to an optional value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304576,"byte_end":304617,"line_start":50,"line_end":50,"column_start":2,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1581},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304961,"byte_end":304972,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"OptionQuery","qualname":"::storage::types::OptionQuery","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implement QueryKindTrait with query being `Option<Value>`","sig":null,"attributes":[{"value":"/ Implement QueryKindTrait with query being `Option<Value>`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304688,"byte_end":304749,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304750,"byte_end":304753,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ NOTE: it doesn't support a generic `OnEmpty`. This means only `None` can be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304754,"byte_end":304833,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ returned when no value is found. To use another `OnEmpty` implementation, `ValueQuery` can be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304834,"byte_end":304931,"line_start":57,"line_end":57,"column_start":1,"column_end":98}},{"value":"/ used instead.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":304932,"byte_end":304949,"line_start":58,"line_end":58,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1589},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":305489,"byte_end":305499,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ValueQuery","qualname":"::storage::types::ValueQuery","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implement QueryKindTrait with query being `Value`\n","sig":null,"attributes":[{"value":"/ Implement QueryKindTrait with query being `Value`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":305424,"byte_end":305477,"line_start":78,"line_end":78,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1627},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186660,"byte_end":186679,"line_start":85,"line_end":85,"column_start":8,"column_end":27},"name":"require_transaction","qualname":"::storage::require_transaction","value":"pub fn require_transaction()","parent":null,"children":[],"decl_id":null,"docs":" Assert this method is called within a storage transaction.\n This will **panic** if is not called within a storage transaction.","sig":null,"attributes":[{"value":"/ Assert this method is called within a storage transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186423,"byte_end":186485,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ This will **panic** if is not called within a storage transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186486,"byte_end":186556,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186557,"byte_end":186560,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This assertion is enabled for native execution and when `debug_assertions` are enabled.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186561,"byte_end":186652,"line_start":84,"line_end":84,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1628},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187089,"byte_end":187105,"line_start":96,"line_end":96,"column_start":8,"column_end":24},"name":"with_transaction","qualname":"::storage::with_transaction","value":"pub fn with_transaction<R, impl FnOnce() -> TransactionOutcome<R>: FnOnce() ->\n                        TransactionOutcome<R>>(impl FnOnce() -> TransactionOutcome<R>)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the supplied function in a new storage transaction.","sig":null,"attributes":[{"value":"/ Execute the supplied function in a new storage transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186784,"byte_end":186847,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186848,"byte_end":186851,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ All changes to storage performed by the supplied function are discarded if the returned","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186852,"byte_end":186943,"line_start":92,"line_end":92,"column_start":1,"column_end":92}},{"value":"/ outcome is `TransactionOutcome::Rollback`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186944,"byte_end":186990,"line_start":93,"line_end":93,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186991,"byte_end":186994,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Transactions can be nested to any depth. Commits happen to the parent transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":186995,"byte_end":187081,"line_start":95,"line_end":95,"column_start":1,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":1642},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187715,"byte_end":187727,"line_start":116,"line_end":116,"column_start":11,"column_end":23},"name":"StorageValue","qualname":"::storage::StorageValue","value":"StorageValue<T: FullCodec>","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1668}],"decl_id":null,"docs":" A trait for working with macro-generated storage values under the substrate storage API.","sig":null,"attributes":[{"value":"/ A trait for working with macro-generated storage values under the substrate storage API.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187533,"byte_end":187625,"line_start":113,"line_end":113,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187626,"byte_end":187629,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Details on implementation can be found at [`generator::StorageValue`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187630,"byte_end":187704,"line_start":115,"line_end":115,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1644},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187786,"byte_end":187791,"line_start":118,"line_end":118,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::StorageValue::Query","value":"type Query;","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" The type that get/take return.\n","sig":null,"attributes":[{"value":"/ The type that get/take return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187745,"byte_end":187779,"line_start":117,"line_end":117,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187824,"byte_end":187834,"line_start":121,"line_end":121,"column_start":5,"column_end":15},"name":"hashed_key","qualname":"::storage::StorageValue::hashed_key","value":"pub fn hashed_key() -> [u8; ]","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Get the storage key.\n","sig":null,"attributes":[{"value":"/ Get the storage key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187795,"byte_end":187819,"line_start":120,"line_end":120,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187906,"byte_end":187912,"line_start":124,"line_end":124,"column_start":5,"column_end":11},"name":"exists","qualname":"::storage::StorageValue::exists","value":"pub fn exists() -> bool","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Does the value (explicitly) exist in storage?\n","sig":null,"attributes":[{"value":"/ Does the value (explicitly) exist in storage?","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187852,"byte_end":187901,"line_start":123,"line_end":123,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187985,"byte_end":187988,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"get","qualname":"::storage::StorageValue::get","value":"pub fn get() -> Self::Query","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Load the value from the provided storage instance.\n","sig":null,"attributes":[{"value":"/ Load the value from the provided storage instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":187926,"byte_end":187980,"line_start":126,"line_end":126,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188136,"byte_end":188143,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"try_get","qualname":"::storage::StorageValue::try_get","value":"pub fn try_get() -> Result<T, ()>","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Try to get the underlying value from the provided storage instance.","sig":null,"attributes":[{"value":"/ Try to get the underlying value from the provided storage instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188009,"byte_end":188080,"line_start":129,"line_end":129,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188082,"byte_end":188085,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok` if it exists, `Err` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188087,"byte_end":188131,"line_start":131,"line_end":131,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189051,"byte_end":189060,"line_start":154,"line_end":154,"column_start":5,"column_end":14},"name":"translate","qualname":"::storage::StorageValue::translate","value":"pub fn translate<O: Decode, F: FnOnce(Option<O>) -> Option<T>>(F)\n-> Result<Option<T>, ()>","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Translate a value from some previous type (`O`) to the current type.","sig":null,"attributes":[{"value":"/ Translate a value from some previous type (`O`) to the current type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188166,"byte_end":188238,"line_start":134,"line_end":134,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188240,"byte_end":188243,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ `f: F` is the translation function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188245,"byte_end":188284,"line_start":136,"line_end":136,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188286,"byte_end":188289,"line_start":137,"line_end":137,"column_start":2,"column_end":5}},{"value":"/ Returns `Err` if the storage item could not be interpreted as the old type, and Ok, along","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188291,"byte_end":188384,"line_start":138,"line_end":138,"column_start":2,"column_end":95}},{"value":"/ with the new value if it could.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188386,"byte_end":188421,"line_start":139,"line_end":139,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188423,"byte_end":188426,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ NOTE: This operates from and to `Option<_>` types; no effort is made to respect the default","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188428,"byte_end":188523,"line_start":141,"line_end":141,"column_start":2,"column_end":97}},{"value":"/ value of the original type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188525,"byte_end":188556,"line_start":142,"line_end":142,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188558,"byte_end":188561,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188563,"byte_end":188576,"line_start":144,"line_end":144,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188578,"byte_end":188581,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ This function must be used with care, before being updated the storage still contains the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188583,"byte_end":188676,"line_start":146,"line_end":146,"column_start":2,"column_end":95}},{"value":"/ old type, thus other calls (such as `get`) will fail at decoding it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188678,"byte_end":188750,"line_start":147,"line_end":147,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188752,"byte_end":188755,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ # Usage","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188757,"byte_end":188768,"line_start":149,"line_end":149,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188770,"byte_end":188773,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ This would typically be called inside the module implementation of on_runtime_upgrade, while","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188775,"byte_end":188871,"line_start":151,"line_end":151,"column_start":2,"column_end":98}},{"value":"/ ensuring **no usage of this storage are made before the call to `on_runtime_upgrade`**. (More","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188873,"byte_end":188970,"line_start":152,"line_end":152,"column_start":2,"column_end":99}},{"value":"/ precisely prior initialized modules doesn't make use of this storage).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":188972,"byte_end":189046,"line_start":153,"line_end":153,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189214,"byte_end":189217,"line_start":157,"line_end":157,"column_start":5,"column_end":8},"name":"put","qualname":"::storage::StorageValue::put","value":"pub fn put<Arg: EncodeLike<T>>(Arg)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Store a value under this key into the provided storage instance.\n","sig":null,"attributes":[{"value":"/ Store a value under this key into the provided storage instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189141,"byte_end":189209,"line_start":156,"line_end":156,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189388,"byte_end":189391,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"set","qualname":"::storage::StorageValue::set","value":"pub fn set(Self::Query)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Store a value under this key into the provided storage instance; this uses the query\n type rather than the underlying value.\n","sig":null,"attributes":[{"value":"/ Store a value under this key into the provided storage instance; this uses the query","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189251,"byte_end":189339,"line_start":159,"line_end":159,"column_start":2,"column_end":90}},{"value":"/ type rather than the underlying value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189341,"byte_end":189383,"line_start":160,"line_end":160,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189438,"byte_end":189444,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"mutate","qualname":"::storage::StorageValue::mutate","value":"pub fn mutate<R, F: FnOnce(&mut Self::Query) -> R>(F) -> R","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Mutate the value\n","sig":null,"attributes":[{"value":"/ Mutate the value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189413,"byte_end":189433,"line_start":163,"line_end":163,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189545,"byte_end":189555,"line_start":167,"line_end":167,"column_start":5,"column_end":15},"name":"try_mutate","qualname":"::storage::StorageValue::try_mutate","value":"pub fn try_mutate<R, E, F: FnOnce(&mut Self::Query) -> Result<R, E>>(F)\n-> Result<R, E>","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Mutate the value if closure returns `Ok`\n","sig":null,"attributes":[{"value":"/ Mutate the value if closure returns `Ok`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189496,"byte_end":189540,"line_start":166,"line_end":166,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189665,"byte_end":189669,"line_start":170,"line_end":170,"column_start":5,"column_end":9},"name":"kill","qualname":"::storage::StorageValue::kill","value":"pub fn kill()","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Clear the storage value.\n","sig":null,"attributes":[{"value":"/ Clear the storage value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189632,"byte_end":189660,"line_start":169,"line_end":169,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189734,"byte_end":189738,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"take","qualname":"::storage::StorageValue::take","value":"pub fn take() -> Self::Query","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Take a value from storage, removing it afterwards.\n","sig":null,"attributes":[{"value":"/ Take a value from storage, removing it afterwards.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189675,"byte_end":189729,"line_start":172,"line_end":172,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190092,"byte_end":190098,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"append","qualname":"::storage::StorageValue::append","value":"pub fn append<Item, EncodeLikeItem>(EncodeLikeItem) where Item: Encode,\nEncodeLikeItem: EncodeLike<Item>, T: StorageAppend<Item>","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Append the given item to the value in the storage.","sig":null,"attributes":[{"value":"/ Append the given item to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189759,"byte_end":189813,"line_start":175,"line_end":175,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189815,"byte_end":189818,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ `T` is required to implement [`StorageAppend`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189820,"byte_end":189871,"line_start":177,"line_end":177,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189873,"byte_end":189876,"line_start":178,"line_end":178,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189878,"byte_end":189891,"line_start":179,"line_end":179,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189893,"byte_end":189896,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ If the storage item is not encoded properly, the storage item will be overwritten","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189898,"byte_end":189983,"line_start":181,"line_end":181,"column_start":2,"column_end":87}},{"value":"/ and set to `[item]`. Any default value set for the storage item will be ignored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":189985,"byte_end":190068,"line_start":182,"line_end":182,"column_start":2,"column_end":85}},{"value":"/ on overwrite.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190070,"byte_end":190087,"line_start":183,"line_end":183,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190658,"byte_end":190668,"line_start":201,"line_end":201,"column_start":5,"column_end":15},"name":"decode_len","qualname":"::storage::StorageValue::decode_len","value":"pub fn decode_len() -> Option<usize> where T: StorageDecodeLength","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Read the length of the storage value without decoding the entire value.","sig":null,"attributes":[{"value":"/ Read the length of the storage value without decoding the entire value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190230,"byte_end":190305,"line_start":190,"line_end":190,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190307,"byte_end":190310,"line_start":191,"line_end":191,"column_start":2,"column_end":5}},{"value":"/ `T` is required to implement [`StorageDecodeLength`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190312,"byte_end":190369,"line_start":192,"line_end":192,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190371,"byte_end":190374,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ If the value does not exists or it fails to decode the length, `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190376,"byte_end":190462,"line_start":194,"line_end":194,"column_start":2,"column_end":88}},{"value":"/ Otherwise `Some(len)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190464,"byte_end":190502,"line_start":195,"line_end":195,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190504,"byte_end":190507,"line_start":196,"line_end":196,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190509,"byte_end":190522,"line_start":197,"line_end":197,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190524,"byte_end":190527,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ `None` does not mean that `get()` does not return a value. The default value is completly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190529,"byte_end":190622,"line_start":199,"line_end":199,"column_start":2,"column_end":95}},{"value":"/ ignored by this function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190624,"byte_end":190653,"line_start":200,"line_end":200,"column_start":2,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1669},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190886,"byte_end":190896,"line_start":209,"line_end":209,"column_start":11,"column_end":21},"name":"StorageMap","qualname":"::storage::StorageMap","value":"StorageMap<K: FullEncode, V: FullCodec>","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":1698},{"krate":0,"index":1702},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1718}],"decl_id":null,"docs":" A strongly-typed map in storage.","sig":null,"attributes":[{"value":"/ A strongly-typed map in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190762,"byte_end":190798,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190799,"byte_end":190802,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ Details on implementation can be found at [`generator::StorageMap`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190803,"byte_end":190875,"line_start":208,"line_end":208,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1672},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190970,"byte_end":190975,"line_start":211,"line_end":211,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::StorageMap::Query","value":"type Query;","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" The type that get/take return.\n","sig":null,"attributes":[{"value":"/ The type that get/take return.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190929,"byte_end":190963,"line_start":210,"line_end":210,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191062,"byte_end":191076,"line_start":214,"line_end":214,"column_start":5,"column_end":19},"name":"hashed_key_for","qualname":"::storage::StorageMap::hashed_key_for","value":"pub fn hashed_key_for<KeyArg: EncodeLike<K>>(KeyArg) -> Vec<u8>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Get the storage key used to fetch a value corresponding to a specific key.\n","sig":null,"attributes":[{"value":"/ Get the storage key used to fetch a value corresponding to a specific key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":190979,"byte_end":191057,"line_start":213,"line_end":213,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191181,"byte_end":191193,"line_start":217,"line_end":217,"column_start":5,"column_end":17},"name":"contains_key","qualname":"::storage::StorageMap::contains_key","value":"pub fn contains_key<KeyArg: EncodeLike<K>>(KeyArg) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Does the value (explicitly) exist in storage?\n","sig":null,"attributes":[{"value":"/ Does the value (explicitly) exist in storage?","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191127,"byte_end":191176,"line_start":216,"line_end":216,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191308,"byte_end":191311,"line_start":220,"line_end":220,"column_start":5,"column_end":8},"name":"get","qualname":"::storage::StorageMap::get","value":"pub fn get<KeyArg: EncodeLike<K>>(KeyArg) -> Self::Query","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Load the value associated with the given key from the map.\n","sig":null,"attributes":[{"value":"/ Load the value associated with the given key from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191241,"byte_end":191303,"line_start":219,"line_end":219,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191478,"byte_end":191485,"line_start":225,"line_end":225,"column_start":5,"column_end":12},"name":"try_get","qualname":"::storage::StorageMap::try_get","value":"pub fn try_get<KeyArg: EncodeLike<K>>(KeyArg) -> Result<V, ()>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Try to get the value for the given key from the map.","sig":null,"attributes":[{"value":"/ Try to get the value for the given key from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191366,"byte_end":191422,"line_start":222,"line_end":222,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191424,"byte_end":191427,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok` if it exists, `Err` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191429,"byte_end":191473,"line_start":224,"line_end":224,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191579,"byte_end":191583,"line_start":228,"line_end":228,"column_start":5,"column_end":9},"name":"swap","qualname":"::storage::StorageMap::swap","value":"pub fn swap<KeyArg1: EncodeLike<K>, KeyArg2: EncodeLike<K>>(KeyArg1, KeyArg2)","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Swap the values of two keys.\n","sig":null,"attributes":[{"value":"/ Swap the values of two keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191542,"byte_end":191574,"line_start":227,"line_end":227,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191737,"byte_end":191743,"line_start":231,"line_end":231,"column_start":5,"column_end":11},"name":"insert","qualname":"::storage::StorageMap::insert","value":"pub fn insert<KeyArg: EncodeLike<K>, ValArg: EncodeLike<V>>(KeyArg, ValArg)","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Store a value to be associated with the given key from the map.\n","sig":null,"attributes":[{"value":"/ Store a value to be associated with the given key from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191665,"byte_end":191732,"line_start":230,"line_end":230,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191857,"byte_end":191863,"line_start":234,"line_end":234,"column_start":5,"column_end":11},"name":"remove","qualname":"::storage::StorageMap::remove","value":"pub fn remove<KeyArg: EncodeLike<K>>(KeyArg)","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Remove the value under a key.\n","sig":null,"attributes":[{"value":"/ Remove the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191819,"byte_end":191852,"line_start":233,"line_end":233,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191941,"byte_end":191947,"line_start":237,"line_end":237,"column_start":5,"column_end":11},"name":"mutate","qualname":"::storage::StorageMap::mutate","value":"pub fn mutate<KeyArg: EncodeLike<K>, R, F: FnOnce(&mut Self::Query) ->\n              R>(KeyArg, F) -> R","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Mutate the value under a key.\n","sig":null,"attributes":[{"value":"/ Mutate the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":191903,"byte_end":191936,"line_start":236,"line_end":236,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192095,"byte_end":192105,"line_start":240,"line_end":240,"column_start":5,"column_end":15},"name":"try_mutate","qualname":"::storage::StorageMap::try_mutate","value":"pub fn try_mutate<KeyArg: EncodeLike<K>, R, E, F: FnOnce(&mut Self::Query) ->\n                  Result<R, E>>(KeyArg, F) -> Result<R, E>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Mutate the item, only if an `Ok` value is returned.\n","sig":null,"attributes":[{"value":"/ Mutate the item, only if an `Ok` value is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192035,"byte_end":192090,"line_start":239,"line_end":239,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192315,"byte_end":192328,"line_start":248,"line_end":248,"column_start":5,"column_end":18},"name":"mutate_exists","qualname":"::storage::StorageMap::mutate_exists","value":"pub fn mutate_exists<KeyArg: EncodeLike<K>, R, F: FnOnce(&mut Option<V>) ->\n                     R>(KeyArg, F) -> R","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Mutate the value under a key.","sig":null,"attributes":[{"value":"/ Mutate the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192226,"byte_end":192259,"line_start":245,"line_end":245,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192261,"byte_end":192264,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192266,"byte_end":192310,"line_start":247,"line_end":247,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192515,"byte_end":192532,"line_start":251,"line_end":251,"column_start":5,"column_end":22},"name":"try_mutate_exists","qualname":"::storage::StorageMap::try_mutate_exists","value":"pub fn try_mutate_exists<KeyArg: EncodeLike<K>, R, E,\n                         F: FnOnce(&mut Option<V>) -> Result<R, E>>(KeyArg, F)\n-> Result<R, E>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192414,"byte_end":192510,"line_start":250,"line_end":250,"column_start":2,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192687,"byte_end":192691,"line_start":257,"line_end":257,"column_start":5,"column_end":9},"name":"take","qualname":"::storage::StorageMap::take","value":"pub fn take<KeyArg: EncodeLike<K>>(KeyArg) -> Self::Query","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Take the value under a key.\n","sig":null,"attributes":[{"value":"/ Take the value under a key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192651,"byte_end":192682,"line_start":256,"line_end":256,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193079,"byte_end":193085,"line_start":268,"line_end":268,"column_start":5,"column_end":11},"name":"append","qualname":"::storage::StorageMap::append","value":"pub fn append<Item, EncodeLikeItem,\n              EncodeLikeKey>(EncodeLikeKey, EncodeLikeItem) where\nEncodeLikeKey: EncodeLike<K>, Item: Encode, EncodeLikeItem: EncodeLike<Item>,\nV: StorageAppend<Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Append the given items to the value in the storage.","sig":null,"attributes":[{"value":"/ Append the given items to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192746,"byte_end":192801,"line_start":259,"line_end":259,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192803,"byte_end":192806,"line_start":260,"line_end":260,"column_start":2,"column_end":5}},{"value":"/ `V` is required to implement `codec::EncodeAppend`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192808,"byte_end":192863,"line_start":261,"line_end":261,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192865,"byte_end":192868,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192870,"byte_end":192883,"line_start":263,"line_end":263,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192885,"byte_end":192888,"line_start":264,"line_end":264,"column_start":2,"column_end":5}},{"value":"/ If the storage item is not encoded properly, the storage will be overwritten","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192890,"byte_end":192970,"line_start":265,"line_end":265,"column_start":2,"column_end":82}},{"value":"/ and set to `[item]`. Any default value set for the storage item will be ignored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":192972,"byte_end":193055,"line_start":266,"line_end":266,"column_start":2,"column_end":85}},{"value":"/ on overwrite.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193057,"byte_end":193074,"line_start":267,"line_end":267,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193739,"byte_end":193749,"line_start":287,"line_end":287,"column_start":5,"column_end":15},"name":"decode_len","qualname":"::storage::StorageMap::decode_len","value":"pub fn decode_len<KeyArg: EncodeLike<K>>(KeyArg) -> Option<usize> where\nV: StorageDecodeLength","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Read the length of the storage value without decoding the entire value under the\n given `key`.","sig":null,"attributes":[{"value":"/ Read the length of the storage value without decoding the entire value under the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193284,"byte_end":193368,"line_start":275,"line_end":275,"column_start":2,"column_end":86}},{"value":"/ given `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193370,"byte_end":193386,"line_start":276,"line_end":276,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193388,"byte_end":193391,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ `V` is required to implement [`StorageDecodeLength`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193393,"byte_end":193450,"line_start":278,"line_end":278,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193452,"byte_end":193455,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ If the value does not exists or it fails to decode the length, `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193457,"byte_end":193543,"line_start":280,"line_end":280,"column_start":2,"column_end":88}},{"value":"/ Otherwise `Some(len)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193545,"byte_end":193583,"line_start":281,"line_end":281,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193585,"byte_end":193588,"line_start":282,"line_end":282,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193590,"byte_end":193603,"line_start":283,"line_end":283,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193605,"byte_end":193608,"line_start":284,"line_end":284,"column_start":2,"column_end":5}},{"value":"/ `None` does not mean that `get()` does not return a value. The default value is completly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193610,"byte_end":193703,"line_start":285,"line_end":285,"column_start":2,"column_end":95}},{"value":"/ ignored by this function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193705,"byte_end":193734,"line_start":286,"line_end":286,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194076,"byte_end":194087,"line_start":296,"line_end":296,"column_start":5,"column_end":16},"name":"migrate_key","qualname":"::storage::StorageMap::migrate_key","value":"pub fn migrate_key<OldHasher: StorageHasher, KeyArg: EncodeLike<K>>(KeyArg)\n-> Option<V>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Migrate an item with the given `key` from a defunct `OldHasher` to the current hasher.","sig":null,"attributes":[{"value":"/ Migrate an item with the given `key` from a defunct `OldHasher` to the current hasher.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193887,"byte_end":193977,"line_start":293,"line_end":293,"column_start":2,"column_end":92}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193979,"byte_end":193982,"line_start":294,"line_end":294,"column_start":2,"column_end":5}},{"value":"/ If the key doesn't exist, then it's a no-op. If it does, then it returns its value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":193984,"byte_end":194071,"line_start":295,"line_end":295,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194355,"byte_end":194377,"line_start":301,"line_end":301,"column_start":5,"column_end":27},"name":"migrate_key_from_blake","qualname":"::storage::StorageMap::migrate_key_from_blake","value":"pub fn migrate_key_from_blake<KeyArg: EncodeLike<K>>(KeyArg) -> Option<V>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":" Migrate an item with the given `key` from a `blake2_256` hasher to the current hasher.","sig":null,"attributes":[{"value":"/ Migrate an item with the given `key` from a `blake2_256` hasher to the current hasher.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194166,"byte_end":194256,"line_start":298,"line_end":298,"column_start":2,"column_end":92}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194258,"byte_end":194261,"line_start":299,"line_end":299,"column_start":2,"column_end":5}},{"value":"/ If the key doesn't exist, then it's a no-op. If it does, then it returns its value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194263,"byte_end":194350,"line_start":300,"line_end":300,"column_start":2,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":1720},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194585,"byte_end":194603,"line_start":307,"line_end":307,"column_start":11,"column_end":29},"name":"IterableStorageMap","qualname":"::storage::IterableStorageMap","value":"IterableStorageMap<K: FullEncode, V: FullCodec>: StorageMap<K, V>","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726}],"decl_id":null,"docs":" A strongly-typed map in storage whose keys and values can be iterated over.\n","sig":null,"attributes":[{"value":"/ A strongly-typed map in storage whose keys and values can be iterated over.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194495,"byte_end":194574,"line_start":306,"line_end":306,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1723},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194712,"byte_end":194720,"line_start":309,"line_end":309,"column_start":7,"column_end":15},"name":"Iterator","qualname":"::storage::IterableStorageMap::Iterator","value":"type Iterator: Iterator<Item = (K, V)>;","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" The type that iterates over all `(key, value)`.\n","sig":null,"attributes":[{"value":"/ The type that iterates over all `(key, value)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194654,"byte_end":194705,"line_start":308,"line_end":308,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194889,"byte_end":194893,"line_start":313,"line_end":313,"column_start":5,"column_end":9},"name":"iter","qualname":"::storage::IterableStorageMap::iter","value":"pub fn iter() -> Self::Iterator","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" Enumerate all elements in the map in no particular order. If you alter the map while doing\n this, you'll get undefined results.\n","sig":null,"attributes":[{"value":"/ Enumerate all elements in the map in no particular order. If you alter the map while doing","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194749,"byte_end":194843,"line_start":311,"line_end":311,"column_start":2,"column_end":96}},{"value":"/ this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194845,"byte_end":194884,"line_start":312,"line_end":312,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195091,"byte_end":195096,"line_start":317,"line_end":317,"column_start":5,"column_end":10},"name":"drain","qualname":"::storage::IterableStorageMap::drain","value":"pub fn drain() -> Self::Iterator","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" Remove all elements from the map and iterate through them in no particular order. If you\n add elements to the map while doing this, you'll get undefined results.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the map and iterate through them in no particular order. If you","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194917,"byte_end":195009,"line_start":315,"line_end":315,"column_start":2,"column_end":94}},{"value":"/ add elements to the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195011,"byte_end":195086,"line_start":316,"line_end":316,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195391,"byte_end":195400,"line_start":323,"line_end":323,"column_start":5,"column_end":14},"name":"translate","qualname":"::storage::IterableStorageMap::translate","value":"pub fn translate<O: Decode, F: FnMut(K, O) -> Option<V>>(F)","parent":{"krate":0,"index":1720},"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.\n By returning `None` from `f` for an element, you'll remove it from the map.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195120,"byte_end":195214,"line_start":319,"line_end":319,"column_start":2,"column_end":96}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195216,"byte_end":195295,"line_start":320,"line_end":320,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195297,"byte_end":195300,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195302,"byte_end":195386,"line_start":322,"line_end":322,"column_start":2,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":1729},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195558,"byte_end":195582,"line_start":327,"line_end":327,"column_start":11,"column_end":35},"name":"IterableStorageDoubleMap","qualname":"::storage::IterableStorageDoubleMap","value":"IterableStorageDoubleMap<K1: FullCodec, K2: FullCodec, V: FullCodec>: StorageDoubleMap<K1, K2, V>","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"decl_id":null,"docs":" A strongly-typed double map in storage whose secondary keys and values can be iterated over.\n","sig":null,"attributes":[{"value":"/ A strongly-typed double map in storage whose secondary keys and values can be iterated over.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195451,"byte_end":195547,"line_start":326,"line_end":326,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":1733},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195723,"byte_end":195737,"line_start":333,"line_end":333,"column_start":7,"column_end":21},"name":"PrefixIterator","qualname":"::storage::IterableStorageDoubleMap::PrefixIterator","value":"type PrefixIterator: Iterator<Item = (K2, V)>;","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" The type that iterates over all `(key2, value)`.\n","sig":null,"attributes":[{"value":"/ The type that iterates over all `(key2, value)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195664,"byte_end":195716,"line_start":332,"line_end":332,"column_start":2,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1734},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195832,"byte_end":195840,"line_start":336,"line_end":336,"column_start":7,"column_end":15},"name":"Iterator","qualname":"::storage::IterableStorageDoubleMap::Iterator","value":"type Iterator: Iterator<Item = (K1, K2, V)>;","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" The type that iterates over all `(key1, key2, value)`.\n","sig":null,"attributes":[{"value":"/ The type that iterates over all `(key1, key2, value)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195767,"byte_end":195825,"line_start":335,"line_end":335,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196081,"byte_end":196092,"line_start":341,"line_end":341,"column_start":5,"column_end":16},"name":"iter_prefix","qualname":"::storage::IterableStorageDoubleMap::iter_prefix","value":"pub fn iter_prefix<impl EncodeLike<K1>: EncodeLike<K1>>(impl EncodeLike<K1>)\n-> Self::PrefixIterator","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" Enumerate all elements in the map with first key `k1` in no particular order. If you add or\n remove values whose first key is `k1` to the map while doing this, you'll get undefined\n results.\n","sig":null,"attributes":[{"value":"/ Enumerate all elements in the map with first key `k1` in no particular order. If you add or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195874,"byte_end":195969,"line_start":338,"line_end":338,"column_start":2,"column_end":97}},{"value":"/ remove values whose first key is `k1` to the map while doing this, you'll get undefined","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195971,"byte_end":196062,"line_start":339,"line_end":339,"column_start":2,"column_end":93}},{"value":"/ results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196064,"byte_end":196076,"line_start":340,"line_end":340,"column_start":2,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196364,"byte_end":196376,"line_start":346,"line_end":346,"column_start":5,"column_end":17},"name":"drain_prefix","qualname":"::storage::IterableStorageDoubleMap::drain_prefix","value":"pub fn drain_prefix<impl EncodeLike<K1>: EncodeLike<K1>>(impl EncodeLike<K1>)\n-> Self::PrefixIterator","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" Remove all elements from the map with first key `k1` and iterate through them in no\n particular order. If you add elements with first key `k1` to the map while doing this,\n you'll get undefined results.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the map with first key `k1` and iterate through them in no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196145,"byte_end":196232,"line_start":343,"line_end":343,"column_start":2,"column_end":89}},{"value":"/ particular order. If you add elements with first key `k1` to the map while doing this,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196234,"byte_end":196324,"line_start":344,"line_end":344,"column_start":2,"column_end":92}},{"value":"/ you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196326,"byte_end":196359,"line_start":345,"line_end":345,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196587,"byte_end":196591,"line_start":350,"line_end":350,"column_start":5,"column_end":9},"name":"iter","qualname":"::storage::IterableStorageDoubleMap::iter","value":"pub fn iter() -> Self::Iterator","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" Enumerate all elements in the map in no particular order. If you add or remove values to\n the map while doing this, you'll get undefined results.\n","sig":null,"attributes":[{"value":"/ Enumerate all elements in the map in no particular order. If you add or remove values to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196429,"byte_end":196521,"line_start":348,"line_end":348,"column_start":2,"column_end":94}},{"value":"/ the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196523,"byte_end":196582,"line_start":349,"line_end":349,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196789,"byte_end":196794,"line_start":354,"line_end":354,"column_start":5,"column_end":10},"name":"drain","qualname":"::storage::IterableStorageDoubleMap::drain","value":"pub fn drain() -> Self::Iterator","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" Remove all elements from the map and iterate through them in no particular order. If you\n add elements to the map while doing this, you'll get undefined results.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the map and iterate through them in no particular order. If you","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196615,"byte_end":196707,"line_start":352,"line_end":352,"column_start":2,"column_end":94}},{"value":"/ add elements to the map while doing this, you'll get undefined results.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196709,"byte_end":196784,"line_start":353,"line_end":353,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197089,"byte_end":197098,"line_start":360,"line_end":360,"column_start":5,"column_end":14},"name":"translate","qualname":"::storage::IterableStorageDoubleMap::translate","value":"pub fn translate<O: Decode, F: FnMut(K1, K2, O) -> Option<V>>(F)","parent":{"krate":0,"index":1729},"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.\n By returning `None` from `f` for an element, you'll remove it from the map.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196818,"byte_end":196912,"line_start":356,"line_end":356,"column_start":2,"column_end":96}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196914,"byte_end":196993,"line_start":357,"line_end":357,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":196995,"byte_end":196998,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197000,"byte_end":197084,"line_start":359,"line_end":359,"column_start":2,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":1744},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197404,"byte_end":197420,"line_start":369,"line_end":369,"column_start":11,"column_end":27},"name":"StorageDoubleMap","qualname":"::storage::StorageDoubleMap","value":"StorageDoubleMap<K1: FullEncode, K2: FullEncode, V: FullCodec>","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1769},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1785},{"krate":0,"index":1791},{"krate":0,"index":1796},{"krate":0,"index":1802},{"krate":0,"index":1807},{"krate":0,"index":1810}],"decl_id":null,"docs":" An implementation of a map with a two keys.","sig":null,"attributes":[{"value":"/ An implementation of a map with a two keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197154,"byte_end":197201,"line_start":363,"line_end":363,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197202,"byte_end":197205,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ It provides an important ability to efficiently remove all entries","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197206,"byte_end":197276,"line_start":365,"line_end":365,"column_start":1,"column_end":71}},{"value":"/ that have a common first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197277,"byte_end":197310,"line_start":366,"line_end":366,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197311,"byte_end":197314,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ Details on implementation can be found at [`generator::StorageDoubleMap`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197315,"byte_end":197393,"line_start":368,"line_end":368,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":1748},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197512,"byte_end":197517,"line_start":371,"line_end":371,"column_start":7,"column_end":12},"name":"Query","qualname":"::storage::StorageDoubleMap::Query","value":"type Query;","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The type that get/take returns.\n","sig":null,"attributes":[{"value":"/ The type that get/take returns.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197470,"byte_end":197505,"line_start":370,"line_end":370,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197604,"byte_end":197618,"line_start":374,"line_end":374,"column_start":5,"column_end":19},"name":"hashed_key_for","qualname":"::storage::StorageDoubleMap::hashed_key_for","value":"pub fn hashed_key_for<KArg1, KArg2>(KArg1, KArg2) -> Vec<u8> where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Get the storage key used to fetch a value corresponding to a specific key.\n","sig":null,"attributes":[{"value":"/ Get the storage key used to fetch a value corresponding to a specific key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197521,"byte_end":197599,"line_start":373,"line_end":373,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197779,"byte_end":197791,"line_start":380,"line_end":380,"column_start":5,"column_end":17},"name":"contains_key","qualname":"::storage::StorageDoubleMap::contains_key","value":"pub fn contains_key<KArg1, KArg2>(KArg1, KArg2) -> bool where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Does the value (explicitly) exist in storage?\n","sig":null,"attributes":[{"value":"/ Does the value (explicitly) exist in storage?","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197725,"byte_end":197774,"line_start":379,"line_end":379,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197969,"byte_end":197972,"line_start":386,"line_end":386,"column_start":5,"column_end":8},"name":"get","qualname":"::storage::StorageDoubleMap::get","value":"pub fn get<KArg1, KArg2>(KArg1, KArg2) -> Self::Query where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Load the value associated with the given key from the double map.\n","sig":null,"attributes":[{"value":"/ Load the value associated with the given key from the double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":197895,"byte_end":197964,"line_start":385,"line_end":385,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198202,"byte_end":198209,"line_start":394,"line_end":394,"column_start":5,"column_end":12},"name":"try_get","qualname":"::storage::StorageDoubleMap::try_get","value":"pub fn try_get<KArg1, KArg2>(KArg1, KArg2) -> Result<V, ()> where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Try to get the value for the given key from the double map.","sig":null,"attributes":[{"value":"/ Try to get the value for the given key from the double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198083,"byte_end":198146,"line_start":391,"line_end":391,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198148,"byte_end":198151,"line_start":392,"line_end":392,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok` if it exists, `Err` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198153,"byte_end":198197,"line_start":393,"line_end":393,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198381,"byte_end":198385,"line_start":400,"line_end":400,"column_start":5,"column_end":9},"name":"take","qualname":"::storage::StorageDoubleMap::take","value":"pub fn take<KArg1, KArg2>(KArg1, KArg2) -> Self::Query where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Take a value from storage, removing it afterwards.\n","sig":null,"attributes":[{"value":"/ Take a value from storage, removing it afterwards.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198322,"byte_end":198376,"line_start":399,"line_end":399,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198538,"byte_end":198542,"line_start":406,"line_end":406,"column_start":5,"column_end":9},"name":"swap","qualname":"::storage::StorageDoubleMap::swap","value":"pub fn swap<XKArg1, XKArg2, YKArg1, YKArg2>(XKArg1, XKArg2, YKArg1, YKArg2)\nwhere XKArg1: EncodeLike<K1>, XKArg2: EncodeLike<K2>, YKArg1: EncodeLike<K1>,\nYKArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Swap the values of two key-pairs.\n","sig":null,"attributes":[{"value":"/ Swap the values of two key-pairs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198496,"byte_end":198533,"line_start":405,"line_end":405,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198824,"byte_end":198830,"line_start":414,"line_end":414,"column_start":5,"column_end":11},"name":"insert","qualname":"::storage::StorageDoubleMap::insert","value":"pub fn insert<KArg1, KArg2, VArg>(KArg1, KArg2, VArg) where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>, VArg: EncodeLike<V>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Store a value to be associated with the given keys from the double map.\n","sig":null,"attributes":[{"value":"/ Store a value to be associated with the given keys from the double map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198744,"byte_end":198819,"line_start":413,"line_end":413,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199013,"byte_end":199019,"line_start":421,"line_end":421,"column_start":5,"column_end":11},"name":"remove","qualname":"::storage::StorageDoubleMap::remove","value":"pub fn remove<KArg1, KArg2>(KArg1, KArg2) where KArg1: EncodeLike<K1>,\nKArg2: EncodeLike<K2>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Remove the value under the given keys.\n","sig":null,"attributes":[{"value":"/ Remove the value under the given keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":198966,"byte_end":199008,"line_start":420,"line_end":420,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199162,"byte_end":199175,"line_start":427,"line_end":427,"column_start":5,"column_end":18},"name":"remove_prefix","qualname":"::storage::StorageDoubleMap::remove_prefix","value":"pub fn remove_prefix<KArg1: ?Sized>(KArg1) where KArg1: EncodeLike<K1>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Remove all values under the first key.\n","sig":null,"attributes":[{"value":"/ Remove all values under the first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199115,"byte_end":199157,"line_start":426,"line_end":426,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199288,"byte_end":199306,"line_start":430,"line_end":430,"column_start":5,"column_end":23},"name":"iter_prefix_values","qualname":"::storage::StorageDoubleMap::iter_prefix_values","value":"pub fn iter_prefix_values<KArg1: ?Sized>(KArg1) -> PrefixIterator<V> where\nKArg1: EncodeLike<K1>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Iterate over values that share the first key.\n","sig":null,"attributes":[{"value":"/ Iterate over values that share the first key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199234,"byte_end":199283,"line_start":429,"line_end":429,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199435,"byte_end":199441,"line_start":434,"line_end":434,"column_start":5,"column_end":11},"name":"mutate","qualname":"::storage::StorageDoubleMap::mutate","value":"pub fn mutate<KArg1, KArg2, R, F>(KArg1, KArg2, F) -> R where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>, F: FnOnce(&mut Self::Query) -> R","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Mutate the value under the given keys.\n","sig":null,"attributes":[{"value":"/ Mutate the value under the given keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199388,"byte_end":199430,"line_start":433,"line_end":433,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199667,"byte_end":199677,"line_start":441,"line_end":441,"column_start":5,"column_end":15},"name":"try_mutate","qualname":"::storage::StorageDoubleMap::try_mutate","value":"pub fn try_mutate<KArg1, KArg2, R, E, F>(KArg1, KArg2, F) -> Result<R, E>\nwhere KArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>,\nF: FnOnce(&mut Self::Query) -> Result<R, E>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Mutate the value under the given keys when the closure returns `Ok`.\n","sig":null,"attributes":[{"value":"/ Mutate the value under the given keys when the closure returns `Ok`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199590,"byte_end":199662,"line_start":440,"line_end":440,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199939,"byte_end":199952,"line_start":448,"line_end":448,"column_start":5,"column_end":18},"name":"mutate_exists","qualname":"::storage::StorageDoubleMap::mutate_exists","value":"pub fn mutate_exists<KArg1, KArg2, R, F>(KArg1, KArg2, F) -> R where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>, F: FnOnce(&mut Option<V>) -> R","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Mutate the value under the given keys. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the value under the given keys. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":199851,"byte_end":199934,"line_start":447,"line_end":447,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200200,"byte_end":200217,"line_start":455,"line_end":455,"column_start":5,"column_end":22},"name":"try_mutate_exists","qualname":"::storage::StorageDoubleMap::try_mutate_exists","value":"pub fn try_mutate_exists<KArg1, KArg2, R, E, F>(KArg1, KArg2, F)\n-> Result<R, E> where KArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>,\nF: FnOnce(&mut Option<V>) -> Result<R, E>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.\n","sig":null,"attributes":[{"value":"/ Mutate the item, only if an `Ok` value is returned. Deletes the item if mutated to a `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200099,"byte_end":200195,"line_start":454,"line_end":454,"column_start":2,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200717,"byte_end":200723,"line_start":470,"line_end":470,"column_start":5,"column_end":11},"name":"append","qualname":"::storage::StorageDoubleMap::append","value":"pub fn append<Item, EncodeLikeItem, KArg1,\n              KArg2>(KArg1, KArg2, EncodeLikeItem) where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>, Item: Encode,\nEncodeLikeItem: EncodeLike<Item>, V: StorageAppend<Item>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Append the given item to the value in the storage.","sig":null,"attributes":[{"value":"/ Append the given item to the value in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200389,"byte_end":200443,"line_start":461,"line_end":461,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200445,"byte_end":200448,"line_start":462,"line_end":462,"column_start":2,"column_end":5}},{"value":"/ `V` is required to implement [`StorageAppend`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200450,"byte_end":200501,"line_start":463,"line_end":463,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200503,"byte_end":200506,"line_start":464,"line_end":464,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200508,"byte_end":200521,"line_start":465,"line_end":465,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200523,"byte_end":200526,"line_start":466,"line_end":466,"column_start":2,"column_end":5}},{"value":"/ If the storage item is not encoded properly, the storage will be overwritten","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200528,"byte_end":200608,"line_start":467,"line_end":467,"column_start":2,"column_end":82}},{"value":"/ and set to `[item]`. Any default value set for the storage item will be ignored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200610,"byte_end":200693,"line_start":468,"line_end":468,"column_start":2,"column_end":85}},{"value":"/ on overwrite.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200695,"byte_end":200712,"line_start":469,"line_end":469,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201417,"byte_end":201427,"line_start":493,"line_end":493,"column_start":5,"column_end":15},"name":"decode_len","qualname":"::storage::StorageDoubleMap::decode_len","value":"pub fn decode_len<KArg1, KArg2>(KArg1, KArg2) -> Option<usize> where\nKArg1: EncodeLike<K1>, KArg2: EncodeLike<K2>, V: StorageDecodeLength","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Read the length of the storage value without decoding the entire value under the\n given `key1` and `key2`.","sig":null,"attributes":[{"value":"/ Read the length of the storage value without decoding the entire value under the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":200950,"byte_end":201034,"line_start":481,"line_end":481,"column_start":2,"column_end":86}},{"value":"/ given `key1` and `key2`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201036,"byte_end":201064,"line_start":482,"line_end":482,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201066,"byte_end":201069,"line_start":483,"line_end":483,"column_start":2,"column_end":5}},{"value":"/ `V` is required to implement [`StorageDecodeLength`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201071,"byte_end":201128,"line_start":484,"line_end":484,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201130,"byte_end":201133,"line_start":485,"line_end":485,"column_start":2,"column_end":5}},{"value":"/ If the value does not exists or it fails to decode the length, `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201135,"byte_end":201221,"line_start":486,"line_end":486,"column_start":2,"column_end":88}},{"value":"/ Otherwise `Some(len)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201223,"byte_end":201261,"line_start":487,"line_end":487,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201263,"byte_end":201266,"line_start":488,"line_end":488,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201268,"byte_end":201281,"line_start":489,"line_end":489,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201283,"byte_end":201286,"line_start":490,"line_end":490,"column_start":2,"column_end":5}},{"value":"/ `None` does not mean that `get()` does not return a value. The default value is completly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201288,"byte_end":201381,"line_start":491,"line_end":491,"column_start":2,"column_end":95}},{"value":"/ ignored by this function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201383,"byte_end":201412,"line_start":492,"line_end":492,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201854,"byte_end":201866,"line_start":506,"line_end":506,"column_start":5,"column_end":17},"name":"migrate_keys","qualname":"::storage::StorageDoubleMap::migrate_keys","value":"pub fn migrate_keys<OldHasher1: StorageHasher, OldHasher2: StorageHasher,\n                    KeyArg1: EncodeLike<K1>,\n                    KeyArg2: EncodeLike<K2>>(KeyArg1, KeyArg2) -> Option<V>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Migrate an item with the given `key1` and `key2` from defunct `OldHasher1` and\n `OldHasher2` to the current hashers.","sig":null,"attributes":[{"value":"/ Migrate an item with the given `key1` and `key2` from defunct `OldHasher1` and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201631,"byte_end":201713,"line_start":502,"line_end":502,"column_start":2,"column_end":84}},{"value":"/ `OldHasher2` to the current hashers.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201715,"byte_end":201755,"line_start":503,"line_end":503,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201757,"byte_end":201760,"line_start":504,"line_end":504,"column_start":2,"column_end":5}},{"value":"/ If the key doesn't exist, then it's a no-op. If it does, then it returns its value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":201762,"byte_end":201849,"line_start":505,"line_end":505,"column_start":2,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1815},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202183,"byte_end":202197,"line_start":517,"line_end":517,"column_start":12,"column_end":26},"name":"PrefixIterator","qualname":"::storage::PrefixIterator","value":"PrefixIterator {  }","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"decl_id":null,"docs":" Iterate over a prefix and decode raw_key and raw_value into `T`.","sig":null,"attributes":[{"value":"/ Iterate over a prefix and decode raw_key and raw_value into `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202030,"byte_end":202098,"line_start":514,"line_end":514,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202099,"byte_end":202102,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ If any decoding fails it skips it and continues to the next key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202103,"byte_end":202171,"line_start":516,"line_end":516,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202661,"byte_end":202666,"line_start":529,"line_end":529,"column_start":9,"column_end":14},"name":"drain","qualname":"<PrefixIterator<T>>::drain","value":"pub fn drain(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mutate this iterator into a draining iterator; items iterated are removed from storage.\n","sig":null,"attributes":[{"value":"/ Mutate this iterator into a draining iterator; items iterated are removed from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202561,"byte_end":202652,"line_start":528,"line_end":528,"column_start":2,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1829},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":203937,"byte_end":203960,"line_start":582,"line_end":582,"column_start":12,"column_end":35},"name":"ChildTriePrefixIterator","qualname":"::storage::ChildTriePrefixIterator","value":"ChildTriePrefixIterator {  }","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836}],"decl_id":null,"docs":" Iterate over a prefix of a child trie and decode raw_key and raw_value into `T`.","sig":null,"attributes":[{"value":"/ Iterate over a prefix of a child trie and decode raw_key and raw_value into `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":203763,"byte_end":203847,"line_start":579,"line_end":579,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":203848,"byte_end":203851,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ If any decoding fails it skips the key and continues to the next one.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":203852,"byte_end":203925,"line_start":581,"line_end":581,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204628,"byte_end":204633,"line_start":600,"line_end":600,"column_start":9,"column_end":14},"name":"drain","qualname":"<ChildTriePrefixIterator<T>>::drain","value":"pub fn drain(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mutate this iterator into a draining iterator; items iterated are removed from storage.\n","sig":null,"attributes":[{"value":"/ Mutate this iterator into a draining iterator; items iterated are removed from storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204528,"byte_end":204619,"line_start":599,"line_end":599,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204948,"byte_end":204959,"line_start":610,"line_end":610,"column_start":9,"column_end":20},"name":"with_prefix","qualname":"<ChildTriePrefixIterator<(Vec<u8>, T)>>::with_prefix","value":"pub fn with_prefix(&ChildInfo, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over child trie items in `child_info` with the prefix `prefix`.","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over child trie items in `child_info` with the prefix `prefix`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204753,"byte_end":204850,"line_start":607,"line_end":607,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204852,"byte_end":204855,"line_start":608,"line_end":608,"column_start":2,"column_end":5}},{"value":"/ NOTE: Iterator with [`Self::drain`] will remove any value who failed to decode","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204857,"byte_end":204939,"line_start":609,"line_end":609,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":205668,"byte_end":205688,"line_start":633,"line_end":633,"column_start":9,"column_end":29},"name":"with_prefix_over_key","qualname":"<ChildTriePrefixIterator<(K, T)>>::with_prefix_over_key","value":"pub fn with_prefix_over_key<H: ReversibleStorageHasher>(&ChildInfo, &[u8])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct iterator to iterate over child trie items in `child_info` with the prefix `prefix`.","sig":null,"attributes":[{"value":"/ Construct iterator to iterate over child trie items in `child_info` with the prefix `prefix`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":205466,"byte_end":205563,"line_start":630,"line_end":630,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":205565,"byte_end":205568,"line_start":631,"line_end":631,"column_start":2,"column_end":5}},{"value":"/ NOTE: Iterator with [`Self::drain`] will remove any key or value who failed to decode","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":205570,"byte_end":205659,"line_start":632,"line_end":632,"column_start":2,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":1855},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207688,"byte_end":207706,"line_start":712,"line_end":712,"column_start":11,"column_end":29},"name":"StoragePrefixedMap","qualname":"::storage::StoragePrefixedMap","value":"StoragePrefixedMap<Value: FullCodec>","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1865}],"decl_id":null,"docs":" Trait for maps that store all its value after a unique prefix.","sig":null,"attributes":[{"value":"/ Trait for maps that store all its value after a unique prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207492,"byte_end":207558,"line_start":706,"line_end":706,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207559,"byte_end":207562,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ By default the final prefix is:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207563,"byte_end":207598,"line_start":708,"line_end":708,"column_start":1,"column_end":36}},{"value":"/ ```nocompile","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207599,"byte_end":207615,"line_start":709,"line_end":709,"column_start":1,"column_end":17}},{"value":"/ Twox128(module_prefix) ++ Twox128(storage_prefix)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207616,"byte_end":207669,"line_start":710,"line_end":710,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207670,"byte_end":207677,"line_start":711,"line_end":711,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207782,"byte_end":207795,"line_start":714,"line_end":714,"column_start":5,"column_end":18},"name":"module_prefix","qualname":"::storage::StoragePrefixedMap::module_prefix","value":"pub fn module_prefix() -> &'static [u8]","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Module prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Module prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207728,"byte_end":207777,"line_start":713,"line_end":713,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207873,"byte_end":207887,"line_start":717,"line_end":717,"column_start":5,"column_end":19},"name":"storage_prefix","qualname":"::storage::StoragePrefixedMap::storage_prefix","value":"pub fn storage_prefix() -> &'static [u8]","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Storage prefix. Used for generating final key.\n","sig":null,"attributes":[{"value":"/ Storage prefix. Used for generating final key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207818,"byte_end":207868,"line_start":716,"line_end":716,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207960,"byte_end":207972,"line_start":720,"line_end":720,"column_start":5,"column_end":17},"name":"final_prefix","qualname":"::storage::StoragePrefixedMap::final_prefix","value":"pub fn final_prefix() -> [u8; ]","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Final full prefix that prefixes all keys.\n","sig":null,"attributes":[{"value":"/ Final full prefix that prefixes all keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":207910,"byte_end":207955,"line_start":719,"line_end":719,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208232,"byte_end":208242,"line_start":728,"line_end":728,"column_start":5,"column_end":15},"name":"remove_all","qualname":"::storage::StoragePrefixedMap::remove_all","value":"pub fn remove_all()","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Remove all value of the storage.\n","sig":null,"attributes":[{"value":"/ Remove all value of the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208191,"byte_end":208227,"line_start":727,"line_end":727,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208443,"byte_end":208454,"line_start":735,"line_end":735,"column_start":5,"column_end":16},"name":"iter_values","qualname":"::storage::StoragePrefixedMap::iter_values","value":"pub fn iter_values() -> PrefixIterator<Value>","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Iter over all value of the storage.","sig":null,"attributes":[{"value":"/ Iter over all value of the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208306,"byte_end":208345,"line_start":732,"line_end":732,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208347,"byte_end":208350,"line_start":733,"line_end":733,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value failed to decode becaues storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208352,"byte_end":208438,"line_start":734,"line_end":734,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209277,"byte_end":209293,"line_start":758,"line_end":758,"column_start":5,"column_end":21},"name":"translate_values","qualname":"::storage::StoragePrefixedMap::translate_values","value":"pub fn translate_values<OldValue: Decode, F: FnMut(OldValue) ->\n                        Option<Value>>(F)","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Translate the values of all elements by a function `f`, in the map in no particular order.\n By returning `None` from `f` for an element, you'll remove it from the map.","sig":null,"attributes":[{"value":"/ Translate the values of all elements by a function `f`, in the map in no particular order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208697,"byte_end":208791,"line_start":745,"line_end":745,"column_start":2,"column_end":96}},{"value":"/ By returning `None` from `f` for an element, you'll remove it from the map.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208793,"byte_end":208872,"line_start":746,"line_end":746,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208874,"byte_end":208877,"line_start":747,"line_end":747,"column_start":2,"column_end":5}},{"value":"/ NOTE: If a value fail to decode because storage is corrupted then it is skipped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208879,"byte_end":208963,"line_start":748,"line_end":748,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208965,"byte_end":208968,"line_start":749,"line_end":749,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208970,"byte_end":208983,"line_start":750,"line_end":750,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208985,"byte_end":208988,"line_start":751,"line_end":751,"column_start":2,"column_end":5}},{"value":"/ This function must be used with care, before being updated the storage still contains the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":208990,"byte_end":209083,"line_start":752,"line_end":752,"column_start":2,"column_end":95}},{"value":"/ old type, thus other calls (such as `get`) will fail at decoding it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209085,"byte_end":209157,"line_start":753,"line_end":753,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209159,"byte_end":209162,"line_start":754,"line_end":754,"column_start":2,"column_end":5}},{"value":"/ # Usage","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209164,"byte_end":209175,"line_start":755,"line_end":755,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209177,"byte_end":209180,"line_start":756,"line_end":756,"column_start":2,"column_end":5}},{"value":"/ This would typically be called inside the module implementation of on_runtime_upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209182,"byte_end":209272,"line_start":757,"line_end":757,"column_start":2,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":1869},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210086,"byte_end":210099,"line_start":786,"line_end":786,"column_start":11,"column_end":24},"name":"StorageAppend","qualname":"::storage::StorageAppend","value":"StorageAppend<Item: Encode>: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Marker trait that will be implemented for types that support the `storage::append` api.","sig":null,"attributes":[{"value":"/ Marker trait that will be implemented for types that support the `storage::append` api.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":209954,"byte_end":210045,"line_start":783,"line_end":783,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210046,"byte_end":210049,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210050,"byte_end":210075,"line_start":785,"line_end":785,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210407,"byte_end":210426,"line_start":793,"line_end":793,"column_start":11,"column_end":30},"name":"StorageDecodeLength","qualname":"::storage::StorageDecodeLength","value":"StorageDecodeLength: private::Sealed + codec::DecodeLength","parent":null,"children":[{"krate":0,"index":1872}],"decl_id":null,"docs":" Marker trait that will be implemented for types that support to decode their length in an\n effificent way. It is expected that the length is at the beginning of the encoded object\n and that the length is a `Compact<u32>`.","sig":null,"attributes":[{"value":"/ Marker trait that will be implemented for types that support to decode their length in an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210135,"byte_end":210228,"line_start":788,"line_end":788,"column_start":1,"column_end":94}},{"value":"/ effificent way. It is expected that the length is at the beginning of the encoded object","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210229,"byte_end":210321,"line_start":789,"line_end":789,"column_start":1,"column_end":93}},{"value":"/ and that the length is a `Compact<u32>`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210322,"byte_end":210366,"line_start":790,"line_end":790,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210367,"byte_end":210370,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210371,"byte_end":210396,"line_start":792,"line_end":792,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210731,"byte_end":210741,"line_start":800,"line_end":800,"column_start":5,"column_end":15},"name":"decode_len","qualname":"::storage::StorageDecodeLength::decode_len","value":"pub fn decode_len(&[u8]) -> Option<usize>","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Decode the length of the storage value at `key`.","sig":null,"attributes":[{"value":"/ Decode the length of the storage value at `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210469,"byte_end":210521,"line_start":794,"line_end":794,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210523,"byte_end":210526,"line_start":795,"line_end":795,"column_start":2,"column_end":5}},{"value":"/ This function assumes that the length is at the beginning of the encoded object","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210528,"byte_end":210611,"line_start":796,"line_end":796,"column_start":2,"column_end":85}},{"value":"/ and is a `Compact<u32>`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210613,"byte_end":210641,"line_start":797,"line_end":797,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210643,"byte_end":210646,"line_start":798,"line_end":798,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if the storage value does not exist or the decoding failed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210648,"byte_end":210726,"line_start":799,"line_end":799,"column_start":2,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":1883},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211216,"byte_end":211222,"line_start":815,"line_end":815,"column_start":12,"column_end":18},"name":"Sealed","qualname":"::storage::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1920},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358493,"byte_end":358501,"line_start":25,"line_end":25,"column_start":11,"column_end":19},"name":"Hashable","qualname":"::hash::Hashable","value":"Hashable: Sized","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1931}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358515,"byte_end":358525,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"name":"blake2_128","qualname":"::hash::Hashable::blake2_128","value":"pub fn blake2_128(&Self) -> [u8; ]","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358550,"byte_end":358560,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"blake2_256","qualname":"::hash::Hashable::blake2_256","value":"pub fn blake2_256(&Self) -> [u8; ]","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358585,"byte_end":358602,"line_start":28,"line_end":28,"column_start":5,"column_end":22},"name":"blake2_128_concat","qualname":"::hash::Hashable::blake2_128_concat","value":"pub fn blake2_128_concat(&Self) -> Vec<u8>","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358626,"byte_end":358634,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"twox_128","qualname":"::hash::Hashable::twox_128","value":"pub fn twox_128(&Self) -> [u8; ]","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358659,"byte_end":358667,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"twox_256","qualname":"::hash::Hashable::twox_256","value":"pub fn twox_256(&Self) -> [u8; ]","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358692,"byte_end":358706,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"name":"twox_64_concat","qualname":"::hash::Hashable::twox_64_concat","value":"pub fn twox_64_concat(&Self) -> Vec<u8>","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358730,"byte_end":358738,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"identity","qualname":"::hash::Hashable::identity","value":"pub fn identity(&Self) -> Vec<u8>","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1945},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359361,"byte_end":359374,"line_start":58,"line_end":58,"column_start":11,"column_end":24},"name":"StorageHasher","qualname":"::hash::StorageHasher","value":"StorageHasher: 'static","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948}],"decl_id":null,"docs":" Hasher to use to hash keys to insert to storage.\n","sig":null,"attributes":[{"value":"/ Hasher to use to hash keys to insert to storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359298,"byte_end":359350,"line_start":57,"line_end":57,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":1946},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359393,"byte_end":359401,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"METADATA","qualname":"::hash::StorageHasher::METADATA","value":"frame_metadata::StorageHasher","parent":{"krate":0,"index":1945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1947},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359440,"byte_end":359446,"line_start":60,"line_end":60,"column_start":7,"column_end":13},"name":"Output","qualname":"::hash::StorageHasher::Output","value":"type Output: AsRef<[u8]>;","parent":{"krate":0,"index":1945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359465,"byte_end":359469,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"hash","qualname":"::hash::StorageHasher::hash","value":"pub fn hash(&[u8]) -> Self::Output","parent":{"krate":0,"index":1945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1949},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359632,"byte_end":359655,"line_start":67,"line_end":67,"column_start":11,"column_end":34},"name":"ReversibleStorageHasher","qualname":"::hash::ReversibleStorageHasher","value":"ReversibleStorageHasher: StorageHasher","parent":null,"children":[{"krate":0,"index":1950}],"decl_id":null,"docs":" Hasher to use to hash keys to insert to storage.","sig":null,"attributes":[{"value":"/ Hasher to use to hash keys to insert to storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359500,"byte_end":359552,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359553,"byte_end":359556,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Reversible hasher store the encoded key after the hash part.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359557,"byte_end":359621,"line_start":66,"line_end":66,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359795,"byte_end":359802,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"reverse","qualname":"::hash::ReversibleStorageHasher::reverse","value":"pub fn reverse(&[u8]) -> &[u8]","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":" Split the hash part out of the input.","sig":null,"attributes":[{"value":"/ Split the hash part out of the input.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359674,"byte_end":359715,"line_start":68,"line_end":68,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359717,"byte_end":359720,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ I.e. for input `&[hash ++ key ++ some]` returns `&[key ++ some]`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359722,"byte_end":359790,"line_start":70,"line_end":70,"column_start":2,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1951},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359865,"byte_end":359873,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"Identity","qualname":"::hash::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" Store the key directly.\n","sig":null,"attributes":[{"value":"/ Store the key directly.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359826,"byte_end":359853,"line_start":74,"line_end":74,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1959},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360225,"byte_end":360237,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"Twox64Concat","qualname":"::hash::Twox64Concat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hash storage keys with `concat(twox64(key), key)`\n","sig":null,"attributes":[{"value":"/ Hash storage keys with `concat(twox64(key), key)`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360160,"byte_end":360213,"line_start":89,"line_end":89,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1967},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360779,"byte_end":360795,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"Blake2_128Concat","qualname":"::hash::Blake2_128Concat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hash storage keys with `concat(blake2_128(key), key)`\n","sig":null,"attributes":[{"value":"/ Hash storage keys with `concat(blake2_128(key), key)`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360710,"byte_end":360767,"line_start":112,"line_end":112,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1975},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361334,"byte_end":361344,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"Blake2_128","qualname":"::hash::Blake2_128","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hash storage keys with blake2 128\n","sig":null,"attributes":[{"value":"/ Hash storage keys with blake2 128","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361285,"byte_end":361322,"line_start":135,"line_end":135,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1983},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361603,"byte_end":361613,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"Blake2_256","qualname":"::hash::Blake2_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hash storage keys with blake2 256\n","sig":null,"attributes":[{"value":"/ Hash storage keys with blake2 256","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361554,"byte_end":361591,"line_start":145,"line_end":145,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361870,"byte_end":361877,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Twox128","qualname":"::hash::Twox128","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hash storage keys with twox 128\n","sig":null,"attributes":[{"value":"/ Hash storage keys with twox 128","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361823,"byte_end":361858,"line_start":155,"line_end":155,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1999},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":362126,"byte_end":362133,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"Twox256","qualname":"::hash::Twox256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hash storage keys with twox 256\n","sig":null,"attributes":[{"value":"/ Hash storage keys with twox 256","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":362079,"byte_end":362114,"line_start":165,"line_end":165,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2007},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2019}],"decl_id":null,"docs":" Macros that define an Event types. Events can be used to easily report changes or conditions\n in your runtime to external entities like users, chain explorers, or dApps.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1423,"byte_end":1435,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ Macros that define an Event types. Events can be used to easily report changes or conditions","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363365,"byte_end":363461,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ in your runtime to external entities like users, chain explorers, or dApps.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/event.rs","byte_start":363462,"byte_end":363541,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":2026},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/metadata.rs","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1451,"byte_end":1463,"line_start":58,"line_end":58,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":2078},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/genesis_config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"genesis_config","qualname":"::genesis_config","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/genesis_config.rs","parent":null,"children":[],"decl_id":null,"docs":" Macros for generating the runtime genesis config.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1482,"byte_end":1494,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ Macros for generating the runtime genesis config.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/genesis_config.rs","byte_start":402536,"byte_end":402589,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":2081},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inherent","qualname":"::inherent","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/inherent.rs","parent":null,"children":[{"krate":0,"index":2082},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1519,"byte_end":1531,"line_start":62,"line_end":62,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":2112},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unsigned","qualname":"::unsigned","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/unsigned.rs","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1550,"byte_end":1562,"line_start":64,"line_end":64,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":2130},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2145}],"decl_id":null,"docs":" Macro for declaring a module error.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1581,"byte_end":1593,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/ Macro for declaring a module error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/error.rs","byte_start":423330,"byte_end":423369,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":2149},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3015},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3028},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3103},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3118},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3252},{"krate":0,"index":3255},{"krate":0,"index":3258},{"krate":0,"index":3261},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3352},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3475},{"krate":0,"index":3478},{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3578},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":3696},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3764},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3821},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3857}],"decl_id":null,"docs":" Traits and associated utilities for use in the FRAME environment.","sig":null,"attributes":[{"value":"/ Traits and associated utilities for use in the FRAME environment.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429093,"byte_end":429162,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429163,"byte_end":429166,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: If you're looking for `parameter_types`, it has moved in to the top-level module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429167,"byte_end":429258,"line_start":20,"line_end":20,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":2150},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tokens","qualname":"::traits::tokens","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2445},{"krate":0,"index":2681},{"krate":0,"index":2799},{"krate":0,"index":2928},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2983}],"decl_id":null,"docs":" Traits for working with tokens and their associated datastructures.\n","sig":null,"attributes":[{"value":"/ Traits for working with tokens and their associated datastructures.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":431856,"byte_end":431927,"line_start":18,"line_end":18,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":2151},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fungible","qualname":"::traits::tokens::fungible","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2269},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2369},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2382},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2394},{"krate":0,"index":2400},{"krate":0,"index":2411},{"krate":0,"index":2417},{"krate":0,"index":2422},{"krate":0,"index":2428},{"krate":0,"index":2435}],"decl_id":null,"docs":" The traits for dealing with a single fungible token class and any associated types.\n","sig":null,"attributes":[{"value":"/ The traits for dealing with a single fungible token class and any associated types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":432845,"byte_end":432932,"line_start":18,"line_end":18,"column_start":1,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":2209},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445468,"byte_end":445476,"line_start":32,"line_end":32,"column_start":11,"column_end":19},"name":"Balanced","qualname":"::traits::tokens::fungible::balanced::Balanced","value":"Balanced<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220}],"decl_id":null,"docs":" A fungible token class where any creation and deletion of tokens is semi-explicit and where the\n total supply is maintained automatically.","sig":null,"attributes":[{"value":"/ A fungible token class where any creation and deletion of tokens is semi-explicit and where the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445230,"byte_end":445329,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"/ total supply is maintained automatically.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445330,"byte_end":445375,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445376,"byte_end":445379,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is auto-implemented when a token class has `Unbalanced` implemented.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445380,"byte_end":445457,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":2211},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445614,"byte_end":445624,"line_start":34,"line_end":34,"column_start":7,"column_end":17},"name":"OnDropDebt","qualname":"::traits::tokens::fungible::balanced::Balanced::OnDropDebt","value":"type OnDropDebt: HandleImbalanceDrop<Self::Balance>;","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" The type for managing what happens when an instance of `Debt` is dropped without being used.\n","sig":null,"attributes":[{"value":"/ The type for managing what happens when an instance of `Debt` is dropped without being used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445511,"byte_end":445607,"line_start":33,"line_end":33,"column_start":2,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":2212},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445773,"byte_end":445785,"line_start":37,"line_end":37,"column_start":7,"column_end":19},"name":"OnDropCredit","qualname":"::traits::tokens::fungible::balanced::Balanced::OnDropCredit","value":"type OnDropCredit: HandleImbalanceDrop<Self::Balance>;","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" The type for managing what happens when an instance of `Credit` is dropped without being\n used.\n","sig":null,"attributes":[{"value":"/ The type for managing what happens when an instance of `Credit` is dropped without being","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445663,"byte_end":445755,"line_start":35,"line_end":35,"column_start":2,"column_end":94}},{"value":"/ used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445757,"byte_end":445766,"line_start":36,"line_end":36,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446139,"byte_end":446146,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"rescind","qualname":"::traits::tokens::fungible::balanced::Balanced::rescind","value":"pub fn rescind(Self::Balance) -> DebtOf<AccountId, Self>","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" Reduce the total issuance by `amount` and return the according imbalance. The imbalance will\n typically be used to reduce an account by the same amount with e.g. `settle`.","sig":null,"attributes":[{"value":"/ Reduce the total issuance by `amount` and return the according imbalance. The imbalance will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445825,"byte_end":445921,"line_start":39,"line_end":39,"column_start":2,"column_end":98}},{"value":"/ typically be used to reduce an account by the same amount with e.g. `settle`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445923,"byte_end":446004,"line_start":40,"line_end":40,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446006,"byte_end":446009,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ This is infallible, but doesn't guarantee that the entire `amount` is burnt, for example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446011,"byte_end":446103,"line_start":42,"line_end":42,"column_start":2,"column_end":94}},{"value":"/ in the case of underflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446105,"byte_end":446134,"line_start":43,"line_end":43,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446560,"byte_end":446565,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"issue","qualname":"::traits::tokens::fungible::balanced::Balanced::issue","value":"pub fn issue(Self::Balance) -> CreditOf<AccountId, Self>","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" Increase the total issuance by `amount` and return the according imbalance. The imbalance\n will typically be used to increase an account by the same amount with e.g.\n `resolve_into_existing` or `resolve_creating`.","sig":null,"attributes":[{"value":"/ Increase the total issuance by `amount` and return the according imbalance. The imbalance","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446200,"byte_end":446293,"line_start":46,"line_end":46,"column_start":2,"column_end":95}},{"value":"/ will typically be used to increase an account by the same amount with e.g.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446295,"byte_end":446373,"line_start":47,"line_end":47,"column_start":2,"column_end":80}},{"value":"/ `resolve_into_existing` or `resolve_creating`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446375,"byte_end":446425,"line_start":48,"line_end":48,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446427,"byte_end":446430,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ This is infallible, but doesn't guarantee that the entire `amount` is issued, for example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446432,"byte_end":446525,"line_start":50,"line_end":50,"column_start":2,"column_end":95}},{"value":"/ in the case of overflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446527,"byte_end":446555,"line_start":51,"line_end":51,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446811,"byte_end":446815,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"pair","qualname":"::traits::tokens::fungible::balanced::Balanced::pair","value":"pub fn pair(Self::Balance)\n-> (DebtOf<AccountId, Self>, CreditOf<AccountId, Self>)","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" Produce a pair of imbalances that cancel each other out exactly.","sig":null,"attributes":[{"value":"/ Produce a pair of imbalances that cancel each other out exactly.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446621,"byte_end":446689,"line_start":54,"line_end":54,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446691,"byte_end":446694,"line_start":55,"line_end":55,"column_start":2,"column_end":5}},{"value":"/ This is just the same as burning and issuing the same amount and has no effect on the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446696,"byte_end":446785,"line_start":56,"line_end":56,"column_start":2,"column_end":91}},{"value":"/ total issuance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446787,"byte_end":446806,"line_start":57,"line_end":57,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447266,"byte_end":447271,"line_start":68,"line_end":68,"column_start":5,"column_end":10},"name":"slash","qualname":"::traits::tokens::fungible::balanced::Balanced::slash","value":"pub fn slash(&AccountId, Self::Balance)\n-> (CreditOf<AccountId, Self>, Self::Balance)","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" Deducts up to `value` from the combined balance of `who`. This function cannot fail.","sig":null,"attributes":[{"value":"/ Deducts up to `value` from the combined balance of `who`. This function cannot fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":446949,"byte_end":447037,"line_start":62,"line_end":62,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447039,"byte_end":447042,"line_start":63,"line_end":63,"column_start":2,"column_end":5}},{"value":"/ The resulting imbalance is the first item of the tuple returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447044,"byte_end":447112,"line_start":64,"line_end":64,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447114,"byte_end":447117,"line_start":65,"line_end":65,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `value` will be deducted as possible. If this is less than `value`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447119,"byte_end":447210,"line_start":66,"line_end":66,"column_start":2,"column_end":93}},{"value":"/ then a non-zero second item will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447212,"byte_end":447261,"line_start":67,"line_end":67,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447659,"byte_end":447666,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"deposit","qualname":"::traits::tokens::fungible::balanced::Balanced::deposit","value":"pub fn deposit(&AccountId, Self::Balance)\n-> Result<DebtOf<AccountId, Self>, DispatchError>","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" Mints exactly `value` into the account of `who`.","sig":null,"attributes":[{"value":"/ Mints exactly `value` into the account of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447369,"byte_end":447421,"line_start":73,"line_end":73,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447423,"byte_end":447426,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ If `who` doesn't exist, nothing is done and an `Err` returned. This could happen because it","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447428,"byte_end":447523,"line_start":75,"line_end":75,"column_start":2,"column_end":97}},{"value":"/ the account doesn't yet exist and it isn't possible to create it under the current","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447525,"byte_end":447611,"line_start":76,"line_end":76,"column_start":2,"column_end":88}},{"value":"/ circumstances and with `value` in it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447613,"byte_end":447654,"line_start":77,"line_end":77,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448145,"byte_end":448153,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"withdraw","qualname":"::traits::tokens::fungible::balanced::Balanced::withdraw","value":"pub fn withdraw(&AccountId, Self::Balance)\n-> Result<CreditOf<AccountId, Self>, DispatchError>","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" Removes `value` balance from `who` account if possible.","sig":null,"attributes":[{"value":"/ Removes `value` balance from `who` account if possible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447767,"byte_end":447826,"line_start":83,"line_end":83,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447828,"byte_end":447831,"line_start":84,"line_end":84,"column_start":2,"column_end":5}},{"value":"/ If the removal is not possible, then it returns `Err` and nothing is changed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447833,"byte_end":447914,"line_start":85,"line_end":85,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447916,"byte_end":447919,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ If the operation is successful, this will return `Ok` with a `NegativeImbalance` whose value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":447921,"byte_end":448017,"line_start":87,"line_end":87,"column_start":2,"column_end":98}},{"value":"/ is no less than `value`. It may be more in the case that removing it reduced it below","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448019,"byte_end":448108,"line_start":88,"line_end":88,"column_start":2,"column_end":91}},{"value":"/ `Self::minimum_balance()`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448110,"byte_end":448140,"line_start":89,"line_end":89,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448639,"byte_end":448646,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"resolve","qualname":"::traits::tokens::fungible::balanced::Balanced::resolve","value":"pub fn resolve(&AccountId, CreditOf<AccountId, Self>)\n-> Result<(), CreditOf<AccountId, Self>>","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" The balance of `who` is increased in order to counter `credit`. If the whole of `credit`\n cannot be countered, then nothing is changed and the original `credit` is returned in an\n `Err`.","sig":null,"attributes":[{"value":"/ The balance of `who` is increased in order to counter `credit`. If the whole of `credit`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448298,"byte_end":448390,"line_start":96,"line_end":96,"column_start":2,"column_end":94}},{"value":"/ cannot be countered, then nothing is changed and the original `credit` is returned in an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448392,"byte_end":448484,"line_start":97,"line_end":97,"column_start":2,"column_end":94}},{"value":"/ `Err`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448486,"byte_end":448496,"line_start":98,"line_end":98,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448498,"byte_end":448501,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ Please note: If `credit.peek()` is less than `Self::minimum_balance()`, then `who` must","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448503,"byte_end":448594,"line_start":100,"line_end":100,"column_start":2,"column_end":93}},{"value":"/ already exist for this to succeed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":448596,"byte_end":448634,"line_start":101,"line_end":101,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449218,"byte_end":449224,"line_start":119,"line_end":119,"column_start":5,"column_end":11},"name":"settle","qualname":"::traits::tokens::fungible::balanced::Balanced::settle","value":"pub fn settle(&AccountId, DebtOf<AccountId, Self>)\n-> Result<CreditOf<AccountId, Self>, DebtOf<AccountId, Self>>","parent":{"krate":0,"index":2209},"children":[],"decl_id":null,"docs":" The balance of `who` is decreased in order to counter `debt`. If the whole of `debt`\n cannot be countered, then nothing is changed and the original `debt` is returned in an\n `Err`.\n","sig":null,"attributes":[{"value":"/ The balance of `who` is decreased in order to counter `debt`. If the whole of `debt`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449021,"byte_end":449109,"line_start":116,"line_end":116,"column_start":2,"column_end":90}},{"value":"/ cannot be countered, then nothing is changed and the original `debt` is returned in an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449111,"byte_end":449201,"line_start":117,"line_end":117,"column_start":2,"column_end":92}},{"value":"/ `Err`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449203,"byte_end":449213,"line_start":118,"line_end":118,"column_start":2,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2221},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450295,"byte_end":450305,"line_start":148,"line_end":148,"column_start":11,"column_end":21},"name":"Unbalanced","qualname":"::traits::tokens::fungible::balanced::Unbalanced","value":"Unbalanced<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"decl_id":null,"docs":" A fungible token class where the balance can be set arbitrarily.","sig":null,"attributes":[{"value":"/ A fungible token class where the balance can be set arbitrarily.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449795,"byte_end":449863,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449864,"byte_end":449867,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ **WARNING**","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449868,"byte_end":449883,"line_start":142,"line_end":142,"column_start":1,"column_end":16}},{"value":"/ Do not use this directly unless you want trouble, since it allows you to alter account balances","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449884,"byte_end":449983,"line_start":143,"line_end":143,"column_start":1,"column_end":100}},{"value":"/ without keeping the issuance up to date. It has no safeguards against accidentally creating","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":449984,"byte_end":450079,"line_start":144,"line_end":144,"column_start":1,"column_end":96}},{"value":"/ token imbalances in your system leading to accidental imflation or deflation. It's really just","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450080,"byte_end":450178,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ for the underlying datatype to implement so the user gets the much safer `Balanced` trait to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450179,"byte_end":450275,"line_start":146,"line_end":146,"column_start":1,"column_end":97}},{"value":"/ use.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450276,"byte_end":450284,"line_start":147,"line_end":147,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450517,"byte_end":450528,"line_start":151,"line_end":151,"column_start":5,"column_end":16},"name":"set_balance","qualname":"::traits::tokens::fungible::balanced::Unbalanced::set_balance","value":"pub fn set_balance(&AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Set the balance of `who` to `amount`. If this cannot be done for some reason (e.g.\n because the account cannot be created or an overflow) then an `Err` is returned.\n","sig":null,"attributes":[{"value":"/ Set the balance of `who` to `amount`. If this cannot be done for some reason (e.g.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450340,"byte_end":450426,"line_start":149,"line_end":149,"column_start":2,"column_end":88}},{"value":"/ because the account cannot be created or an overflow) then an `Err` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450428,"byte_end":450512,"line_start":150,"line_end":150,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450634,"byte_end":450652,"line_start":154,"line_end":154,"column_start":5,"column_end":23},"name":"set_total_issuance","qualname":"::traits::tokens::fungible::balanced::Unbalanced::set_total_issuance","value":"pub fn set_total_issuance(Self::Balance)","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Set the total issuance to `amount`.\n","sig":null,"attributes":[{"value":"/ Set the total issuance to `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450590,"byte_end":450629,"line_start":153,"line_end":153,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451001,"byte_end":451017,"line_start":161,"line_end":161,"column_start":5,"column_end":21},"name":"decrease_balance","qualname":"::traits::tokens::fungible::balanced::Unbalanced::decrease_balance","value":"pub fn decrease_balance(&AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Reduce the balance of `who` by `amount`. If it cannot be reduced by that amount for\n some reason, return `Err` and don't reduce it at all. If Ok, return the imbalance.","sig":null,"attributes":[{"value":"/ Reduce the balance of `who` by `amount`. If it cannot be reduced by that amount for","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450679,"byte_end":450766,"line_start":156,"line_end":156,"column_start":2,"column_end":89}},{"value":"/ some reason, return `Err` and don't reduce it at all. If Ok, return the imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450768,"byte_end":450854,"line_start":157,"line_end":157,"column_start":2,"column_end":88}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450856,"byte_end":450859,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and the returned imbalance may be up to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450861,"byte_end":450938,"line_start":159,"line_end":159,"column_start":2,"column_end":79}},{"value":"/ `Self::minimum_balance() - 1` greater than `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450940,"byte_end":450996,"line_start":160,"line_end":160,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451809,"byte_end":451833,"line_start":185,"line_end":185,"column_start":5,"column_end":29},"name":"decrease_balance_at_most","qualname":"::traits::tokens::fungible::balanced::Unbalanced::decrease_balance_at_most","value":"pub fn decrease_balance_at_most(&AccountId, Self::Balance) -> Self::Balance","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Reduce the balance of `who` by the most that is possible, up to `amount`.","sig":null,"attributes":[{"value":"/ Reduce the balance of `who` by the most that is possible, up to `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451520,"byte_end":451597,"line_start":179,"line_end":179,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451599,"byte_end":451602,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and the returned imbalance may be up to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451604,"byte_end":451681,"line_start":181,"line_end":181,"column_start":2,"column_end":79}},{"value":"/ `Self::minimum_balance() - 1` greater than `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451683,"byte_end":451739,"line_start":182,"line_end":182,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451741,"byte_end":451744,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ Return the imbalance by which the account was reduced.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":451746,"byte_end":451804,"line_start":184,"line_end":184,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453064,"byte_end":453080,"line_start":220,"line_end":220,"column_start":5,"column_end":21},"name":"increase_balance","qualname":"::traits::tokens::fungible::balanced::Unbalanced::increase_balance","value":"pub fn increase_balance(&AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Increase the balance of `who` by `amount`. If it cannot be increased by that amount\n for some reason, return `Err` and don't increase it at all. If Ok, return the imbalance.","sig":null,"attributes":[{"value":"/ Increase the balance of `who` by `amount`. If it cannot be increased by that amount","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":452726,"byte_end":452813,"line_start":215,"line_end":215,"column_start":2,"column_end":89}},{"value":"/ for some reason, return `Err` and don't increase it at all. If Ok, return the imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":452815,"byte_end":452907,"line_start":216,"line_end":216,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":452909,"byte_end":452912,"line_start":217,"line_end":217,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and an error will be returned if","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":452914,"byte_end":452984,"line_start":218,"line_end":218,"column_start":2,"column_end":72}},{"value":"/ `amount < Self::minimum_balance()` when the account of `who` is zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":452986,"byte_end":453059,"line_start":219,"line_end":219,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453762,"byte_end":453786,"line_start":240,"line_end":240,"column_start":5,"column_end":29},"name":"increase_balance_at_most","qualname":"::traits::tokens::fungible::balanced::Unbalanced::increase_balance_at_most","value":"pub fn increase_balance_at_most(&AccountId, Self::Balance) -> Self::Balance","parent":{"krate":0,"index":2221},"children":[],"decl_id":null,"docs":" Increase the balance of `who` by the most that is possible, up to `amount`.","sig":null,"attributes":[{"value":"/ Increase the balance of `who` by the most that is possible, up to `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453469,"byte_end":453548,"line_start":234,"line_end":234,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453550,"byte_end":453553,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and the returned imbalance will be zero in the case that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453555,"byte_end":453649,"line_start":236,"line_end":236,"column_start":2,"column_end":96}},{"value":"/ `amount < Self::minimum_balance()`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453651,"byte_end":453690,"line_start":237,"line_end":237,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453692,"byte_end":453695,"line_start":238,"line_end":238,"column_start":2,"column_end":5}},{"value":"/ Return the imbalance by which the account was increased.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":453697,"byte_end":453757,"line_start":239,"line_end":239,"column_start":2,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2229},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454383,"byte_end":454399,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"IncreaseIssuance","qualname":"::traits::tokens::fungible::balanced::IncreaseIssuance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple handler for an imbalance drop which increases the total issuance of the system by the\n imbalance amount. Used for leftover debt.\n","sig":null,"attributes":[{"value":"/ Simple handler for an imbalance drop which increases the total issuance of the system by the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454229,"byte_end":454325,"line_start":258,"line_end":258,"column_start":1,"column_end":97}},{"value":"/ imbalance amount. Used for leftover debt.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454326,"byte_end":454371,"line_start":259,"line_end":259,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2238},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454819,"byte_end":454835,"line_start":271,"line_end":271,"column_start":12,"column_end":28},"name":"DecreaseIssuance","qualname":"::traits::tokens::fungible::balanced::DecreaseIssuance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple handler for an imbalance drop which decreases the total issuance of the system by the\n imbalance amount. Used for leftover credit.\n","sig":null,"attributes":[{"value":"/ Simple handler for an imbalance drop which decreases the total issuance of the system by the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454663,"byte_end":454759,"line_start":269,"line_end":269,"column_start":1,"column_end":97}},{"value":"/ imbalance amount. Used for leftover credit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454760,"byte_end":454807,"line_start":270,"line_end":270,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2293},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459322,"byte_end":459341,"line_start":31,"line_end":31,"column_start":11,"column_end":30},"name":"HandleImbalanceDrop","qualname":"::traits::tokens::fungible::imbalance::HandleImbalanceDrop","value":"HandleImbalanceDrop<Balance>","parent":null,"children":[{"krate":0,"index":2295}],"decl_id":null,"docs":" Handler for when an imbalance gets dropped. This could handle either a credit (negative) or\n debt (positive) imbalance.\n","sig":null,"attributes":[{"value":"/ Handler for when an imbalance gets dropped. This could handle either a credit (negative) or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459185,"byte_end":459280,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/ debt (positive) imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459281,"byte_end":459311,"line_start":30,"line_end":30,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459428,"byte_end":459434,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"handle","qualname":"::traits::tokens::fungible::imbalance::HandleImbalanceDrop::handle","value":"pub fn handle(Balance)","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":" Some something with the imbalance's value which is being dropped.\n","sig":null,"attributes":[{"value":"/ Some something with the imbalance's value which is being dropped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459354,"byte_end":459423,"line_start":32,"line_end":32,"column_start":2,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2296},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459843,"byte_end":459852,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"Imbalance","qualname":"::traits::tokens::fungible::imbalance::Imbalance","value":"Imbalance {  }","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301}],"decl_id":null,"docs":" An imbalance in the system, representing a divergence of recorded token supply from the sum of\n the balances of all accounts. This is `must_use` in order to ensure it gets handled (placing\n into an account, settling from an account or altering the supply).","sig":null,"attributes":[{"value":"/ An imbalance in the system, representing a divergence of recorded token supply from the sum of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459456,"byte_end":459554,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ the balances of all accounts. This is `must_use` in order to ensure it gets handled (placing","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459555,"byte_end":459651,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ into an account, settling from an account or altering the supply).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459652,"byte_end":459722,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459723,"byte_end":459726,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Importantly, it has a special `Drop` impl, and cannot be created outside of this module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459727,"byte_end":459819,"line_start":40,"line_end":40,"column_start":1,"column_end":93}},{"value":"must_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":459820,"byte_end":459831,"line_start":41,"line_end":41,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":2334},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":462405,"byte_end":462411,"line_start":149,"line_end":149,"column_start":10,"column_end":16},"name":"DebtOf","qualname":"::traits::tokens::fungible::imbalance::DebtOf","value":"Imbalance<<B as Inspect<AccountId>>::Balance,\n          <B as Balanced<AccountId>>::OnDropDebt,\n          <B as Balanced<AccountId>>::OnDropCredit>","parent":null,"children":[],"decl_id":null,"docs":" Imbalance implying that the total_issuance value is less than the sum of all account balances.\n","sig":null,"attributes":[{"value":"/ Imbalance implying that the total_issuance value is less than the sum of all account balances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":462297,"byte_end":462395,"line_start":148,"line_end":148,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":2337},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":462754,"byte_end":462762,"line_start":157,"line_end":157,"column_start":10,"column_end":18},"name":"CreditOf","qualname":"::traits::tokens::fungible::imbalance::CreditOf","value":"Imbalance<<B as Inspect<AccountId>>::Balance,\n          <B as Balanced<AccountId>>::OnDropCredit,\n          <B as Balanced<AccountId>>::OnDropDebt>","parent":null,"children":[],"decl_id":null,"docs":" Imbalance implying that the total_issuance value is greater than the sum of all account balances.\n","sig":null,"attributes":[{"value":"/ Imbalance implying that the total_issuance value is greater than the sum of all account balances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":462643,"byte_end":462744,"line_start":156,"line_end":156,"column_start":1,"column_end":102}}]},{"kind":"Trait","id":{"krate":0,"index":2360},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433362,"byte_end":433369,"line_start":32,"line_end":32,"column_start":11,"column_end":18},"name":"Inspect","qualname":"::traits::tokens::fungible::Inspect","value":"Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368}],"decl_id":null,"docs":" Trait for providing balance-inspection access to a fungible asset.\n","sig":null,"attributes":[{"value":"/ Trait for providing balance-inspection access to a fungible asset.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433281,"byte_end":433351,"line_start":31,"line_end":31,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2362},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433446,"byte_end":433453,"line_start":34,"line_end":34,"column_start":7,"column_end":14},"name":"Balance","qualname":"::traits::tokens::fungible::Inspect::Balance","value":"type Balance: Balance;","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" Scalar type for representing balance of an account.\n","sig":null,"attributes":[{"value":"/ Scalar type for representing balance of an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433384,"byte_end":433439,"line_start":33,"line_end":33,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433518,"byte_end":433532,"line_start":37,"line_end":37,"column_start":5,"column_end":19},"name":"total_issuance","qualname":"::traits::tokens::fungible::Inspect::total_issuance","value":"pub fn total_issuance() -> Self::Balance","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" The total amount of issuance in the system.\n","sig":null,"attributes":[{"value":"/ The total amount of issuance in the system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433466,"byte_end":433513,"line_start":36,"line_end":36,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433612,"byte_end":433627,"line_start":40,"line_end":40,"column_start":5,"column_end":20},"name":"minimum_balance","qualname":"::traits::tokens::fungible::Inspect::minimum_balance","value":"pub fn minimum_balance() -> Self::Balance","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" The minimum balance any single account may have.\n","sig":null,"attributes":[{"value":"/ The minimum balance any single account may have.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433555,"byte_end":433607,"line_start":39,"line_end":39,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433684,"byte_end":433691,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"balance","qualname":"::traits::tokens::fungible::Inspect::balance","value":"pub fn balance(&AccountId) -> Self::Balance","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" Get the balance of `who`.\n","sig":null,"attributes":[{"value":"/ Get the balance of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433650,"byte_end":433679,"line_start":42,"line_end":42,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433807,"byte_end":433824,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"reducible_balance","qualname":"::traits::tokens::fungible::Inspect::reducible_balance","value":"pub fn reducible_balance(&AccountId, bool) -> Self::Balance","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" Get the maximum amount that `who` can withdraw/transfer successfully.\n","sig":null,"attributes":[{"value":"/ Get the maximum amount that `who` can withdraw/transfer successfully.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433729,"byte_end":433802,"line_start":45,"line_end":45,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433957,"byte_end":433968,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"can_deposit","qualname":"::traits::tokens::fungible::Inspect::can_deposit","value":"pub fn can_deposit(&AccountId, Self::Balance) -> DepositConsequence","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" Returns `true` if the balance of `who` may be increased by `amount`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the balance of `who` may be increased by `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":433880,"byte_end":433952,"line_start":48,"line_end":48,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434149,"byte_end":434161,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"name":"can_withdraw","qualname":"::traits::tokens::fungible::Inspect::can_withdraw","value":"pub fn can_withdraw(&AccountId, Self::Balance)\n-> WithdrawConsequence<Self::Balance>","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" Returns `Failed` if the balance of `who` may not be decreased by `amount`, otherwise\n the consequence.\n","sig":null,"attributes":[{"value":"/ Returns `Failed` if the balance of `who` may not be decreased by `amount`, otherwise","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434034,"byte_end":434122,"line_start":51,"line_end":51,"column_start":2,"column_end":90}},{"value":"/ the consequence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434124,"byte_end":434144,"line_start":52,"line_end":52,"column_start":2,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2369},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434310,"byte_end":434316,"line_start":57,"line_end":57,"column_start":11,"column_end":17},"name":"Mutate","qualname":"::traits::tokens::fungible::Mutate","value":"Mutate<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374}],"decl_id":null,"docs":" Trait for providing an ERC-20 style fungible asset.\n","sig":null,"attributes":[{"value":"/ Trait for providing an ERC-20 style fungible asset.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434244,"byte_end":434299,"line_start":56,"line_end":56,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434508,"byte_end":434517,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"mint_into","qualname":"::traits::tokens::fungible::Mutate::mint_into","value":"pub fn mint_into(&AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":" Increase the balance of `who` by exactly `amount`, minting new tokens. If that isn't\n possible then an `Err` is returned and nothing is changed.\n","sig":null,"attributes":[{"value":"/ Increase the balance of `who` by exactly `amount`, minting new tokens. If that isn't","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434351,"byte_end":434439,"line_start":58,"line_end":58,"column_start":2,"column_end":90}},{"value":"/ possible then an `Err` is returned and nothing is changed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434441,"byte_end":434503,"line_start":59,"line_end":59,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434867,"byte_end":434876,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"burn_from","qualname":"::traits::tokens::fungible::Mutate::burn_from","value":"pub fn burn_from(&AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":" Decrease the balance of `who` by at least `amount`, possibly slightly more in the case of\n minimum_balance requirements, burning the tokens. If that isn't possible then an `Err` is\n returned and nothing is changed. If successful, the amount of tokens reduced is returned.\n","sig":null,"attributes":[{"value":"/ Decrease the balance of `who` by at least `amount`, possibly slightly more in the case of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434579,"byte_end":434672,"line_start":62,"line_end":62,"column_start":2,"column_end":95}},{"value":"/ minimum_balance requirements, burning the tokens. If that isn't possible then an `Err` is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434674,"byte_end":434767,"line_start":63,"line_end":63,"column_start":2,"column_end":95}},{"value":"/ returned and nothing is changed. If successful, the amount of tokens reduced is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434769,"byte_end":434862,"line_start":64,"line_end":64,"column_start":2,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435380,"byte_end":435385,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"slash","qualname":"::traits::tokens::fungible::Mutate::slash","value":"pub fn slash(&AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":" Attempt to reduce the balance of `who` by as much as possible up to `amount`, and possibly\n slightly more due to minimum_balance requirements. If no decrease is possible then an `Err`\n is returned and nothing is changed. If successful, the amount of tokens reduced is returned.","sig":null,"attributes":[{"value":"/ Attempt to reduce the balance of `who` by as much as possible up to `amount`, and possibly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434960,"byte_end":435054,"line_start":67,"line_end":67,"column_start":2,"column_end":96}},{"value":"/ slightly more due to minimum_balance requirements. If no decrease is possible then an `Err`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435056,"byte_end":435151,"line_start":68,"line_end":68,"column_start":2,"column_end":97}},{"value":"/ is returned and nothing is changed. If successful, the amount of tokens reduced is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435153,"byte_end":435249,"line_start":69,"line_end":69,"column_start":2,"column_end":98}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435251,"byte_end":435254,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ The default implementation just uses `withdraw` along with `reducible_balance` to ensure","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435256,"byte_end":435348,"line_start":71,"line_end":71,"column_start":2,"column_end":94}},{"value":"/ that is doesn't fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435350,"byte_end":435375,"line_start":72,"line_end":72,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435698,"byte_end":435706,"line_start":79,"line_end":79,"column_start":5,"column_end":13},"name":"teleport","qualname":"::traits::tokens::fungible::Mutate::teleport","value":"pub fn teleport(&AccountId, &AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2369},"children":[],"decl_id":null,"docs":" Transfer funds from one account into another. The default implementation uses `mint_into`\n and `burn_from` and may generate unwanted events.\n","sig":null,"attributes":[{"value":"/ Transfer funds from one account into another. The default implementation uses `mint_into`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435545,"byte_end":435638,"line_start":77,"line_end":77,"column_start":2,"column_end":95}},{"value":"/ and `burn_from` and may generate unwanted events.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":435640,"byte_end":435693,"line_start":78,"line_end":78,"column_start":2,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2375},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436542,"byte_end":436550,"line_start":102,"line_end":102,"column_start":11,"column_end":19},"name":"Transfer","qualname":"::traits::tokens::fungible::Transfer","value":"Transfer<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2377}],"decl_id":null,"docs":" Trait for providing a fungible asset which can only be transferred.\n","sig":null,"attributes":[{"value":"/ Trait for providing a fungible asset which can only be transferred.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436460,"byte_end":436531,"line_start":101,"line_end":101,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436639,"byte_end":436647,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"transfer","qualname":"::traits::tokens::fungible::Transfer::transfer","value":"pub fn transfer(&AccountId, &AccountId, Self::Balance, bool)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":" Transfer funds from one account into another.\n","sig":null,"attributes":[{"value":"/ Transfer funds from one account into another.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436585,"byte_end":436634,"line_start":103,"line_end":103,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":2378},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436858,"byte_end":436869,"line_start":113,"line_end":113,"column_start":11,"column_end":22},"name":"InspectHold","qualname":"::traits::tokens::fungible::InspectHold","value":"InspectHold<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381}],"decl_id":null,"docs":" Trait for inspecting a fungible asset which can be reserved.\n","sig":null,"attributes":[{"value":"/ Trait for inspecting a fungible asset which can be reserved.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436783,"byte_end":436847,"line_start":112,"line_end":112,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436954,"byte_end":436969,"line_start":115,"line_end":115,"column_start":5,"column_end":20},"name":"balance_on_hold","qualname":"::traits::tokens::fungible::InspectHold::balance_on_hold","value":"pub fn balance_on_hold(&AccountId) -> Self::Balance","parent":{"krate":0,"index":2378},"children":[],"decl_id":null,"docs":" Amount of funds held in reserve by `who`.\n","sig":null,"attributes":[{"value":"/ Amount of funds held in reserve by `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436904,"byte_end":436949,"line_start":114,"line_end":114,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437086,"byte_end":437094,"line_start":118,"line_end":118,"column_start":5,"column_end":13},"name":"can_hold","qualname":"::traits::tokens::fungible::InspectHold::can_hold","value":"pub fn can_hold(&AccountId, Self::Balance) -> bool","parent":{"krate":0,"index":2378},"children":[],"decl_id":null,"docs":" Check to see if some `amount` of funds of `who` may be placed on hold.\n","sig":null,"attributes":[{"value":"/ Check to see if some `amount` of funds of `who` may be placed on hold.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437007,"byte_end":437081,"line_start":117,"line_end":117,"column_start":2,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":2382},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437220,"byte_end":437230,"line_start":122,"line_end":122,"column_start":11,"column_end":21},"name":"MutateHold","qualname":"::traits::tokens::fungible::MutateHold","value":"MutateHold<AccountId>: InspectHold<AccountId> + Transfer<AccountId>","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386}],"decl_id":null,"docs":" Trait for mutating a fungible asset which can be reserved.\n","sig":null,"attributes":[{"value":"/ Trait for mutating a fungible asset which can be reserved.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437147,"byte_end":437209,"line_start":121,"line_end":121,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437330,"byte_end":437334,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"hold","qualname":"::traits::tokens::fungible::MutateHold::hold","value":"pub fn hold(&AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2382},"children":[],"decl_id":null,"docs":" Hold some funds in an account.\n","sig":null,"attributes":[{"value":"/ Hold some funds in an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437291,"byte_end":437325,"line_start":123,"line_end":123,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437673,"byte_end":437680,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"release","qualname":"::traits::tokens::fungible::MutateHold::release","value":"pub fn release(&AccountId, Self::Balance, bool)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2382},"children":[],"decl_id":null,"docs":" Release up to `amount` held funds in an account.","sig":null,"attributes":[{"value":"/ Release up to `amount` held funds in an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437396,"byte_end":437448,"line_start":126,"line_end":126,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437450,"byte_end":437453,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ The actual amount released is returned with `Ok`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437455,"byte_end":437508,"line_start":128,"line_end":128,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437510,"byte_end":437513,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ If `best_effort` is `true`, then the amount actually unreserved and returned as the inner","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437515,"byte_end":437608,"line_start":130,"line_end":130,"column_start":2,"column_end":95}},{"value":"/ value of `Ok` may be smaller than the `amount` passed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437610,"byte_end":437668,"line_start":131,"line_end":131,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438317,"byte_end":438330,"line_start":146,"line_end":146,"column_start":5,"column_end":18},"name":"transfer_held","qualname":"::traits::tokens::fungible::MutateHold::transfer_held","value":"pub fn transfer_held(&AccountId, &AccountId, Self::Balance, bool, bool)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2382},"children":[],"decl_id":null,"docs":" Transfer held funds into a destination account.","sig":null,"attributes":[{"value":"/ Transfer held funds into a destination account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437785,"byte_end":437836,"line_start":135,"line_end":135,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437838,"byte_end":437841,"line_start":136,"line_end":136,"column_start":2,"column_end":5}},{"value":"/ If `on_hold` is `true`, then the destination account must already exist and the assets","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437843,"byte_end":437933,"line_start":137,"line_end":137,"column_start":2,"column_end":92}},{"value":"/ transferred will still be on hold in the destination account. If not, then the destination","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437935,"byte_end":438029,"line_start":138,"line_end":138,"column_start":2,"column_end":96}},{"value":"/ account need not already exist, but must be creatable.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438031,"byte_end":438089,"line_start":139,"line_end":139,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438091,"byte_end":438094,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ If `best_effort` is `true`, then an amount less than `amount` may be transferred without","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438096,"byte_end":438188,"line_start":141,"line_end":141,"column_start":2,"column_end":94}},{"value":"/ error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438190,"byte_end":438200,"line_start":142,"line_end":142,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438202,"byte_end":438205,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ The actual amount transferred is returned, or `Err` in the case of error and nothing is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438207,"byte_end":438298,"line_start":144,"line_end":144,"column_start":2,"column_end":93}},{"value":"/ changed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438300,"byte_end":438312,"line_start":145,"line_end":145,"column_start":2,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2387},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438557,"byte_end":438569,"line_start":156,"line_end":156,"column_start":11,"column_end":23},"name":"BalancedHold","qualname":"::traits::tokens::fungible::BalancedHold","value":"BalancedHold<AccountId>: Balanced<AccountId> + MutateHold<AccountId>","parent":null,"children":[{"krate":0,"index":2389}],"decl_id":null,"docs":" Trait for slashing a fungible asset which can be reserved.\n","sig":null,"attributes":[{"value":"/ Trait for slashing a fungible asset which can be reserved.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438484,"byte_end":438546,"line_start":155,"line_end":155,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438936,"byte_end":438946,"line_start":163,"line_end":163,"column_start":5,"column_end":15},"name":"slash_held","qualname":"::traits::tokens::fungible::BalancedHold::slash_held","value":"pub fn slash_held(&AccountId, Self::Balance)\n-> (CreditOf<AccountId, Self>, Self::Balance)","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":" Reduce the balance of some funds on hold in an account.","sig":null,"attributes":[{"value":"/ Reduce the balance of some funds on hold in an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438629,"byte_end":438688,"line_start":157,"line_end":157,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438690,"byte_end":438693,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ The resulting imbalance is the first item of the tuple returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438695,"byte_end":438763,"line_start":159,"line_end":159,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438765,"byte_end":438768,"line_start":160,"line_end":160,"column_start":2,"column_end":5}},{"value":"/ As much funds that are on hold up to `amount` will be deducted as possible. If this is less","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438770,"byte_end":438865,"line_start":161,"line_end":161,"column_start":2,"column_end":97}},{"value":"/ than `amount`, then a non-zero second item will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438867,"byte_end":438931,"line_start":162,"line_end":162,"column_start":2,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2394},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439573,"byte_end":439579,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"ItemOf","qualname":"::traits::tokens::fungible::ItemOf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Convert a `fungibles` trait implementation into a `fungible` trait implementation by identifying\n a single item.\n","sig":null,"attributes":[{"value":"/ Convert a `fungibles` trait implementation into a `fungible` trait implementation by identifying","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439442,"byte_end":439542,"line_start":182,"line_end":182,"column_start":1,"column_end":101}},{"value":"/ a single item.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439543,"byte_end":439561,"line_start":183,"line_end":183,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":2445},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fungibles","qualname":"::traits::tokens::fungibles","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2458},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2656},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2669},{"krate":0,"index":2674},{"krate":0,"index":2677}],"decl_id":null,"docs":" The traits for sets of fungible tokens and any associated types.\n","sig":null,"attributes":[{"value":"/ The traits for sets of fungible tokens and any associated types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":463680,"byte_end":463748,"line_start":18,"line_end":18,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":2497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473085,"byte_end":473093,"line_start":32,"line_end":32,"column_start":11,"column_end":19},"name":"Balanced","qualname":"::traits::tokens::fungibles::balanced::Balanced","value":"Balanced<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508}],"decl_id":null,"docs":" A fungible token class where any creation and deletion of tokens is semi-explicit and where the\n total supply is maintained automatically.","sig":null,"attributes":[{"value":"/ A fungible token class where any creation and deletion of tokens is semi-explicit and where the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":472847,"byte_end":472946,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"/ total supply is maintained automatically.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":472947,"byte_end":472992,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":472993,"byte_end":472996,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is auto-implemented when a token class has `Unbalanced` implemented.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":472997,"byte_end":473074,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":2499},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473231,"byte_end":473241,"line_start":34,"line_end":34,"column_start":7,"column_end":17},"name":"OnDropDebt","qualname":"::traits::tokens::fungibles::balanced::Balanced::OnDropDebt","value":"type OnDropDebt: HandleImbalanceDrop<Self::AssetId, Self::Balance>;","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" The type for managing what happens when an instance of `Debt` is dropped without being used.\n","sig":null,"attributes":[{"value":"/ The type for managing what happens when an instance of `Debt` is dropped without being used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473128,"byte_end":473224,"line_start":33,"line_end":33,"column_start":2,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":2500},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473405,"byte_end":473417,"line_start":37,"line_end":37,"column_start":7,"column_end":19},"name":"OnDropCredit","qualname":"::traits::tokens::fungibles::balanced::Balanced::OnDropCredit","value":"type OnDropCredit: HandleImbalanceDrop<Self::AssetId, Self::Balance>;","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" The type for managing what happens when an instance of `Credit` is dropped without being\n used.\n","sig":null,"attributes":[{"value":"/ The type for managing what happens when an instance of `Credit` is dropped without being","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473295,"byte_end":473387,"line_start":35,"line_end":35,"column_start":2,"column_end":94}},{"value":"/ used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473389,"byte_end":473398,"line_start":36,"line_end":36,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473786,"byte_end":473793,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"rescind","qualname":"::traits::tokens::fungibles::balanced::Balanced::rescind","value":"pub fn rescind(Self::AssetId, Self::Balance) -> DebtOf<AccountId, Self>","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Reduce the total issuance by `amount` and return the according imbalance. The imbalance will\n typically be used to reduce an account by the same amount with e.g. `settle`.","sig":null,"attributes":[{"value":"/ Reduce the total issuance by `amount` and return the according imbalance. The imbalance will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473472,"byte_end":473568,"line_start":39,"line_end":39,"column_start":2,"column_end":98}},{"value":"/ typically be used to reduce an account by the same amount with e.g. `settle`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473570,"byte_end":473651,"line_start":40,"line_end":40,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473653,"byte_end":473656,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ This is infallible, but doesn't guarantee that the entire `amount` is burnt, for example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473658,"byte_end":473750,"line_start":42,"line_end":42,"column_start":2,"column_end":94}},{"value":"/ in the case of underflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473752,"byte_end":473781,"line_start":43,"line_end":43,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474229,"byte_end":474234,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"issue","qualname":"::traits::tokens::fungibles::balanced::Balanced::issue","value":"pub fn issue(Self::AssetId, Self::Balance) -> CreditOf<AccountId, Self>","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Increase the total issuance by `amount` and return the according imbalance. The imbalance\n will typically be used to increase an account by the same amount with e.g.\n `resolve_into_existing` or `resolve_creating`.","sig":null,"attributes":[{"value":"/ Increase the total issuance by `amount` and return the according imbalance. The imbalance","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473869,"byte_end":473962,"line_start":46,"line_end":46,"column_start":2,"column_end":95}},{"value":"/ will typically be used to increase an account by the same amount with e.g.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473964,"byte_end":474042,"line_start":47,"line_end":47,"column_start":2,"column_end":80}},{"value":"/ `resolve_into_existing` or `resolve_creating`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474044,"byte_end":474094,"line_start":48,"line_end":48,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474096,"byte_end":474099,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ This is infallible, but doesn't guarantee that the entire `amount` is issued, for example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474101,"byte_end":474194,"line_start":50,"line_end":50,"column_start":2,"column_end":95}},{"value":"/ in the case of overflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474196,"byte_end":474224,"line_start":51,"line_end":51,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474502,"byte_end":474506,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"pair","qualname":"::traits::tokens::fungibles::balanced::Balanced::pair","value":"pub fn pair(Self::AssetId, Self::Balance)\n-> (DebtOf<AccountId, Self>, CreditOf<AccountId, Self>)","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Produce a pair of imbalances that cancel each other out exactly.","sig":null,"attributes":[{"value":"/ Produce a pair of imbalances that cancel each other out exactly.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474312,"byte_end":474380,"line_start":54,"line_end":54,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474382,"byte_end":474385,"line_start":55,"line_end":55,"column_start":2,"column_end":5}},{"value":"/ This is just the same as burning and issuing the same amount and has no effect on the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474387,"byte_end":474476,"line_start":56,"line_end":56,"column_start":2,"column_end":91}},{"value":"/ total issuance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474478,"byte_end":474497,"line_start":57,"line_end":57,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475046,"byte_end":475051,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"name":"slash","qualname":"::traits::tokens::fungibles::balanced::Balanced::slash","value":"pub fn slash(Self::AssetId, &AccountId, Self::Balance)\n-> (CreditOf<AccountId, Self>, Self::Balance)","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Deducts up to `value` from the combined balance of `who`, preferring to deduct from the\n free balance. This function cannot fail.","sig":null,"attributes":[{"value":"/ Deducts up to `value` from the combined balance of `who`, preferring to deduct from the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474680,"byte_end":474771,"line_start":64,"line_end":64,"column_start":2,"column_end":93}},{"value":"/ free balance. This function cannot fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474773,"byte_end":474817,"line_start":65,"line_end":65,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474819,"byte_end":474822,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ The resulting imbalance is the first item of the tuple returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474824,"byte_end":474892,"line_start":67,"line_end":67,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474894,"byte_end":474897,"line_start":68,"line_end":68,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `value` will be deducted as possible. If this is less than `value`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474899,"byte_end":474990,"line_start":69,"line_end":69,"column_start":2,"column_end":93}},{"value":"/ then a non-zero second item will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":474992,"byte_end":475041,"line_start":70,"line_end":70,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475471,"byte_end":475478,"line_start":82,"line_end":82,"column_start":5,"column_end":12},"name":"deposit","qualname":"::traits::tokens::fungibles::balanced::Balanced::deposit","value":"pub fn deposit(Self::AssetId, &AccountId, Self::Balance)\n-> Result<DebtOf<AccountId, Self>, DispatchError>","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Mints exactly `value` into the `asset` account of `who`.","sig":null,"attributes":[{"value":"/ Mints exactly `value` into the `asset` account of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475173,"byte_end":475233,"line_start":77,"line_end":77,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475235,"byte_end":475238,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ If `who` doesn't exist, nothing is done and an `Err` returned. This could happen because it","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475240,"byte_end":475335,"line_start":79,"line_end":79,"column_start":2,"column_end":97}},{"value":"/ the account doesn't yet exist and it isn't possible to create it under the current","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475337,"byte_end":475423,"line_start":80,"line_end":80,"column_start":2,"column_end":88}},{"value":"/ circumstances and with `value` in it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475425,"byte_end":475466,"line_start":81,"line_end":81,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475994,"byte_end":476002,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"name":"withdraw","qualname":"::traits::tokens::fungibles::balanced::Balanced::withdraw","value":"pub fn withdraw(Self::AssetId, &AccountId, Self::Balance)\n-> Result<CreditOf<AccountId, Self>, DispatchError>","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Removes `value` free `asset` balance from `who` account if possible.","sig":null,"attributes":[{"value":"/ Removes `value` free `asset` balance from `who` account if possible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475603,"byte_end":475675,"line_start":88,"line_end":88,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475677,"byte_end":475680,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ If the removal is not possible, then it returns `Err` and nothing is changed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475682,"byte_end":475763,"line_start":90,"line_end":90,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475765,"byte_end":475768,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ If the operation is successful, this will return `Ok` with a `NegativeImbalance` whose value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475770,"byte_end":475866,"line_start":92,"line_end":92,"column_start":2,"column_end":98}},{"value":"/ is no less than `value`. It may be more in the case that removing it reduced it below","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475868,"byte_end":475957,"line_start":93,"line_end":93,"column_start":2,"column_end":91}},{"value":"/ `Self::minimum_balance()`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":475959,"byte_end":475989,"line_start":94,"line_end":94,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476512,"byte_end":476519,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"resolve","qualname":"::traits::tokens::fungibles::balanced::Balanced::resolve","value":"pub fn resolve(&AccountId, CreditOf<AccountId, Self>)\n-> Result<(), CreditOf<AccountId, Self>>","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" The balance of `who` is increased in order to counter `credit`. If the whole of `credit`\n cannot be countered, then nothing is changed and the original `credit` is returned in an\n `Err`.","sig":null,"attributes":[{"value":"/ The balance of `who` is increased in order to counter `credit`. If the whole of `credit`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476171,"byte_end":476263,"line_start":102,"line_end":102,"column_start":2,"column_end":94}},{"value":"/ cannot be countered, then nothing is changed and the original `credit` is returned in an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476265,"byte_end":476357,"line_start":103,"line_end":103,"column_start":2,"column_end":94}},{"value":"/ `Err`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476359,"byte_end":476369,"line_start":104,"line_end":104,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476371,"byte_end":476374,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ Please note: If `credit.peek()` is less than `Self::minimum_balance()`, then `who` must","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476376,"byte_end":476467,"line_start":106,"line_end":106,"column_start":2,"column_end":93}},{"value":"/ already exist for this to succeed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":476469,"byte_end":476507,"line_start":107,"line_end":107,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":477215,"byte_end":477221,"line_start":129,"line_end":129,"column_start":5,"column_end":11},"name":"settle","qualname":"::traits::tokens::fungibles::balanced::Balanced::settle","value":"pub fn settle(&AccountId, DebtOf<AccountId, Self>)\n-> Result<CreditOf<AccountId, Self>, DebtOf<AccountId, Self>>","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" The balance of `who` is decreased in order to counter `debt`. If the whole of `debt`\n cannot be countered, then nothing is changed and the original `debt` is returned in an\n `Err`.\n","sig":null,"attributes":[{"value":"/ The balance of `who` is decreased in order to counter `debt`. If the whole of `debt`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":477018,"byte_end":477106,"line_start":126,"line_end":126,"column_start":2,"column_end":90}},{"value":"/ cannot be countered, then nothing is changed and the original `debt` is returned in an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":477108,"byte_end":477198,"line_start":127,"line_end":127,"column_start":2,"column_end":92}},{"value":"/ `Err`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":477200,"byte_end":477210,"line_start":128,"line_end":128,"column_start":2,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2509},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478474,"byte_end":478484,"line_start":163,"line_end":163,"column_start":11,"column_end":21},"name":"Unbalanced","qualname":"::traits::tokens::fungibles::balanced::Unbalanced","value":"Unbalanced<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516}],"decl_id":null,"docs":" A fungible token class where the balance can be set arbitrarily.","sig":null,"attributes":[{"value":"/ A fungible token class where the balance can be set arbitrarily.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":477974,"byte_end":478042,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478043,"byte_end":478046,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ **WARNING**","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478047,"byte_end":478062,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/ Do not use this directly unless you want trouble, since it allows you to alter account balances","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478063,"byte_end":478162,"line_start":158,"line_end":158,"column_start":1,"column_end":100}},{"value":"/ without keeping the issuance up to date. It has no safeguards against accidentally creating","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478163,"byte_end":478258,"line_start":159,"line_end":159,"column_start":1,"column_end":96}},{"value":"/ token imbalances in your system leading to accidental imflation or deflation. It's really just","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478259,"byte_end":478357,"line_start":160,"line_end":160,"column_start":1,"column_end":99}},{"value":"/ for the underlying datatype to implement so the user gets the much safer `Balanced` trait to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478358,"byte_end":478454,"line_start":161,"line_end":161,"column_start":1,"column_end":97}},{"value":"/ use.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478455,"byte_end":478463,"line_start":162,"line_end":162,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478704,"byte_end":478715,"line_start":166,"line_end":166,"column_start":5,"column_end":16},"name":"set_balance","qualname":"::traits::tokens::fungibles::balanced::Unbalanced::set_balance","value":"pub fn set_balance(Self::AssetId, &AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":" Set the `asset` balance of `who` to `amount`. If this cannot be done for some reason (e.g.\n because the account cannot be created or an overflow) then an `Err` is returned.\n","sig":null,"attributes":[{"value":"/ Set the `asset` balance of `who` to `amount`. If this cannot be done for some reason (e.g.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478519,"byte_end":478613,"line_start":164,"line_end":164,"column_start":2,"column_end":96}},{"value":"/ because the account cannot be created or an overflow) then an `Err` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478615,"byte_end":478699,"line_start":165,"line_end":165,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478854,"byte_end":478872,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"set_total_issuance","qualname":"::traits::tokens::fungibles::balanced::Unbalanced::set_total_issuance","value":"pub fn set_total_issuance(Self::AssetId, Self::Balance)","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":" Set the total issuance of `asset` to `amount`.\n","sig":null,"attributes":[{"value":"/ Set the total issuance of `asset` to `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478799,"byte_end":478849,"line_start":168,"line_end":168,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479251,"byte_end":479267,"line_start":176,"line_end":176,"column_start":5,"column_end":21},"name":"decrease_balance","qualname":"::traits::tokens::fungibles::balanced::Unbalanced::decrease_balance","value":"pub fn decrease_balance(Self::AssetId, &AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":" Reduce the `asset` balance of `who` by `amount`. If it cannot be reduced by that amount for\n some reason, return `Err` and don't reduce it at all. If Ok, return the imbalance.","sig":null,"attributes":[{"value":"/ Reduce the `asset` balance of `who` by `amount`. If it cannot be reduced by that amount for","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478921,"byte_end":479016,"line_start":171,"line_end":171,"column_start":2,"column_end":97}},{"value":"/ some reason, return `Err` and don't reduce it at all. If Ok, return the imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479018,"byte_end":479104,"line_start":172,"line_end":172,"column_start":2,"column_end":88}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479106,"byte_end":479109,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and the returned imbalance may be up to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479111,"byte_end":479188,"line_start":174,"line_end":174,"column_start":2,"column_end":79}},{"value":"/ `Self::minimum_balance() - 1` greater than `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479190,"byte_end":479246,"line_start":175,"line_end":175,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":480108,"byte_end":480132,"line_start":200,"line_end":200,"column_start":5,"column_end":29},"name":"decrease_balance_at_most","qualname":"::traits::tokens::fungibles::balanced::Unbalanced::decrease_balance_at_most","value":"pub fn decrease_balance_at_most(Self::AssetId, &AccountId, Self::Balance)\n-> Self::Balance","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":" Reduce the `asset` balance of `who` by the most that is possible, up to `amount`.","sig":null,"attributes":[{"value":"/ Reduce the `asset` balance of `who` by the most that is possible, up to `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479811,"byte_end":479896,"line_start":194,"line_end":194,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479898,"byte_end":479901,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and the returned imbalance may be up to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479903,"byte_end":479980,"line_start":196,"line_end":196,"column_start":2,"column_end":79}},{"value":"/ `Self::minimum_balance() - 1` greater than `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":479982,"byte_end":480038,"line_start":197,"line_end":197,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":480040,"byte_end":480043,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ Return the imbalance by which the account was reduced.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":480045,"byte_end":480103,"line_start":199,"line_end":199,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481419,"byte_end":481435,"line_start":235,"line_end":235,"column_start":5,"column_end":21},"name":"increase_balance","qualname":"::traits::tokens::fungibles::balanced::Unbalanced::increase_balance","value":"pub fn increase_balance(Self::AssetId, &AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":" Increase the `asset` balance of `who` by `amount`. If it cannot be increased by that amount\n for some reason, return `Err` and don't increase it at all. If Ok, return the imbalance.","sig":null,"attributes":[{"value":"/ Increase the `asset` balance of `who` by `amount`. If it cannot be increased by that amount","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481073,"byte_end":481168,"line_start":230,"line_end":230,"column_start":2,"column_end":97}},{"value":"/ for some reason, return `Err` and don't increase it at all. If Ok, return the imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481170,"byte_end":481262,"line_start":231,"line_end":231,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481264,"byte_end":481267,"line_start":232,"line_end":232,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and an error will be returned if","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481269,"byte_end":481339,"line_start":233,"line_end":233,"column_start":2,"column_end":72}},{"value":"/ `amount < Self::minimum_balance()` when the account of `who` is zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481341,"byte_end":481414,"line_start":234,"line_end":234,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482166,"byte_end":482190,"line_start":255,"line_end":255,"column_start":5,"column_end":29},"name":"increase_balance_at_most","qualname":"::traits::tokens::fungibles::balanced::Unbalanced::increase_balance_at_most","value":"pub fn increase_balance_at_most(Self::AssetId, &AccountId, Self::Balance)\n-> Self::Balance","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":" Increase the `asset` balance of `who` by the most that is possible, up to `amount`.","sig":null,"attributes":[{"value":"/ Increase the `asset` balance of `who` by the most that is possible, up to `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481865,"byte_end":481952,"line_start":249,"line_end":249,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481954,"byte_end":481957,"line_start":250,"line_end":250,"column_start":2,"column_end":5}},{"value":"/ Minimum balance will be respected and the returned imbalance will be zero in the case that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":481959,"byte_end":482053,"line_start":251,"line_end":251,"column_start":2,"column_end":96}},{"value":"/ `amount < Self::minimum_balance()`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482055,"byte_end":482094,"line_start":252,"line_end":252,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482096,"byte_end":482099,"line_start":253,"line_end":253,"column_start":2,"column_end":5}},{"value":"/ Return the imbalance by which the account was increased.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482101,"byte_end":482161,"line_start":254,"line_end":254,"column_start":2,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2517},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482828,"byte_end":482844,"line_start":275,"line_end":275,"column_start":12,"column_end":28},"name":"IncreaseIssuance","qualname":"::traits::tokens::fungibles::balanced::IncreaseIssuance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple handler for an imbalance drop which increases the total issuance of the system by the\n imbalance amount. Used for leftover debt.\n","sig":null,"attributes":[{"value":"/ Simple handler for an imbalance drop which increases the total issuance of the system by the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482674,"byte_end":482770,"line_start":273,"line_end":273,"column_start":1,"column_end":97}},{"value":"/ imbalance amount. Used for leftover debt.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482771,"byte_end":482816,"line_start":274,"line_end":274,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2526},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":483307,"byte_end":483323,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"DecreaseIssuance","qualname":"::traits::tokens::fungibles::balanced::DecreaseIssuance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple handler for an imbalance drop which decreases the total issuance of the system by the\n imbalance amount. Used for leftover credit.\n","sig":null,"attributes":[{"value":"/ Simple handler for an imbalance drop which decreases the total issuance of the system by the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":483151,"byte_end":483247,"line_start":284,"line_end":284,"column_start":1,"column_end":97}},{"value":"/ imbalance amount. Used for leftover credit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":483248,"byte_end":483295,"line_start":285,"line_end":285,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2589},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488076,"byte_end":488095,"line_start":30,"line_end":30,"column_start":11,"column_end":30},"name":"HandleImbalanceDrop","qualname":"::traits::tokens::fungibles::imbalance::HandleImbalanceDrop","value":"HandleImbalanceDrop<AssetId, Balance>","parent":null,"children":[{"krate":0,"index":2592}],"decl_id":null,"docs":" Handler for when an imbalance gets dropped. This could handle either a credit (negative) or\n debt (positive) imbalance.\n","sig":null,"attributes":[{"value":"/ Handler for when an imbalance gets dropped. This could handle either a credit (negative) or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":487939,"byte_end":488034,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ debt (positive) imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488035,"byte_end":488065,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488120,"byte_end":488126,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"handle","qualname":"::traits::tokens::fungibles::imbalance::HandleImbalanceDrop::handle","value":"pub fn handle(AssetId, Balance)","parent":{"krate":0,"index":2589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2593},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488551,"byte_end":488560,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"Imbalance","qualname":"::traits::tokens::fungibles::imbalance::Imbalance","value":"Imbalance {  }","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600}],"decl_id":null,"docs":" An imbalance in the system, representing a divergence of recorded token supply from the sum of\n the balances of all accounts. This is `must_use` in order to ensure it gets handled (placing\n into an account, settling from an account or altering the supply).","sig":null,"attributes":[{"value":"/ An imbalance in the system, representing a divergence of recorded token supply from the sum of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488164,"byte_end":488262,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ the balances of all accounts. This is `must_use` in order to ensure it gets handled (placing","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488263,"byte_end":488359,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ into an account, settling from an account or altering the supply).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488360,"byte_end":488430,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488431,"byte_end":488434,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Importantly, it has a special `Drop` impl, and cannot be created outside of this module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488435,"byte_end":488527,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"must_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488528,"byte_end":488539,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489497,"byte_end":489501,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"name":"zero","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::zero","value":"pub fn zero(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489698,"byte_end":489707,"line_start":90,"line_end":90,"column_start":9,"column_end":18},"name":"drop_zero","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::drop_zero","value":"pub fn drop_zero(Self) -> Result<(), Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489845,"byte_end":489850,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"split","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::split","value":"pub fn split(Self, B) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":490091,"byte_end":490096,"line_start":106,"line_end":106,"column_start":9,"column_end":14},"name":"merge","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::merge","value":"pub fn merge(Self, Self) -> Result<Self, (Self, Self)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":490335,"byte_end":490342,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"subsume","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::subsume","value":"pub fn subsume(&mut Self, Self) -> Result<(), Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":490562,"byte_end":490568,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"name":"offset","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::offset","value":"pub fn offset(Self, Imbalance<A, B, OppositeOnDrop, OnDrop>)\n->\n    Result<SameOrOther<Self, Imbalance<A, B, OppositeOnDrop, OnDrop>>,\n           (Self, Imbalance<A, B, OppositeOnDrop, OnDrop>)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":491169,"byte_end":491173,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"peek","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::peek","value":"pub fn peek(&Self) -> B","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":491214,"byte_end":491219,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"name":"asset","qualname":"<Imbalance<A, B, OnDrop, OppositeOnDrop>>::asset","value":"pub fn asset(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2627},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":491361,"byte_end":491367,"line_start":154,"line_end":154,"column_start":10,"column_end":16},"name":"DebtOf","qualname":"::traits::tokens::fungibles::imbalance::DebtOf","value":"Imbalance<<B as Inspect<AccountId>>::AssetId,\n          <B as Inspect<AccountId>>::Balance,\n          <B as Balanced<AccountId>>::OnDropDebt,\n          <B as Balanced<AccountId>>::OnDropCredit>","parent":null,"children":[],"decl_id":null,"docs":" Imbalance implying that the total_issuance value is less than the sum of all account balances.\n","sig":null,"attributes":[{"value":"/ Imbalance implying that the total_issuance value is less than the sum of all account balances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":491253,"byte_end":491351,"line_start":153,"line_end":153,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":2630},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":491747,"byte_end":491755,"line_start":163,"line_end":163,"column_start":10,"column_end":18},"name":"CreditOf","qualname":"::traits::tokens::fungibles::imbalance::CreditOf","value":"Imbalance<<B as Inspect<AccountId>>::AssetId,\n          <B as Inspect<AccountId>>::Balance,\n          <B as Balanced<AccountId>>::OnDropCredit,\n          <B as Balanced<AccountId>>::OnDropDebt>","parent":null,"children":[],"decl_id":null,"docs":" Imbalance implying that the total_issuance value is greater than the sum of all account balances.\n","sig":null,"attributes":[{"value":"/ Imbalance implying that the total_issuance value is greater than the sum of all account balances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":491636,"byte_end":491737,"line_start":162,"line_end":162,"column_start":1,"column_end":102}}]},{"kind":"Trait","id":{"krate":0,"index":2646},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464130,"byte_end":464137,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Inspect","qualname":"::traits::tokens::fungibles::Inspect","value":"Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655}],"decl_id":null,"docs":" Trait for providing balance-inspection access to a set of named fungible assets.\n","sig":null,"attributes":[{"value":"/ Trait for providing balance-inspection access to a set of named fungible assets.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464035,"byte_end":464119,"line_start":30,"line_end":30,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":2648},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464213,"byte_end":464220,"line_start":33,"line_end":33,"column_start":7,"column_end":14},"name":"AssetId","qualname":"::traits::tokens::fungibles::Inspect::AssetId","value":"type AssetId: AssetId;","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" Means of identifying one asset class from another.\n","sig":null,"attributes":[{"value":"/ Means of identifying one asset class from another.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464152,"byte_end":464206,"line_start":32,"line_end":32,"column_start":2,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":2649},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464295,"byte_end":464302,"line_start":36,"line_end":36,"column_start":7,"column_end":14},"name":"Balance","qualname":"::traits::tokens::fungibles::Inspect::Balance","value":"type Balance: Balance;","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" Scalar type for representing balance of an account.\n","sig":null,"attributes":[{"value":"/ Scalar type for representing balance of an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464233,"byte_end":464288,"line_start":35,"line_end":35,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464367,"byte_end":464381,"line_start":39,"line_end":39,"column_start":5,"column_end":19},"name":"total_issuance","qualname":"::traits::tokens::fungibles::Inspect::total_issuance","value":"pub fn total_issuance(Self::AssetId) -> Self::Balance","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" The total amount of issuance in the system.\n","sig":null,"attributes":[{"value":"/ The total amount of issuance in the system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464315,"byte_end":464362,"line_start":38,"line_end":38,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464481,"byte_end":464496,"line_start":42,"line_end":42,"column_start":5,"column_end":20},"name":"minimum_balance","qualname":"::traits::tokens::fungibles::Inspect::minimum_balance","value":"pub fn minimum_balance(Self::AssetId) -> Self::Balance","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" The minimum balance any single account may have.\n","sig":null,"attributes":[{"value":"/ The minimum balance any single account may have.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464424,"byte_end":464476,"line_start":41,"line_end":41,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464581,"byte_end":464588,"line_start":45,"line_end":45,"column_start":5,"column_end":12},"name":"balance","qualname":"::traits::tokens::fungibles::Inspect::balance","value":"pub fn balance(Self::AssetId, &AccountId) -> Self::Balance","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" Get the `asset` balance of `who`.\n","sig":null,"attributes":[{"value":"/ Get the `asset` balance of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464539,"byte_end":464576,"line_start":44,"line_end":44,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464737,"byte_end":464754,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"name":"reducible_balance","qualname":"::traits::tokens::fungibles::Inspect::reducible_balance","value":"pub fn reducible_balance(Self::AssetId, &AccountId, bool) -> Self::Balance","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" Get the maximum amount of `asset` that `who` can withdraw/transfer successfully.\n","sig":null,"attributes":[{"value":"/ Get the maximum amount of `asset` that `who` can withdraw/transfer successfully.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464648,"byte_end":464732,"line_start":47,"line_end":47,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464917,"byte_end":464928,"line_start":51,"line_end":51,"column_start":5,"column_end":16},"name":"can_deposit","qualname":"::traits::tokens::fungibles::Inspect::can_deposit","value":"pub fn can_deposit(Self::AssetId, &AccountId, Self::Balance)\n-> DepositConsequence","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" Returns `true` if the `asset` balance of `who` may be increased by `amount`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `asset` balance of `who` may be increased by `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":464832,"byte_end":464912,"line_start":50,"line_end":50,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465141,"byte_end":465153,"line_start":56,"line_end":56,"column_start":5,"column_end":17},"name":"can_withdraw","qualname":"::traits::tokens::fungibles::Inspect::can_withdraw","value":"pub fn can_withdraw(Self::AssetId, &AccountId, Self::Balance)\n-> WithdrawConsequence<Self::Balance>","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":" Returns `Failed` if the `asset` balance of `who` may not be decreased by `amount`, otherwise\n the consequence.\n","sig":null,"attributes":[{"value":"/ Returns `Failed` if the `asset` balance of `who` may not be decreased by `amount`, otherwise","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465018,"byte_end":465114,"line_start":54,"line_end":54,"column_start":2,"column_end":98}},{"value":"/ the consequence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465116,"byte_end":465136,"line_start":55,"line_end":55,"column_start":2,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2656},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465369,"byte_end":465375,"line_start":64,"line_end":64,"column_start":11,"column_end":17},"name":"Mutate","qualname":"::traits::tokens::fungibles::Mutate","value":"Mutate<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661}],"decl_id":null,"docs":" Trait for providing a set of named fungible assets which can be created and destroyed.\n","sig":null,"attributes":[{"value":"/ Trait for providing a set of named fungible assets which can be created and destroyed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465268,"byte_end":465358,"line_start":63,"line_end":63,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465893,"byte_end":465902,"line_start":74,"line_end":74,"column_start":5,"column_end":14},"name":"mint_into","qualname":"::traits::tokens::fungibles::Mutate::mint_into","value":"pub fn mint_into(Self::AssetId, &AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Attempt to increase the `asset` balance of `who` by `amount`.","sig":null,"attributes":[{"value":"/ Attempt to increase the `asset` balance of `who` by `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465410,"byte_end":465475,"line_start":65,"line_end":65,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465477,"byte_end":465480,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ If not possible then don't do anything. Possible reasons for failure include:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465482,"byte_end":465563,"line_start":67,"line_end":67,"column_start":2,"column_end":83}},{"value":"/ - Minimum balance not met.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465565,"byte_end":465595,"line_start":68,"line_end":68,"column_start":2,"column_end":32}},{"value":"/ - Account cannot be created (e.g. because there is no provider reference and/or the asset","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465597,"byte_end":465690,"line_start":69,"line_end":69,"column_start":2,"column_end":95}},{"value":"/   isn't considered worth anything).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465692,"byte_end":465731,"line_start":70,"line_end":70,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465733,"byte_end":465736,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ Since this is an operation which should be possible to take alone, if successful it will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465738,"byte_end":465830,"line_start":72,"line_end":72,"column_start":2,"column_end":94}},{"value":"/ increase the overall supply of the underlying token.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465832,"byte_end":465888,"line_start":73,"line_end":73,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466884,"byte_end":466893,"line_start":90,"line_end":90,"column_start":5,"column_end":14},"name":"burn_from","qualname":"::traits::tokens::fungibles::Mutate::burn_from","value":"pub fn burn_from(Self::AssetId, &AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Attempt to reduce the `asset` balance of `who` by `amount`.","sig":null,"attributes":[{"value":"/ Attempt to reduce the `asset` balance of `who` by `amount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465986,"byte_end":466049,"line_start":76,"line_end":76,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466051,"byte_end":466054,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ If not possible then don't do anything. Possible reasons for failure include:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466056,"byte_end":466137,"line_start":78,"line_end":78,"column_start":2,"column_end":83}},{"value":"/ - Less funds in the account than `amount`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466139,"byte_end":466184,"line_start":79,"line_end":79,"column_start":2,"column_end":47}},{"value":"/ - Liquidity requirements (locks, reservations) prevent the funds from being removed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466186,"byte_end":466273,"line_start":80,"line_end":80,"column_start":2,"column_end":89}},{"value":"/ - Operation would require destroying the account and it is required to stay alive (e.g.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466275,"byte_end":466366,"line_start":81,"line_end":81,"column_start":2,"column_end":93}},{"value":"/   because it's providing a needed provider reference).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466368,"byte_end":466426,"line_start":82,"line_end":82,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466428,"byte_end":466431,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ Since this is an operation which should be possible to take alone, if successful it will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466433,"byte_end":466525,"line_start":84,"line_end":84,"column_start":2,"column_end":94}},{"value":"/ reduce the overall supply of the underlying token.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466527,"byte_end":466581,"line_start":85,"line_end":85,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466583,"byte_end":466586,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ Due to minimum balance requirements, it's possible that the amount withdrawn could be up to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466588,"byte_end":466683,"line_start":87,"line_end":87,"column_start":2,"column_end":97}},{"value":"/ `Self::minimum_balance() - 1` more than the `amount`. The total amount withdrawn is returned","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466685,"byte_end":466781,"line_start":88,"line_end":88,"column_start":2,"column_end":98}},{"value":"/ in an `Ok` result. This may be safely ignored if you don't mind the overall supply reducing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":466783,"byte_end":466879,"line_start":89,"line_end":89,"column_start":2,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467434,"byte_end":467439,"line_start":100,"line_end":100,"column_start":5,"column_end":10},"name":"slash","qualname":"::traits::tokens::fungibles::Mutate::slash","value":"pub fn slash(Self::AssetId, &AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Attempt to reduce the `asset` balance of `who` by as much as possible up to `amount`, and\n possibly slightly more due to minimum_balance requirements. If no decrease is possible then\n an `Err` is returned and nothing is changed. If successful, the amount of tokens reduced is\n returned.","sig":null,"attributes":[{"value":"/ Attempt to reduce the `asset` balance of `who` by as much as possible up to `amount`, and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467001,"byte_end":467094,"line_start":93,"line_end":93,"column_start":2,"column_end":95}},{"value":"/ possibly slightly more due to minimum_balance requirements. If no decrease is possible then","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467096,"byte_end":467191,"line_start":94,"line_end":94,"column_start":2,"column_end":97}},{"value":"/ an `Err` is returned and nothing is changed. If successful, the amount of tokens reduced is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467193,"byte_end":467288,"line_start":95,"line_end":95,"column_start":2,"column_end":97}},{"value":"/ returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467290,"byte_end":467303,"line_start":96,"line_end":96,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467305,"byte_end":467308,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ The default implementation just uses `withdraw` along with `reducible_balance` to ensure","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467310,"byte_end":467402,"line_start":98,"line_end":98,"column_start":2,"column_end":94}},{"value":"/ that is doesn't fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467404,"byte_end":467429,"line_start":99,"line_end":99,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467791,"byte_end":467799,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"teleport","qualname":"::traits::tokens::fungibles::Mutate::teleport","value":"pub fn teleport(Self::AssetId, &AccountId, &AccountId, Self::Balance)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Transfer funds from one account into another. The default implementation uses `mint_into`\n and `burn_from` and may generate unwanted events.\n","sig":null,"attributes":[{"value":"/ Transfer funds from one account into another. The default implementation uses `mint_into`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467638,"byte_end":467731,"line_start":106,"line_end":106,"column_start":2,"column_end":95}},{"value":"/ and `burn_from` and may generate unwanted events.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":467733,"byte_end":467786,"line_start":107,"line_end":107,"column_start":2,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2662},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":468708,"byte_end":468716,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"name":"Transfer","qualname":"::traits::tokens::fungibles::Transfer","value":"Transfer<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2664}],"decl_id":null,"docs":" Trait for providing a set of named fungible assets which can only be transferred.\n","sig":null,"attributes":[{"value":"/ Trait for providing a set of named fungible assets which can only be transferred.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":468612,"byte_end":468697,"line_start":131,"line_end":131,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":468805,"byte_end":468813,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"transfer","qualname":"::traits::tokens::fungibles::Transfer::transfer","value":"pub fn transfer(Self::AssetId, &AccountId, &AccountId, Self::Balance, bool)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":" Transfer funds from one account into another.\n","sig":null,"attributes":[{"value":"/ Transfer funds from one account into another.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":468751,"byte_end":468800,"line_start":133,"line_end":133,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":2665},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469068,"byte_end":469079,"line_start":144,"line_end":144,"column_start":11,"column_end":22},"name":"InspectHold","qualname":"::traits::tokens::fungibles::InspectHold","value":"InspectHold<AccountId>: Inspect<AccountId>","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"decl_id":null,"docs":" Trait for inspecting a set of named fungible assets which can be placed on hold.\n","sig":null,"attributes":[{"value":"/ Trait for inspecting a set of named fungible assets which can be placed on hold.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":468973,"byte_end":469057,"line_start":143,"line_end":143,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469152,"byte_end":469167,"line_start":146,"line_end":146,"column_start":5,"column_end":20},"name":"balance_on_hold","qualname":"::traits::tokens::fungibles::InspectHold::balance_on_hold","value":"pub fn balance_on_hold(Self::AssetId, &AccountId) -> Self::Balance","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" Amount of funds held in hold.\n","sig":null,"attributes":[{"value":"/ Amount of funds held in hold.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469114,"byte_end":469147,"line_start":145,"line_end":145,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469313,"byte_end":469321,"line_start":149,"line_end":149,"column_start":5,"column_end":13},"name":"can_hold","qualname":"::traits::tokens::fungibles::InspectHold::can_hold","value":"pub fn can_hold(Self::AssetId, &AccountId, Self::Balance) -> bool","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" Check to see if some `amount` of `asset` may be held on the account of `who`.\n","sig":null,"attributes":[{"value":"/ Check to see if some `amount` of `asset` may be held on the account of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469227,"byte_end":469308,"line_start":148,"line_end":148,"column_start":2,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":2669},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469489,"byte_end":469499,"line_start":153,"line_end":153,"column_start":11,"column_end":21},"name":"MutateHold","qualname":"::traits::tokens::fungibles::MutateHold","value":"MutateHold<AccountId>: InspectHold<AccountId> + Transfer<AccountId>","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673}],"decl_id":null,"docs":" Trait for mutating a set of named fungible assets which can be placed on hold.\n","sig":null,"attributes":[{"value":"/ Trait for mutating a set of named fungible assets which can be placed on hold.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469396,"byte_end":469478,"line_start":152,"line_end":152,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469599,"byte_end":469603,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"hold","qualname":"::traits::tokens::fungibles::MutateHold::hold","value":"pub fn hold(Self::AssetId, &AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Hold some funds in an account.\n","sig":null,"attributes":[{"value":"/ Hold some funds in an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469560,"byte_end":469594,"line_start":154,"line_end":154,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469906,"byte_end":469913,"line_start":161,"line_end":161,"column_start":5,"column_end":12},"name":"release","qualname":"::traits::tokens::fungibles::MutateHold::release","value":"pub fn release(Self::AssetId, &AccountId, Self::Balance, bool)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Release some funds in an account from being on hold.","sig":null,"attributes":[{"value":"/ Release some funds in an account from being on hold.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469687,"byte_end":469743,"line_start":157,"line_end":157,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469745,"byte_end":469748,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ If `best_effort` is `true`, then the amount actually released and returned as the inner","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469750,"byte_end":469841,"line_start":159,"line_end":159,"column_start":2,"column_end":93}},{"value":"/ value of `Ok` may be smaller than the `amount` passed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469843,"byte_end":469901,"line_start":160,"line_end":160,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470572,"byte_end":470585,"line_start":175,"line_end":175,"column_start":5,"column_end":18},"name":"transfer_held","qualname":"::traits::tokens::fungibles::MutateHold::transfer_held","value":"pub fn transfer_held(Self::AssetId, &AccountId, &AccountId, Self::Balance,\n                     bool, bool) -> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Transfer held funds into a destination account.","sig":null,"attributes":[{"value":"/ Transfer held funds into a destination account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470040,"byte_end":470091,"line_start":164,"line_end":164,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470093,"byte_end":470096,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ If `on_hold` is `true`, then the destination account must already exist and the assets","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470098,"byte_end":470188,"line_start":166,"line_end":166,"column_start":2,"column_end":92}},{"value":"/ transferred will still be on hold in the destination account. If not, then the destination","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470190,"byte_end":470284,"line_start":167,"line_end":167,"column_start":2,"column_end":96}},{"value":"/ account need not already exist, but must be creatable.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470286,"byte_end":470344,"line_start":168,"line_end":168,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470346,"byte_end":470349,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ If `best_effort` is `true`, then an amount less than `amount` may be transferred without","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470351,"byte_end":470443,"line_start":170,"line_end":170,"column_start":2,"column_end":94}},{"value":"/ error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470445,"byte_end":470455,"line_start":171,"line_end":171,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470457,"byte_end":470460,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ The actual amount transferred is returned, or `Err` in the case of error and nothing is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470462,"byte_end":470553,"line_start":173,"line_end":173,"column_start":2,"column_end":93}},{"value":"/ changed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470555,"byte_end":470567,"line_start":174,"line_end":174,"column_start":2,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2674},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470855,"byte_end":470867,"line_start":186,"line_end":186,"column_start":11,"column_end":23},"name":"BalancedHold","qualname":"::traits::tokens::fungibles::BalancedHold","value":"BalancedHold<AccountId>: Balanced<AccountId> + MutateHold<AccountId>","parent":null,"children":[{"krate":0,"index":2676}],"decl_id":null,"docs":" Trait for mutating one of several types of fungible assets which can be held.\n","sig":null,"attributes":[{"value":"/ Trait for mutating one of several types of fungible assets which can be held.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470763,"byte_end":470844,"line_start":185,"line_end":185,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":471205,"byte_end":471215,"line_start":193,"line_end":193,"column_start":5,"column_end":15},"name":"slash_held","qualname":"::traits::tokens::fungibles::BalancedHold::slash_held","value":"pub fn slash_held(Self::AssetId, &AccountId, Self::Balance)\n-> (CreditOf<AccountId, Self>, Self::Balance)","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Release and slash some funds in an account.","sig":null,"attributes":[{"value":"/ Release and slash some funds in an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470927,"byte_end":470974,"line_start":187,"line_end":187,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470976,"byte_end":470979,"line_start":188,"line_end":188,"column_start":2,"column_end":5}},{"value":"/ The resulting imbalance is the first item of the tuple returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470981,"byte_end":471049,"line_start":189,"line_end":189,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":471051,"byte_end":471054,"line_start":190,"line_end":190,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `amount` will be deducted as possible. If this is less than `amount`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":471056,"byte_end":471149,"line_start":191,"line_end":191,"column_start":2,"column_end":95}},{"value":"/ then a non-zero second item will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":471151,"byte_end":471200,"line_start":192,"line_end":192,"column_start":2,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":2681},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"currency","qualname":"::traits::tokens::currency","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2776}],"decl_id":null,"docs":" The Currency trait and associated types.\n","sig":null,"attributes":[{"value":"/ The Currency trait and associated types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":492710,"byte_end":492754,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":2726},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":500757,"byte_end":500775,"line_start":25,"line_end":25,"column_start":11,"column_end":29},"name":"ReservableCurrency","qualname":"::traits::tokens::currency::reservable::ReservableCurrency","value":"ReservableCurrency<AccountId>: Currency<AccountId>","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"decl_id":null,"docs":" A currency where funds can be reserved from the user.\n","sig":null,"attributes":[{"value":"/ A currency where funds can be reserved from the user.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":500689,"byte_end":500746,"line_start":24,"line_end":24,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":500947,"byte_end":500958,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"name":"can_reserve","qualname":"::traits::tokens::currency::reservable::ReservableCurrency::can_reserve","value":"pub fn can_reserve(&AccountId, Self::Balance) -> bool","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Same result as `reserve(who, value)` (but without the side-effects) assuming there\n are no balance changes in the meantime.\n","sig":null,"attributes":[{"value":"/ Same result as `reserve(who, value)` (but without the side-effects) assuming there","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":500811,"byte_end":500897,"line_start":26,"line_end":26,"column_start":2,"column_end":88}},{"value":"/ are no balance changes in the meantime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":500899,"byte_end":500942,"line_start":27,"line_end":27,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501271,"byte_end":501285,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"slash_reserved","qualname":"::traits::tokens::currency::reservable::ReservableCurrency::slash_reserved","value":"pub fn slash_reserved(&AccountId, Self::Balance)\n-> (Self::NegativeImbalance, Self::Balance)","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Deducts up to `value` from reserved balance of `who`. This function cannot fail.","sig":null,"attributes":[{"value":"/ Deducts up to `value` from reserved balance of `who`. This function cannot fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501009,"byte_end":501093,"line_start":30,"line_end":30,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501095,"byte_end":501098,"line_start":31,"line_end":31,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `value` will be deducted as possible. If the reserve balance of `who`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501100,"byte_end":501193,"line_start":32,"line_end":32,"column_start":2,"column_end":95}},{"value":"/ is less than `value`, then a non-zero second item will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501195,"byte_end":501266,"line_start":33,"line_end":33,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502023,"byte_end":502039,"line_start":50,"line_end":50,"column_start":5,"column_end":21},"name":"reserved_balance","qualname":"::traits::tokens::currency::reservable::ReservableCurrency::reserved_balance","value":"pub fn reserved_balance(&AccountId) -> Self::Balance","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" The amount of the balance of a given account that is externally reserved; this can still get\n slashed, but gets slashed last of all.","sig":null,"attributes":[{"value":"/ The amount of the balance of a given account that is externally reserved; this can still get","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501379,"byte_end":501475,"line_start":39,"line_end":39,"column_start":2,"column_end":98}},{"value":"/ slashed, but gets slashed last of all.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501477,"byte_end":501519,"line_start":40,"line_end":40,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501521,"byte_end":501524,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ This balance is a 'reserve' balance that other subsystems use in order to set aside tokens","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501526,"byte_end":501620,"line_start":42,"line_end":42,"column_start":2,"column_end":96}},{"value":"/ that are still 'owned' by the account holder, but which are suspendable.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501622,"byte_end":501698,"line_start":43,"line_end":43,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501700,"byte_end":501703,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ When this balance falls below the value of `ExistentialDeposit`, then this 'reserve account'","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501705,"byte_end":501801,"line_start":45,"line_end":45,"column_start":2,"column_end":98}},{"value":"/ is deleted: specifically, `ReservedBalance`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501803,"byte_end":501851,"line_start":46,"line_end":46,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501853,"byte_end":501856,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ `system::AccountNonce` is also deleted if `FreeBalance` is also zero (it also gets","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501858,"byte_end":501944,"line_start":48,"line_end":48,"column_start":2,"column_end":88}},{"value":"/ collapsed to zero if it ever becomes less than `ExistentialDeposit`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":501946,"byte_end":502018,"line_start":49,"line_end":49,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502313,"byte_end":502320,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"reserve","qualname":"::traits::tokens::currency::reservable::ReservableCurrency::reserve","value":"pub fn reserve(&AccountId, Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Moves `value` from balance to reserved balance.","sig":null,"attributes":[{"value":"/ Moves `value` from balance to reserved balance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502077,"byte_end":502128,"line_start":52,"line_end":52,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502130,"byte_end":502133,"line_start":53,"line_end":53,"column_start":2,"column_end":5}},{"value":"/ If the free balance is lower than `value`, then no funds will be moved and an `Err` will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502135,"byte_end":502227,"line_start":54,"line_end":54,"column_start":2,"column_end":94}},{"value":"/ be returned to notify of this. This is different behavior than `unreserve`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502229,"byte_end":502308,"line_start":55,"line_end":55,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502853,"byte_end":502862,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"unreserve","qualname":"::traits::tokens::currency::reservable::ReservableCurrency::unreserve","value":"pub fn unreserve(&AccountId, Self::Balance) -> Self::Balance","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Moves up to `value` from reserved balance to free balance. This function cannot fail.","sig":null,"attributes":[{"value":"/ Moves up to `value` from reserved balance to free balance. This function cannot fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502381,"byte_end":502470,"line_start":58,"line_end":58,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502472,"byte_end":502475,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `value` will be moved as possible. If the reserve balance of `who`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502477,"byte_end":502567,"line_start":60,"line_end":60,"column_start":2,"column_end":92}},{"value":"/ is less than `value`, then the remaining amount will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502569,"byte_end":502638,"line_start":61,"line_end":61,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502640,"byte_end":502643,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ # NOTES","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502645,"byte_end":502656,"line_start":63,"line_end":63,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502658,"byte_end":502661,"line_start":64,"line_end":64,"column_start":2,"column_end":5}},{"value":"/ - This is different from `reserve`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502663,"byte_end":502702,"line_start":65,"line_end":65,"column_start":2,"column_end":41}},{"value":"/ - If the remaining reserved balance is less than `ExistentialDeposit`, it will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502704,"byte_end":502786,"line_start":66,"line_end":66,"column_start":2,"column_end":84}},{"value":"/ invoke `on_reserved_too_low` and could reap the account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502788,"byte_end":502848,"line_start":67,"line_end":67,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503376,"byte_end":503395,"line_start":77,"line_end":77,"column_start":5,"column_end":24},"name":"repatriate_reserved","qualname":"::traits::tokens::currency::reservable::ReservableCurrency::repatriate_reserved","value":"pub fn repatriate_reserved(&AccountId, &AccountId, Self::Balance,\n                           BalanceStatus)\n-> Result<Self::Balance, DispatchError>","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Moves up to `value` from reserved balance of account `slashed` to balance of account\n `beneficiary`. `beneficiary` must exist for this to succeed. If it does not, `Err` will be\n returned. Funds will be placed in either the `free` balance or the `reserved` balance,\n depending on the `status`.","sig":null,"attributes":[{"value":"/ Moves up to `value` from reserved balance of account `slashed` to balance of account","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":502922,"byte_end":503010,"line_start":70,"line_end":70,"column_start":2,"column_end":90}},{"value":"/ `beneficiary`. `beneficiary` must exist for this to succeed. If it does not, `Err` will be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503012,"byte_end":503106,"line_start":71,"line_end":71,"column_start":2,"column_end":96}},{"value":"/ returned. Funds will be placed in either the `free` balance or the `reserved` balance,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503108,"byte_end":503198,"line_start":72,"line_end":72,"column_start":2,"column_end":92}},{"value":"/ depending on the `status`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503200,"byte_end":503230,"line_start":73,"line_end":73,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503232,"byte_end":503235,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `value` will be deducted as possible. If this is less than `value`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503237,"byte_end":503328,"line_start":75,"line_end":75,"column_start":2,"column_end":93}},{"value":"/ then `Ok(non_zero)` will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":503330,"byte_end":503371,"line_start":76,"line_end":76,"column_start":2,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":2750},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504556,"byte_end":504570,"line_start":27,"line_end":27,"column_start":10,"column_end":24},"name":"LockIdentifier","qualname":"::traits::tokens::currency::lockable::LockIdentifier","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a lock. Used for disambiguating different locks so that\n they can be individually replaced or removed.\n","sig":null,"attributes":[{"value":"/ An identifier for a lock. Used for disambiguating different locks so that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504419,"byte_end":504496,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they can be individually replaced or removed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504497,"byte_end":504546,"line_start":26,"line_end":26,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":2752},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504656,"byte_end":504672,"line_start":30,"line_end":30,"column_start":11,"column_end":27},"name":"LockableCurrency","qualname":"::traits::tokens::currency::lockable::LockableCurrency","value":"LockableCurrency<AccountId>: Currency<AccountId>","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758}],"decl_id":null,"docs":" A currency whose accounts can have liquidity restrictions.\n","sig":null,"attributes":[{"value":"/ A currency whose accounts can have liquidity restrictions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504583,"byte_end":504645,"line_start":29,"line_end":29,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":2754},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504782,"byte_end":504788,"line_start":32,"line_end":32,"column_start":7,"column_end":13},"name":"Moment","qualname":"::traits::tokens::currency::lockable::LockableCurrency::Moment","value":"type Moment;","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" The quantity used to denote time; usually just a `BlockNumber`.\n","sig":null,"attributes":[{"value":"/ The quantity used to denote time; usually just a `BlockNumber`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504708,"byte_end":504775,"line_start":31,"line_end":31,"column_start":2,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":2755},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504867,"byte_end":504875,"line_start":35,"line_end":35,"column_start":7,"column_end":15},"name":"MaxLocks","qualname":"::traits::tokens::currency::lockable::LockableCurrency::MaxLocks","value":"type MaxLocks: Get<u32>;","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" The maximum number of locks a user should have on their account.\n","sig":null,"attributes":[{"value":"/ The maximum number of locks a user should have on their account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504792,"byte_end":504860,"line_start":34,"line_end":34,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505179,"byte_end":505187,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"set_lock","qualname":"::traits::tokens::currency::lockable::LockableCurrency::set_lock","value":"pub fn set_lock(LockIdentifier, &AccountId, Self::Balance, WithdrawReasons)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Create a new balance lock on account `who`.","sig":null,"attributes":[{"value":"/ Create a new balance lock on account `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504889,"byte_end":504936,"line_start":37,"line_end":37,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504938,"byte_end":504941,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ If the new lock is valid (i.e. not already expired), it will push the struct to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504943,"byte_end":505026,"line_start":39,"line_end":39,"column_start":2,"column_end":85}},{"value":"/ the `Locks` vec in storage. Note that you can lock more funds than a user has.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505028,"byte_end":505110,"line_start":40,"line_end":40,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505112,"byte_end":505115,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ If the lock `id` already exists, this will update it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505117,"byte_end":505174,"line_start":42,"line_end":42,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505738,"byte_end":505749,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"extend_lock","qualname":"::traits::tokens::currency::lockable::LockableCurrency::extend_lock","value":"pub fn extend_lock(LockIdentifier, &AccountId, Self::Balance, WithdrawReasons)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Changes a balance lock (selected by `id`) so that it becomes less liquid in all\n parameters or creates a new one if it does not exist.","sig":null,"attributes":[{"value":"/ Changes a balance lock (selected by `id`) so that it becomes less liquid in all","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505289,"byte_end":505372,"line_start":50,"line_end":50,"column_start":2,"column_end":85}},{"value":"/ parameters or creates a new one if it does not exist.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505374,"byte_end":505431,"line_start":51,"line_end":51,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505433,"byte_end":505436,"line_start":52,"line_end":52,"column_start":2,"column_end":5}},{"value":"/ Calling `extend_lock` on an existing lock `id` differs from `set_lock` in that it","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505438,"byte_end":505523,"line_start":53,"line_end":53,"column_start":2,"column_end":87}},{"value":"/ applies the most severe constraints of the two, while `set_lock` replaces the lock","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505525,"byte_end":505611,"line_start":54,"line_end":54,"column_start":2,"column_end":88}},{"value":"/ with the new parameters. As in, `extend_lock` will set:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505613,"byte_end":505672,"line_start":55,"line_end":55,"column_start":2,"column_end":61}},{"value":"/ - maximum `amount`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505674,"byte_end":505696,"line_start":56,"line_end":56,"column_start":2,"column_end":24}},{"value":"/ - bitwise mask of all `reasons`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505698,"byte_end":505733,"line_start":57,"line_end":57,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505884,"byte_end":505895,"line_start":66,"line_end":66,"column_start":5,"column_end":16},"name":"remove_lock","qualname":"::traits::tokens::currency::lockable::LockableCurrency::remove_lock","value":"pub fn remove_lock(LockIdentifier, &AccountId)","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Remove an existing lock.\n","sig":null,"attributes":[{"value":"/ Remove an existing lock.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505851,"byte_end":505879,"line_start":65,"line_end":65,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2759},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506071,"byte_end":506086,"line_start":74,"line_end":74,"column_start":11,"column_end":26},"name":"VestingSchedule","qualname":"::traits::tokens::currency::lockable::VestingSchedule","value":"VestingSchedule<AccountId>","parent":null,"children":[{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" A vesting schedule over a currency. This allows a particular currency to have vesting limits\n applied to it.\n","sig":null,"attributes":[{"value":"/ A vesting schedule over a currency. This allows a particular currency to have vesting limits","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":505945,"byte_end":506041,"line_start":72,"line_end":72,"column_start":1,"column_end":97}},{"value":"/ applied to it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506042,"byte_end":506060,"line_start":73,"line_end":73,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":2761},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506175,"byte_end":506181,"line_start":76,"line_end":76,"column_start":7,"column_end":13},"name":"Moment","qualname":"::traits::tokens::currency::lockable::VestingSchedule::Moment","value":"type Moment;","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" The quantity used to denote time; usually just a `BlockNumber`.\n","sig":null,"attributes":[{"value":"/ The quantity used to denote time; usually just a `BlockNumber`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506101,"byte_end":506168,"line_start":75,"line_end":75,"column_start":2,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":2762},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506239,"byte_end":506247,"line_start":79,"line_end":79,"column_start":7,"column_end":15},"name":"Currency","qualname":"::traits::tokens::currency::lockable::VestingSchedule::Currency","value":"type Currency: Currency<AccountId>;","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" The currency that this schedule applies to.\n","sig":null,"attributes":[{"value":"/ The currency that this schedule applies to.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506185,"byte_end":506232,"line_start":78,"line_end":78,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506433,"byte_end":506448,"line_start":83,"line_end":83,"column_start":5,"column_end":20},"name":"vesting_balance","qualname":"::traits::tokens::currency::lockable::VestingSchedule::vesting_balance","value":"pub fn vesting_balance(&AccountId)\n-> Option<<Self::Currency as Currency<AccountId>>::Balance>","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Get the amount that is currently being vested and cannot be transferred out of this account.\n Returns `None` if the account has no vesting schedule.\n","sig":null,"attributes":[{"value":"/ Get the amount that is currently being vested and cannot be transferred out of this account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506272,"byte_end":506368,"line_start":81,"line_end":81,"column_start":2,"column_end":98}},{"value":"/ Returns `None` if the account has no vesting schedule.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506370,"byte_end":506428,"line_start":82,"line_end":82,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506832,"byte_end":506852,"line_start":93,"line_end":93,"column_start":5,"column_end":25},"name":"add_vesting_schedule","qualname":"::traits::tokens::currency::lockable::VestingSchedule::add_vesting_schedule","value":"pub fn add_vesting_schedule(&AccountId,\n                            <Self::Currency as Currency<AccountId>>::Balance,\n                            <Self::Currency as Currency<AccountId>>::Balance,\n                            Self::Moment) -> DispatchResult","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Adds a vesting schedule to a given account.","sig":null,"attributes":[{"value":"/ Adds a vesting schedule to a given account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506529,"byte_end":506576,"line_start":85,"line_end":85,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506578,"byte_end":506581,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ If there already exists a vesting schedule for the given account, an `Err` is returned","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506583,"byte_end":506673,"line_start":87,"line_end":87,"column_start":2,"column_end":92}},{"value":"/ and nothing is updated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506675,"byte_end":506702,"line_start":88,"line_end":88,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506704,"byte_end":506707,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ Is a no-op if the amount to be vested is zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506709,"byte_end":506759,"line_start":90,"line_end":90,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506761,"byte_end":506764,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ NOTE: This doesn't alter the free balance of the account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":506766,"byte_end":506827,"line_start":92,"line_end":92,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":507175,"byte_end":507198,"line_start":103,"line_end":103,"column_start":5,"column_end":28},"name":"remove_vesting_schedule","qualname":"::traits::tokens::currency::lockable::VestingSchedule::remove_vesting_schedule","value":"pub fn remove_vesting_schedule(&AccountId)","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Remove a vesting schedule for a given account.","sig":null,"attributes":[{"value":"/ Remove a vesting schedule for a given account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":507052,"byte_end":507102,"line_start":100,"line_end":100,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":507104,"byte_end":507107,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ NOTE: This doesn't alter the free balance of the account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":507109,"byte_end":507170,"line_start":102,"line_end":102,"column_start":2,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":2776},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493205,"byte_end":493213,"line_start":33,"line_end":33,"column_start":11,"column_end":19},"name":"Currency","qualname":"::traits::tokens::currency::Currency","value":"Currency<AccountId>","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798}],"decl_id":null,"docs":" Abstraction over a fungible assets system.\n","sig":null,"attributes":[{"value":"/ Abstraction over a fungible assets system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493148,"byte_end":493194,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2778},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493265,"byte_end":493272,"line_start":35,"line_end":35,"column_start":7,"column_end":14},"name":"Balance","qualname":"::traits::tokens::currency::Currency::Balance","value":"type Balance: Balance + MaybeSerializeDeserialize + Debug;","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The balance of an account.\n","sig":null,"attributes":[{"value":"/ The balance of an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493228,"byte_end":493258,"line_start":34,"line_end":34,"column_start":2,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2779},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493482,"byte_end":493499,"line_start":39,"line_end":39,"column_start":7,"column_end":24},"name":"PositiveImbalance","qualname":"::traits::tokens::currency::Currency::PositiveImbalance","value":"type PositiveImbalance: Imbalance<Self::Balance, Opposite=Self::NegativeImbalance>;","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The opaque token type for an imbalance. This is returned by unbalanced operations\n and must be dealt with. It may be dropped but cannot be cloned.\n","sig":null,"attributes":[{"value":"/ The opaque token type for an imbalance. This is returned by unbalanced operations","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493321,"byte_end":493406,"line_start":37,"line_end":37,"column_start":2,"column_end":87}},{"value":"/ and must be dealt with. It may be dropped but cannot be cloned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493408,"byte_end":493475,"line_start":38,"line_end":38,"column_start":2,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":2780},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493724,"byte_end":493741,"line_start":43,"line_end":43,"column_start":7,"column_end":24},"name":"NegativeImbalance","qualname":"::traits::tokens::currency::Currency::NegativeImbalance","value":"type NegativeImbalance: Imbalance<Self::Balance, Opposite=Self::PositiveImbalance>;","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The opaque token type for an imbalance. This is returned by unbalanced operations\n and must be dealt with. It may be dropped but cannot be cloned.\n","sig":null,"attributes":[{"value":"/ The opaque token type for an imbalance. This is returned by unbalanced operations","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493563,"byte_end":493648,"line_start":41,"line_end":41,"column_start":2,"column_end":87}},{"value":"/ and must be dealt with. It may be dropped but cannot be cloned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493650,"byte_end":493717,"line_start":42,"line_end":42,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493867,"byte_end":493880,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"total_balance","qualname":"::traits::tokens::currency::Currency::total_balance","value":"pub fn total_balance(&AccountId) -> Self::Balance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The combined balance of `who`.\n","sig":null,"attributes":[{"value":"/ The combined balance of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493828,"byte_end":493862,"line_start":47,"line_end":47,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494108,"byte_end":494117,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"can_slash","qualname":"::traits::tokens::currency::Currency::can_slash","value":"pub fn can_slash(&AccountId, Self::Balance) -> bool","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Same result as `slash(who, value)` (but without the side-effects) assuming there are no\n balance changes in the meantime and only the reserved balance is not taken into account.\n","sig":null,"attributes":[{"value":"/ Same result as `slash(who, value)` (but without the side-effects) assuming there are no","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":493918,"byte_end":494009,"line_start":50,"line_end":50,"column_start":2,"column_end":93}},{"value":"/ balance changes in the meantime and only the reserved balance is not taken into account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494011,"byte_end":494103,"line_start":51,"line_end":51,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494220,"byte_end":494234,"line_start":55,"line_end":55,"column_start":5,"column_end":19},"name":"total_issuance","qualname":"::traits::tokens::currency::Currency::total_issuance","value":"pub fn total_issuance() -> Self::Balance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The total amount of issuance in the system.\n","sig":null,"attributes":[{"value":"/ The total amount of issuance in the system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494168,"byte_end":494215,"line_start":54,"line_end":54,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494387,"byte_end":494402,"line_start":59,"line_end":59,"column_start":5,"column_end":20},"name":"minimum_balance","qualname":"::traits::tokens::currency::Currency::minimum_balance","value":"pub fn minimum_balance() -> Self::Balance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The minimum balance any single account may have. This is equivalent to the `Balances` module's\n `ExistentialDeposit`.\n","sig":null,"attributes":[{"value":"/ The minimum balance any single account may have. This is equivalent to the `Balances` module's","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494257,"byte_end":494355,"line_start":57,"line_end":57,"column_start":2,"column_end":100}},{"value":"/ `ExistentialDeposit`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494357,"byte_end":494382,"line_start":58,"line_end":58,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494739,"byte_end":494743,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"burn","qualname":"::traits::tokens::currency::Currency::burn","value":"pub fn burn(Self::Balance) -> Self::PositiveImbalance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Reduce the total issuance by `amount` and return the according imbalance. The imbalance will\n typically be used to reduce an account by the same amount with e.g. `settle`.","sig":null,"attributes":[{"value":"/ Reduce the total issuance by `amount` and return the according imbalance. The imbalance will","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494425,"byte_end":494521,"line_start":61,"line_end":61,"column_start":2,"column_end":98}},{"value":"/ typically be used to reduce an account by the same amount with e.g. `settle`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494523,"byte_end":494604,"line_start":62,"line_end":62,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494606,"byte_end":494609,"line_start":63,"line_end":63,"column_start":2,"column_end":5}},{"value":"/ This is infallible, but doesn't guarantee that the entire `amount` is burnt, for example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494611,"byte_end":494703,"line_start":64,"line_end":64,"column_start":2,"column_end":94}},{"value":"/ in the case of underflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494705,"byte_end":494734,"line_start":65,"line_end":65,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495157,"byte_end":495162,"line_start":74,"line_end":74,"column_start":5,"column_end":10},"name":"issue","qualname":"::traits::tokens::currency::Currency::issue","value":"pub fn issue(Self::Balance) -> Self::NegativeImbalance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Increase the total issuance by `amount` and return the according imbalance. The imbalance\n will typically be used to increase an account by the same amount with e.g.\n `resolve_into_existing` or `resolve_creating`.","sig":null,"attributes":[{"value":"/ Increase the total issuance by `amount` and return the according imbalance. The imbalance","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494797,"byte_end":494890,"line_start":68,"line_end":68,"column_start":2,"column_end":95}},{"value":"/ will typically be used to increase an account by the same amount with e.g.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494892,"byte_end":494970,"line_start":69,"line_end":69,"column_start":2,"column_end":80}},{"value":"/ `resolve_into_existing` or `resolve_creating`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":494972,"byte_end":495022,"line_start":70,"line_end":70,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495024,"byte_end":495027,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ This is infallible, but doesn't guarantee that the entire `amount` is issued, for example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495029,"byte_end":495122,"line_start":72,"line_end":72,"column_start":2,"column_end":95}},{"value":"/ in the case of overflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495124,"byte_end":495152,"line_start":73,"line_end":73,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495406,"byte_end":495410,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"pair","qualname":"::traits::tokens::currency::Currency::pair","value":"pub fn pair(Self::Balance)\n-> (Self::PositiveImbalance, Self::NegativeImbalance)","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Produce a pair of imbalances that cancel each other out exactly.","sig":null,"attributes":[{"value":"/ Produce a pair of imbalances that cancel each other out exactly.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495216,"byte_end":495284,"line_start":76,"line_end":76,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495286,"byte_end":495289,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ This is just the same as burning and issuing the same amount and has no effect on the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495291,"byte_end":495380,"line_start":78,"line_end":78,"column_start":2,"column_end":91}},{"value":"/ total issuance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495382,"byte_end":495401,"line_start":79,"line_end":79,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496085,"byte_end":496097,"line_start":93,"line_end":93,"column_start":5,"column_end":17},"name":"free_balance","qualname":"::traits::tokens::currency::Currency::free_balance","value":"pub fn free_balance(&AccountId) -> Self::Balance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" The 'free' balance of a given account.","sig":null,"attributes":[{"value":"/ The 'free' balance of a given account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495547,"byte_end":495589,"line_start":84,"line_end":84,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495591,"byte_end":495594,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ This is the only balance that matters in terms of most operations on tokens. It alone","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495596,"byte_end":495685,"line_start":86,"line_end":86,"column_start":2,"column_end":91}},{"value":"/ is used to determine the balance when in the contract execution environment. When this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495687,"byte_end":495777,"line_start":87,"line_end":87,"column_start":2,"column_end":92}},{"value":"/ balance falls below the value of `ExistentialDeposit`, then the 'current account' is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495779,"byte_end":495867,"line_start":88,"line_end":88,"column_start":2,"column_end":90}},{"value":"/ deleted: specifically `FreeBalance`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495869,"byte_end":495909,"line_start":89,"line_end":89,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495911,"byte_end":495914,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ `system::AccountNonce` is also deleted if `ReservedBalance` is also zero (it also gets","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":495916,"byte_end":496006,"line_start":91,"line_end":91,"column_start":2,"column_end":92}},{"value":"/ collapsed to zero if it ever becomes less than `ExistentialDeposit`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496008,"byte_end":496080,"line_start":92,"line_end":92,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496350,"byte_end":496369,"line_start":99,"line_end":99,"column_start":5,"column_end":24},"name":"ensure_can_withdraw","qualname":"::traits::tokens::currency::Currency::ensure_can_withdraw","value":"pub fn ensure_can_withdraw(&AccountId, Self::Balance, WithdrawReasons,\n                           Self::Balance) -> DispatchResult","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Returns `Ok` iff the account is able to make a withdrawal of the given amount\n for the given reason. Basically, it's just a dry-run of `withdraw`.","sig":null,"attributes":[{"value":"/ Returns `Ok` iff the account is able to make a withdrawal of the given amount","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496135,"byte_end":496216,"line_start":95,"line_end":95,"column_start":2,"column_end":83}},{"value":"/ for the given reason. Basically, it's just a dry-run of `withdraw`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496218,"byte_end":496289,"line_start":96,"line_end":96,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496291,"byte_end":496294,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ `Err(...)` with the reason why not otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496296,"byte_end":496345,"line_start":98,"line_end":98,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496728,"byte_end":496736,"line_start":112,"line_end":112,"column_start":5,"column_end":13},"name":"transfer","qualname":"::traits::tokens::currency::Currency::transfer","value":"pub fn transfer(&AccountId, &AccountId, Self::Balance, ExistenceRequirement)\n-> DispatchResult","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Transfer some liquid free balance to another staker.","sig":null,"attributes":[{"value":"/ Transfer some liquid free balance to another staker.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496531,"byte_end":496587,"line_start":108,"line_end":108,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496589,"byte_end":496592,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ This is a very high-level function. It will ensure all appropriate fees are paid","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496594,"byte_end":496678,"line_start":110,"line_end":110,"column_start":2,"column_end":86}},{"value":"/ and no imbalance in the system remains.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496680,"byte_end":496723,"line_start":111,"line_end":111,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497241,"byte_end":497246,"line_start":126,"line_end":126,"column_start":5,"column_end":10},"name":"slash","qualname":"::traits::tokens::currency::Currency::slash","value":"pub fn slash(&AccountId, Self::Balance)\n-> (Self::NegativeImbalance, Self::Balance)","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Deducts up to `value` from the combined balance of `who`, preferring to deduct from the\n free balance. This function cannot fail.","sig":null,"attributes":[{"value":"/ Deducts up to `value` from the combined balance of `who`, preferring to deduct from the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496875,"byte_end":496966,"line_start":119,"line_end":119,"column_start":2,"column_end":93}},{"value":"/ free balance. This function cannot fail.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":496968,"byte_end":497012,"line_start":120,"line_end":120,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497014,"byte_end":497017,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ The resulting imbalance is the first item of the tuple returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497019,"byte_end":497087,"line_start":122,"line_end":122,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497089,"byte_end":497092,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ As much funds up to `value` will be deducted as possible. If this is less than `value`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497094,"byte_end":497185,"line_start":124,"line_end":124,"column_start":2,"column_end":93}},{"value":"/ then a non-zero second item will be returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497187,"byte_end":497236,"line_start":125,"line_end":125,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497463,"byte_end":497484,"line_start":134,"line_end":134,"column_start":5,"column_end":26},"name":"deposit_into_existing","qualname":"::traits::tokens::currency::Currency::deposit_into_existing","value":"pub fn deposit_into_existing(&AccountId, Self::Balance)\n-> Result<Self::PositiveImbalance, DispatchError>","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Mints `value` to the free balance of `who`.","sig":null,"attributes":[{"value":"/ Mints `value` to the free balance of `who`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497340,"byte_end":497387,"line_start":131,"line_end":131,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497389,"byte_end":497392,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ If `who` doesn't exist, nothing is done and an Err returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497394,"byte_end":497458,"line_start":133,"line_end":133,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497693,"byte_end":497714,"line_start":141,"line_end":141,"column_start":5,"column_end":26},"name":"resolve_into_existing","qualname":"::traits::tokens::currency::Currency::resolve_into_existing","value":"pub fn resolve_into_existing(&AccountId, Self::NegativeImbalance)\n-> Result<(), Self::NegativeImbalance>","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Similar to deposit_creating, only accepts a `NegativeImbalance` and returns nothing on\n success.\n","sig":null,"attributes":[{"value":"/ Similar to deposit_creating, only accepts a `NegativeImbalance` and returns nothing on","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497584,"byte_end":497674,"line_start":139,"line_end":139,"column_start":2,"column_end":92}},{"value":"/ success.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497676,"byte_end":497688,"line_start":140,"line_end":140,"column_start":2,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498083,"byte_end":498099,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"deposit_creating","qualname":"::traits::tokens::currency::Currency::deposit_creating","value":"pub fn deposit_creating(&AccountId, Self::Balance) -> Self::PositiveImbalance","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Adds up to `value` to the free balance of `who`. If `who` doesn't exist, it is created.","sig":null,"attributes":[{"value":"/ Adds up to `value` to the free balance of `who`. If `who` doesn't exist, it is created.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":497965,"byte_end":498056,"line_start":152,"line_end":152,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498058,"byte_end":498061,"line_start":153,"line_end":153,"column_start":2,"column_end":5}},{"value":"/ Infallible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498063,"byte_end":498078,"line_start":154,"line_end":154,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498286,"byte_end":498302,"line_start":162,"line_end":162,"column_start":5,"column_end":21},"name":"resolve_creating","qualname":"::traits::tokens::currency::Currency::resolve_creating","value":"pub fn resolve_creating(&AccountId, Self::NegativeImbalance)","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Similar to deposit_creating, only accepts a `NegativeImbalance` and returns nothing on\n success.\n","sig":null,"attributes":[{"value":"/ Similar to deposit_creating, only accepts a `NegativeImbalance` and returns nothing on","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498177,"byte_end":498267,"line_start":160,"line_end":160,"column_start":2,"column_end":92}},{"value":"/ success.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498269,"byte_end":498281,"line_start":161,"line_end":161,"column_start":2,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498872,"byte_end":498880,"line_start":178,"line_end":178,"column_start":5,"column_end":13},"name":"withdraw","qualname":"::traits::tokens::currency::Currency::withdraw","value":"pub fn withdraw(&AccountId, Self::Balance, WithdrawReasons,\n                ExistenceRequirement)\n-> Result<Self::NegativeImbalance, DispatchError>","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Removes some free balance from `who` account for `reason` if possible. If `liveness` is\n `KeepAlive`, then no less than `ExistentialDeposit` must be left remaining.","sig":null,"attributes":[{"value":"/ Removes some free balance from `who` account for `reason` if possible. If `liveness` is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498445,"byte_end":498536,"line_start":170,"line_end":170,"column_start":2,"column_end":93}},{"value":"/ `KeepAlive`, then no less than `ExistentialDeposit` must be left remaining.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498538,"byte_end":498617,"line_start":171,"line_end":171,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498619,"byte_end":498622,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ This checks any locks, vesting, and liquidity requirements. If the removal is not possible,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498624,"byte_end":498719,"line_start":173,"line_end":173,"column_start":2,"column_end":97}},{"value":"/ then it returns `Err`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498721,"byte_end":498747,"line_start":174,"line_end":174,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498749,"byte_end":498752,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ If the operation is successful, this will return `Ok` with a `NegativeImbalance` whose value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498754,"byte_end":498850,"line_start":176,"line_end":176,"column_start":2,"column_end":98}},{"value":"/ is `value`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":498852,"byte_end":498867,"line_start":177,"line_end":177,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499139,"byte_end":499145,"line_start":186,"line_end":186,"column_start":5,"column_end":11},"name":"settle","qualname":"::traits::tokens::currency::Currency::settle","value":"pub fn settle(&AccountId, Self::PositiveImbalance, WithdrawReasons,\n              ExistenceRequirement) -> Result<(), Self::PositiveImbalance>","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Similar to withdraw, only accepts a `PositiveImbalance` and returns nothing on success.\n","sig":null,"attributes":[{"value":"/ Similar to withdraw, only accepts a `PositiveImbalance` and returns nothing on success.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499043,"byte_end":499134,"line_start":185,"line_end":185,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499719,"byte_end":499739,"line_start":204,"line_end":204,"column_start":5,"column_end":25},"name":"make_free_balance_be","qualname":"::traits::tokens::currency::Currency::make_free_balance_be","value":"pub fn make_free_balance_be(&AccountId, Self::Balance)\n-> SignedImbalance<Self::Balance, Self::PositiveImbalance>","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":" Ensure an account's free balance equals some value; this will create the account\n if needed.","sig":null,"attributes":[{"value":"/ Ensure an account's free balance equals some value; this will create the account","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499464,"byte_end":499548,"line_start":199,"line_end":199,"column_start":2,"column_end":86}},{"value":"/ if needed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499550,"byte_end":499564,"line_start":200,"line_end":200,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499566,"byte_end":499569,"line_start":201,"line_end":201,"column_start":2,"column_end":5}},{"value":"/ Returns a signed imbalance and status to indicate if the account was successfully updated or update","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499571,"byte_end":499674,"line_start":202,"line_end":202,"column_start":2,"column_end":105}},{"value":"/ has led to killing of the account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency.rs","byte_start":499676,"byte_end":499714,"line_start":203,"line_end":203,"column_start":2,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":2799},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imbalance","qualname":"::traits::tokens::imbalance","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","parent":null,"children":[{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2851},{"krate":0,"index":2887},{"krate":0,"index":2901},{"krate":0,"index":2904},{"krate":0,"index":2907},{"krate":0,"index":2910}],"decl_id":null,"docs":" The imbalance trait type and its associates, which handles keeps everything adding up properly\n with unbalanced operations.\n","sig":null,"attributes":[{"value":"/ The imbalance trait type and its associates, which handles keeps everything adding up properly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":507906,"byte_end":508004,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ with unbalanced operations.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508005,"byte_end":508036,"line_start":19,"line_end":19,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2834},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/split_two_ways.rs","byte_start":514947,"byte_end":514959,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"SplitTwoWays","qualname":"::traits::tokens::imbalance::split_two_ways::SplitTwoWays","value":"","parent":null,"children":[],"decl_id":null,"docs":" Split an unbalanced amount two ways between a common divisor.\n","sig":null,"attributes":[{"value":"/ Split an unbalanced amount two ways between a common divisor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/split_two_ways.rs","byte_start":514870,"byte_end":514935,"line_start":25,"line_end":25,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2874},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":516759,"byte_end":516767,"line_start":29,"line_end":29,"column_start":2,"column_end":10},"name":"Positive","qualname":"::traits::tokens::imbalance::signed_imbalance::SignedImbalance::Positive","value":"SignedImbalance::Positive(PositiveImbalance)","parent":{"krate":0,"index":2871},"children":[],"decl_id":null,"docs":" A positive imbalance (funds have been created but none destroyed).\n","sig":null,"attributes":[{"value":"/ A positive imbalance (funds have been created but none destroyed).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":516687,"byte_end":516757,"line_start":28,"line_end":28,"column_start":2,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2877},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":516861,"byte_end":516869,"line_start":31,"line_end":31,"column_start":2,"column_end":10},"name":"Negative","qualname":"::traits::tokens::imbalance::signed_imbalance::SignedImbalance::Negative","value":"SignedImbalance::Negative(PositiveImbalance::Opposite)","parent":{"krate":0,"index":2871},"children":[],"decl_id":null,"docs":" A negative imbalance (funds have been destroyed but none created).\n","sig":null,"attributes":[{"value":"/ A negative imbalance (funds have been destroyed but none created).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":516789,"byte_end":516859,"line_start":30,"line_end":30,"column_start":2,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":516633,"byte_end":516648,"line_start":27,"line_end":27,"column_start":10,"column_end":25},"name":"SignedImbalance","qualname":"::traits::tokens::imbalance::signed_imbalance::SignedImbalance","value":"pub enum SignedImbalance<B, PositiveImbalance: Imbalance<B>> {\n    Positive(PositiveImbalance),\n    Negative(PositiveImbalance::Opposite),\n}","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2877}],"decl_id":null,"docs":" Either a positive or a negative imbalance.\n","sig":null,"attributes":[{"value":"/ Either a positive or a negative imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":516577,"byte_end":516623,"line_start":26,"line_end":26,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517159,"byte_end":517163,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"name":"zero","qualname":"<SignedImbalance<B, P>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Positive` instance of `Self` whose value is zero.\n","sig":null,"attributes":[{"value":"/ Create a `Positive` instance of `Self` whose value is zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517087,"byte_end":517150,"line_start":39,"line_end":39,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517313,"byte_end":517322,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"name":"drop_zero","qualname":"<SignedImbalance<B, P>>::drop_zero","value":"pub fn drop_zero(Self) -> Result<(), Self>","parent":null,"children":[],"decl_id":null,"docs":" Drop `Self` if and only if it is equal to zero. Return `Err` with `Self` if not.\n","sig":null,"attributes":[{"value":"/ Drop `Self` if and only if it is equal to zero. Return `Err` with `Self` if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517220,"byte_end":517304,"line_start":44,"line_end":44,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517637,"byte_end":517642,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"merge","qualname":"<SignedImbalance<B, P>>::merge","value":"pub fn merge(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume `self` and an `other` to return a new instance that combines\n both.\n","sig":null,"attributes":[{"value":"/ Consume `self` and an `other` to return a new instance that combines","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517545,"byte_end":517617,"line_start":52,"line_end":52,"column_start":2,"column_end":74}},{"value":"/ both.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517619,"byte_end":517628,"line_start":53,"line_end":53,"column_start":2,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":2891},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519438,"byte_end":519450,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"OnUnbalanced","qualname":"::traits::tokens::imbalance::on_unbalanced::OnUnbalanced","value":"OnUnbalanced<Imbalance: TryDrop>","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2897},{"krate":0,"index":2898}],"decl_id":null,"docs":" Handler for when some currency \"account\" decreased in balance for\n some reason.","sig":null,"attributes":[{"value":"/ Handler for when some currency \"account\" decreased in balance for","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519065,"byte_end":519134,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ some reason.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519135,"byte_end":519151,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519152,"byte_end":519155,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The only reason at present for an increase would be for validator rewards, but","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519156,"byte_end":519238,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ there may be other reasons in the future or for other chains.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519239,"byte_end":519304,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519305,"byte_end":519308,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Reasons for decreases include:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519309,"byte_end":519343,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519344,"byte_end":519347,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ - Someone got slashed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519348,"byte_end":519374,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ - Someone paid for a transaction to be included.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519375,"byte_end":519427,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519688,"byte_end":519702,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"on_unbalanceds","qualname":"::traits::tokens::imbalance::on_unbalanced::OnUnbalanced::on_unbalanceds","value":"pub fn on_unbalanceds<B, impl Iterator<Item = Imbalance>: Iterator<Item =\n                      Imbalance>>(impl Iterator<Item = Imbalance>) where\nImbalance: crate::traits::Imbalance<B>","parent":{"krate":0,"index":2891},"children":[],"decl_id":null,"docs":" Handler for some imbalances. The different imbalances might have different origins or\n meanings, dependent on the context. Will default to simply calling on_unbalanced for all\n of them. Infallible.\n","sig":null,"attributes":[{"value":"/ Handler for some imbalances. The different imbalances might have different origins or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519474,"byte_end":519563,"line_start":33,"line_end":33,"column_start":2,"column_end":91}},{"value":"/ meanings, dependent on the context. Will default to simply calling on_unbalanced for all","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519565,"byte_end":519657,"line_start":34,"line_end":34,"column_start":2,"column_end":94}},{"value":"/ of them. Infallible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519659,"byte_end":519683,"line_start":35,"line_end":35,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519920,"byte_end":519933,"line_start":41,"line_end":41,"column_start":5,"column_end":18},"name":"on_unbalanced","qualname":"::traits::tokens::imbalance::on_unbalanced::OnUnbalanced::on_unbalanced","value":"pub fn on_unbalanced(Imbalance)","parent":{"krate":0,"index":2891},"children":[],"decl_id":null,"docs":" Handler for some imbalance. Infallible.\n","sig":null,"attributes":[{"value":"/ Handler for some imbalance. Infallible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":519872,"byte_end":519915,"line_start":40,"line_end":40,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":520140,"byte_end":520161,"line_start":47,"line_end":47,"column_start":5,"column_end":26},"name":"on_nonzero_unbalanced","qualname":"::traits::tokens::imbalance::on_unbalanced::OnUnbalanced::on_nonzero_unbalanced","value":"pub fn on_nonzero_unbalanced(Imbalance)","parent":{"krate":0,"index":2891},"children":[],"decl_id":null,"docs":" Actually handle a non-zero imbalance. You probably want to implement this rather than\n `on_unbalanced`.\n","sig":null,"attributes":[{"value":"/ Actually handle a non-zero imbalance. You probably want to implement this rather than","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":520024,"byte_end":520113,"line_start":45,"line_end":45,"column_start":2,"column_end":91}},{"value":"/ `on_unbalanced`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/on_unbalanced.rs","byte_start":520115,"byte_end":520135,"line_start":46,"line_end":46,"column_start":2,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2910},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509826,"byte_end":509835,"line_start":61,"line_end":61,"column_start":11,"column_end":20},"name":"Imbalance","qualname":"::traits::tokens::imbalance::Imbalance","value":"Imbalance<Balance>: Sized + TryDrop + Default","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927}],"decl_id":null,"docs":" A trait for a not-quite Linear Type that tracks an imbalance.","sig":null,"attributes":[{"value":"/ A trait for a not-quite Linear Type that tracks an imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508326,"byte_end":508391,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508392,"byte_end":508395,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Functions that alter account balances return an object of this trait to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508396,"byte_end":508471,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ express how much account balances have been altered in aggregate. If","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508472,"byte_end":508544,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ dropped, the currency system will take some default steps to deal with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508545,"byte_end":508619,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ the imbalance (`balances` module simply reduces or increases its","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508620,"byte_end":508688,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/ total issuance). Your module should generally handle it in some way,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508689,"byte_end":508761,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/ good practice is to do so in a configurable manner using an","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508762,"byte_end":508825,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ `OnUnbalanced` type for each situation in which your module needs to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508826,"byte_end":508898,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ handle an imbalance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508899,"byte_end":508923,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508924,"byte_end":508927,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Imbalances can either be Positive (funds were added somewhere without","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":508928,"byte_end":509001,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ being subtracted elsewhere - e.g. a reward) or Negative (funds deducted","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509002,"byte_end":509077,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ somewhere without an equal and opposite addition - e.g. a slash or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509078,"byte_end":509148,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ system fee payment).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509149,"byte_end":509173,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509174,"byte_end":509177,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Since they are unsigned, the actual type is always Positive or Negative.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509178,"byte_end":509254,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ The trait makes no distinction except to define the `Opposite` type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509255,"byte_end":509327,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509328,"byte_end":509331,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ New instances of zero value can be created (`zero`) and destroyed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509332,"byte_end":509401,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ (`drop_zero`).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509402,"byte_end":509420,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509421,"byte_end":509424,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Existing instances can be `split` and merged either consuming `self` with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509425,"byte_end":509502,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ `merge` or mutating `self` with `subsume`. If the target is an `Option`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509503,"byte_end":509579,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ then `maybe_merge` and `maybe_subsume` might work better. Instances can","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509580,"byte_end":509655,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ also be `offset` with an `Opposite` that is less than or equal to in value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509656,"byte_end":509735,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509736,"byte_end":509739,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ You can always retrieve the raw balance value using `peek`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509740,"byte_end":509803,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"must_use","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509804,"byte_end":509815,"line_start":60,"line_end":60,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":2912},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509937,"byte_end":509945,"line_start":63,"line_end":63,"column_start":7,"column_end":15},"name":"Opposite","qualname":"::traits::tokens::imbalance::Imbalance::Opposite","value":"type Opposite: Imbalance<Balance>;","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" The oppositely imbalanced type. They come in pairs.\n","sig":null,"attributes":[{"value":"/ The oppositely imbalanced type. They come in pairs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509875,"byte_end":509930,"line_start":62,"line_end":62,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510032,"byte_end":510036,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"zero","qualname":"::traits::tokens::imbalance::Imbalance::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" The zero imbalance. Can be destroyed with `drop_zero`.\n","sig":null,"attributes":[{"value":"/ The zero imbalance. Can be destroyed with `drop_zero`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509969,"byte_end":510027,"line_start":65,"line_end":65,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510126,"byte_end":510135,"line_start":69,"line_end":69,"column_start":5,"column_end":14},"name":"drop_zero","qualname":"::traits::tokens::imbalance::Imbalance::drop_zero","value":"pub fn drop_zero(Self) -> Result<(), Self>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Drop an instance cleanly. Only works if its `self.value()` is zero.\n","sig":null,"attributes":[{"value":"/ Drop an instance cleanly. Only works if its `self.value()` is zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510050,"byte_end":510121,"line_start":68,"line_end":68,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510316,"byte_end":510321,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"split","qualname":"::traits::tokens::imbalance::Imbalance::split","value":"pub fn split(Self, Balance) -> (Self, Self)","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume `self` and return two independent instances; the first\n is guaranteed to be at most `amount` and the second will be the remainder.\n","sig":null,"attributes":[{"value":"/ Consume `self` and return two independent instances; the first","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510165,"byte_end":510231,"line_start":71,"line_end":71,"column_start":2,"column_end":68}},{"value":"/ is guaranteed to be at most `amount` and the second will be the remainder.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510233,"byte_end":510311,"line_start":72,"line_end":72,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510682,"byte_end":510688,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"ration","qualname":"::traits::tokens::imbalance::Imbalance::ration","value":"pub fn ration(Self, u32, u32) -> (Self, Self) where Balance: From<u32> +\nSaturating + Div<Output = Balance>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume `self` and return two independent instances; the amounts returned will be in\n approximately the same ratio as `first`:`second`.","sig":null,"attributes":[{"value":"/ Consume `self` and return two independent instances; the amounts returned will be in","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510364,"byte_end":510452,"line_start":75,"line_end":75,"column_start":2,"column_end":90}},{"value":"/ approximately the same ratio as `first`:`second`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510454,"byte_end":510507,"line_start":76,"line_end":76,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510509,"byte_end":510512,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ NOTE: This requires up to `first + second` room for a multiply, and `first + second` should","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510514,"byte_end":510609,"line_start":78,"line_end":78,"column_start":2,"column_end":97}},{"value":"/ fit into a `u32`. Overflow will safely saturate in both cases.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":510611,"byte_end":510677,"line_start":79,"line_end":79,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511207,"byte_end":511218,"line_start":93,"line_end":93,"column_start":5,"column_end":16},"name":"split_merge","qualname":"::traits::tokens::imbalance::Imbalance::split_merge","value":"pub fn split_merge(Self, Balance, (Self, Self)) -> (Self, Self)","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume self and add its two components, defined by the first component's balance,\n element-wise to two pre-existing Imbalances.","sig":null,"attributes":[{"value":"/ Consume self and add its two components, defined by the first component's balance,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511006,"byte_end":511092,"line_start":89,"line_end":89,"column_start":2,"column_end":88}},{"value":"/ element-wise to two pre-existing Imbalances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511094,"byte_end":511142,"line_start":90,"line_end":90,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511144,"byte_end":511147,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ A convenient replacement for `split` and `merge`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511149,"byte_end":511202,"line_start":92,"line_end":92,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511561,"byte_end":511573,"line_start":102,"line_end":102,"column_start":5,"column_end":17},"name":"ration_merge","qualname":"::traits::tokens::imbalance::Imbalance::ration_merge","value":"pub fn ration_merge(Self, u32, u32, (Self, Self)) -> (Self, Self) where\nBalance: From<u32> + Saturating + Div<Output = Balance>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume self and add its two components, defined by the ratio `first`:`second`,\n element-wise to two pre-existing Imbalances.","sig":null,"attributes":[{"value":"/ Consume self and add its two components, defined by the ratio `first`:`second`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511363,"byte_end":511446,"line_start":98,"line_end":98,"column_start":2,"column_end":85}},{"value":"/ element-wise to two pre-existing Imbalances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511448,"byte_end":511496,"line_start":99,"line_end":99,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511498,"byte_end":511501,"line_start":100,"line_end":100,"column_start":2,"column_end":5}},{"value":"/ A convenient replacement for `split` and `merge`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511503,"byte_end":511556,"line_start":101,"line_end":101,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512006,"byte_end":512022,"line_start":113,"line_end":113,"column_start":5,"column_end":21},"name":"split_merge_into","qualname":"::traits::tokens::imbalance::Imbalance::split_merge_into","value":"pub fn split_merge_into(Self, Balance, &mut (Self, Self))","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume self and add its two components, defined by the first component's balance,\n element-wise into two pre-existing Imbalance refs.","sig":null,"attributes":[{"value":"/ Consume self and add its two components, defined by the first component's balance,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511797,"byte_end":511883,"line_start":109,"line_end":109,"column_start":2,"column_end":88}},{"value":"/ element-wise into two pre-existing Imbalance refs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511885,"byte_end":511939,"line_start":110,"line_end":110,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511941,"byte_end":511944,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ A convenient replacement for `split` and `subsume`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":511946,"byte_end":512001,"line_start":112,"line_end":112,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512359,"byte_end":512376,"line_start":123,"line_end":123,"column_start":5,"column_end":22},"name":"ration_merge_into","qualname":"::traits::tokens::imbalance::Imbalance::ration_merge_into","value":"pub fn ration_merge_into(Self, u32, u32, &mut (Self, Self)) where\nBalance: From<u32> + Saturating + Div<Output = Balance>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume self and add its two components, defined by the ratio `first`:`second`,\n element-wise to two pre-existing Imbalances.","sig":null,"attributes":[{"value":"/ Consume self and add its two components, defined by the ratio `first`:`second`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512161,"byte_end":512244,"line_start":119,"line_end":119,"column_start":2,"column_end":85}},{"value":"/ element-wise to two pre-existing Imbalances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512246,"byte_end":512294,"line_start":120,"line_end":120,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512296,"byte_end":512299,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ A convenient replacement for `split` and `merge`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512301,"byte_end":512354,"line_start":122,"line_end":122,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512682,"byte_end":512687,"line_start":133,"line_end":133,"column_start":5,"column_end":10},"name":"merge","qualname":"::traits::tokens::imbalance::Imbalance::merge","value":"pub fn merge(Self, Self) -> Self","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume `self` and an `other` to return a new instance that combines\n both.\n","sig":null,"attributes":[{"value":"/ Consume `self` and an `other` to return a new instance that combines","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512594,"byte_end":512666,"line_start":131,"line_end":131,"column_start":2,"column_end":74}},{"value":"/ both.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512668,"byte_end":512677,"line_start":132,"line_end":132,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512839,"byte_end":512849,"line_start":137,"line_end":137,"column_start":5,"column_end":15},"name":"merge_into","qualname":"::traits::tokens::imbalance::Imbalance::merge_into","value":"pub fn merge_into(Self, &mut Self)","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume self to mutate `other` so that it combines both. Just like `subsume`, only with\n reversed arguments.\n","sig":null,"attributes":[{"value":"/ Consume self to mutate `other` so that it combines both. Just like `subsume`, only with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512718,"byte_end":512809,"line_start":135,"line_end":135,"column_start":2,"column_end":93}},{"value":"/ reversed arguments.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512811,"byte_end":512834,"line_start":136,"line_end":136,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512997,"byte_end":513008,"line_start":143,"line_end":143,"column_start":5,"column_end":16},"name":"maybe_merge","qualname":"::traits::tokens::imbalance::Imbalance::maybe_merge","value":"pub fn maybe_merge(Self, Option<Self>) -> Self","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume `self` and maybe an `other` to return a new instance that combines\n both.\n","sig":null,"attributes":[{"value":"/ Consume `self` and maybe an `other` to return a new instance that combines","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512903,"byte_end":512981,"line_start":141,"line_end":141,"column_start":2,"column_end":80}},{"value":"/ both.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":512983,"byte_end":512992,"line_start":142,"line_end":142,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513207,"byte_end":513214,"line_start":153,"line_end":153,"column_start":5,"column_end":12},"name":"subsume","qualname":"::traits::tokens::imbalance::Imbalance::subsume","value":"pub fn subsume(&mut Self, Self)","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume an `other` to mutate `self` into a new instance that combines\n both.\n","sig":null,"attributes":[{"value":"/ Consume an `other` to mutate `self` into a new instance that combines","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513118,"byte_end":513191,"line_start":151,"line_end":151,"column_start":2,"column_end":75}},{"value":"/ both.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513193,"byte_end":513202,"line_start":152,"line_end":152,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513337,"byte_end":513350,"line_start":157,"line_end":157,"column_start":5,"column_end":18},"name":"maybe_subsume","qualname":"::traits::tokens::imbalance::Imbalance::maybe_subsume","value":"pub fn maybe_subsume(&mut Self, Option<Self>)","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Maybe consume an `other` to mutate `self` into a new instance that combines\n both.\n","sig":null,"attributes":[{"value":"/ Maybe consume an `other` to mutate `self` into a new instance that combines","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513242,"byte_end":513321,"line_start":155,"line_end":155,"column_start":2,"column_end":81}},{"value":"/ both.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513323,"byte_end":513332,"line_start":156,"line_end":156,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513797,"byte_end":513803,"line_start":170,"line_end":170,"column_start":5,"column_end":11},"name":"offset","qualname":"::traits::tokens::imbalance::Imbalance::offset","value":"pub fn offset(Self, Self::Opposite) -> SameOrOther<Self, Self::Opposite>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Consume self and along with an opposite counterpart to return\n a combined result.","sig":null,"attributes":[{"value":"/ Consume self and along with an opposite counterpart to return","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513440,"byte_end":513505,"line_start":163,"line_end":163,"column_start":2,"column_end":67}},{"value":"/ a combined result.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513507,"byte_end":513529,"line_start":164,"line_end":164,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513531,"byte_end":513534,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok` along with a new instance of `Self` if this instance has a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513536,"byte_end":513611,"line_start":166,"line_end":166,"column_start":2,"column_end":77}},{"value":"/ greater value than the `other`. Otherwise returns `Err` with an instance of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513613,"byte_end":513692,"line_start":167,"line_end":167,"column_start":2,"column_end":81}},{"value":"/ the `Opposite`. In both cases the value represents the combination of `self`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513694,"byte_end":513774,"line_start":168,"line_end":168,"column_start":2,"column_end":82}},{"value":"/ and `other`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513776,"byte_end":513792,"line_start":169,"line_end":169,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513903,"byte_end":513907,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"peek","qualname":"::traits::tokens::imbalance::Imbalance::peek","value":"pub fn peek(&Self) -> Balance","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" The raw value of self.\n","sig":null,"attributes":[{"value":"/ The raw value of self.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":513872,"byte_end":513898,"line_start":172,"line_end":172,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4499},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521399,"byte_end":521406,"line_start":30,"line_end":30,"column_start":2,"column_end":9},"name":"NoFunds","qualname":"::traits::tokens::misc::WithdrawConsequence::NoFunds","value":"WithdrawConsequence::NoFunds","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" Withdraw could not happen since the amount to be withdrawn is less than the total funds in\n the account.\n","sig":null,"attributes":[{"value":"/ Withdraw could not happen since the amount to be withdrawn is less than the total funds in","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521285,"byte_end":521379,"line_start":28,"line_end":28,"column_start":2,"column_end":96}},{"value":"/ the account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521381,"byte_end":521397,"line_start":29,"line_end":29,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4501},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521560,"byte_end":521568,"line_start":33,"line_end":33,"column_start":2,"column_end":10},"name":"WouldDie","qualname":"::traits::tokens::misc::WithdrawConsequence::WouldDie","value":"WithdrawConsequence::WouldDie","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" The withdraw would mean the account dying when it needs to exist (usually because it is a\n provider and there are consumer references on it).\n","sig":null,"attributes":[{"value":"/ The withdraw would mean the account dying when it needs to exist (usually because it is a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521409,"byte_end":521502,"line_start":31,"line_end":31,"column_start":2,"column_end":95}},{"value":"/ provider and there are consumer references on it).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521504,"byte_end":521558,"line_start":32,"line_end":32,"column_start":2,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4503},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521686,"byte_end":521698,"line_start":36,"line_end":36,"column_start":2,"column_end":14},"name":"UnknownAsset","qualname":"::traits::tokens::misc::WithdrawConsequence::UnknownAsset","value":"WithdrawConsequence::UnknownAsset","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" The asset is unknown. Usually because an `AssetId` has been presented which doesn't exist\n on the system.\n","sig":null,"attributes":[{"value":"/ The asset is unknown. Usually because an `AssetId` has been presented which doesn't exist","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521571,"byte_end":521664,"line_start":34,"line_end":34,"column_start":2,"column_end":95}},{"value":"/ on the system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521666,"byte_end":521684,"line_start":35,"line_end":35,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4505},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521818,"byte_end":521827,"line_start":39,"line_end":39,"column_start":2,"column_end":11},"name":"Underflow","qualname":"::traits::tokens::misc::WithdrawConsequence::Underflow","value":"WithdrawConsequence::Underflow","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" There has been an underflow in the system. This is indicative of a corrupt state and\n likely unrecoverable.\n","sig":null,"attributes":[{"value":"/ There has been an underflow in the system. This is indicative of a corrupt state and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521701,"byte_end":521789,"line_start":37,"line_end":37,"column_start":2,"column_end":90}},{"value":"/ likely unrecoverable.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521791,"byte_end":521816,"line_start":38,"line_end":38,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4507},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521946,"byte_end":521954,"line_start":42,"line_end":42,"column_start":2,"column_end":10},"name":"Overflow","qualname":"::traits::tokens::misc::WithdrawConsequence::Overflow","value":"WithdrawConsequence::Overflow","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" There has been an overflow in the system. This is indicative of a corrupt state and\n likely unrecoverable.\n","sig":null,"attributes":[{"value":"/ There has been an overflow in the system. This is indicative of a corrupt state and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521830,"byte_end":521917,"line_start":40,"line_end":40,"column_start":2,"column_end":89}},{"value":"/ likely unrecoverable.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521919,"byte_end":521944,"line_start":41,"line_end":41,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4509},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522033,"byte_end":522039,"line_start":44,"line_end":44,"column_start":2,"column_end":8},"name":"Frozen","qualname":"::traits::tokens::misc::WithdrawConsequence::Frozen","value":"WithdrawConsequence::Frozen","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" Not enough of the funds in the account are unavailable for withdrawal.\n","sig":null,"attributes":[{"value":"/ Not enough of the funds in the account are unavailable for withdrawal.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521957,"byte_end":522031,"line_start":43,"line_end":43,"column_start":2,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4511},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522176,"byte_end":522189,"line_start":47,"line_end":47,"column_start":2,"column_end":15},"name":"ReducedToZero","qualname":"::traits::tokens::misc::WithdrawConsequence::ReducedToZero","value":"WithdrawConsequence::ReducedToZero(Balance)","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" Account balance would reduce to zero, potentially destroying it. The parameter is the\n amount of balance which is destroyed.\n","sig":null,"attributes":[{"value":"/ Account balance would reduce to zero, potentially destroying it. The parameter is the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522042,"byte_end":522131,"line_start":45,"line_end":45,"column_start":2,"column_end":91}},{"value":"/ amount of balance which is destroyed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522133,"byte_end":522174,"line_start":46,"line_end":46,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4514},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522238,"byte_end":522245,"line_start":49,"line_end":49,"column_start":2,"column_end":9},"name":"Success","qualname":"::traits::tokens::misc::WithdrawConsequence::Success","value":"WithdrawConsequence::Success","parent":{"krate":0,"index":4497},"children":[],"decl_id":null,"docs":" Account continued in existence.\n","sig":null,"attributes":[{"value":"/ Account continued in existence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522201,"byte_end":522236,"line_start":48,"line_end":48,"column_start":2,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":4497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521253,"byte_end":521272,"line_start":27,"line_end":27,"column_start":10,"column_end":29},"name":"WithdrawConsequence","qualname":"::traits::tokens::misc::WithdrawConsequence","value":"pub enum WithdrawConsequence<Balance> {\n    NoFunds,\n    WouldDie,\n    UnknownAsset,\n    Underflow,\n    Overflow,\n    Frozen,\n    ReducedToZero(Balance),\n    Success,\n}","parent":null,"children":[{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4511},{"krate":0,"index":4514}],"decl_id":null,"docs":" One of a number of consequences of withdrawing a fungible from an account.\n","sig":null,"attributes":[{"value":"/ One of a number of consequences of withdrawing a fungible from an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":521127,"byte_end":521205,"line_start":25,"line_end":25,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522449,"byte_end":522460,"line_start":55,"line_end":55,"column_start":9,"column_end":20},"name":"into_result","qualname":"<WithdrawConsequence<Balance>>::into_result","value":"pub fn into_result(Self) -> Result<Balance, TokenError>","parent":null,"children":[],"decl_id":null,"docs":" Convert the type into a `Result` with `TokenError` as the error or the additional `Balance`\n by which the account will be reduced.\n","sig":null,"attributes":[{"value":"/ Convert the type into a `Result` with `TokenError` as the error or the additional `Balance`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522302,"byte_end":522397,"line_start":53,"line_end":53,"column_start":2,"column_end":97}},{"value":"/ by which the account will be reduced.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522399,"byte_end":522440,"line_start":54,"line_end":54,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4533},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523237,"byte_end":523249,"line_start":76,"line_end":76,"column_start":2,"column_end":14},"name":"BelowMinimum","qualname":"::traits::tokens::misc::DepositConsequence::BelowMinimum","value":"DepositConsequence::BelowMinimum","parent":{"krate":0,"index":4532},"children":[],"decl_id":null,"docs":" Deposit couldn't happen due to the amount being too low. This is usually because the\n account doesn't yet exist and the deposit wouldn't bring it to at least the minimum needed\n for existance.\n","sig":null,"attributes":[{"value":"/ Deposit couldn't happen due to the amount being too low. This is usually because the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523031,"byte_end":523119,"line_start":73,"line_end":73,"column_start":2,"column_end":90}},{"value":"/ account doesn't yet exist and the deposit wouldn't bring it to at least the minimum needed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523121,"byte_end":523215,"line_start":74,"line_end":74,"column_start":2,"column_end":96}},{"value":"/ for existance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523217,"byte_end":523235,"line_start":75,"line_end":75,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4535},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523394,"byte_end":523406,"line_start":79,"line_end":79,"column_start":2,"column_end":14},"name":"CannotCreate","qualname":"::traits::tokens::misc::DepositConsequence::CannotCreate","value":"DepositConsequence::CannotCreate","parent":{"krate":0,"index":4532},"children":[],"decl_id":null,"docs":" Deposit cannot happen since the account cannot be created (usually because it's a consumer\n and there exists no provider reference).\n","sig":null,"attributes":[{"value":"/ Deposit cannot happen since the account cannot be created (usually because it's a consumer","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523252,"byte_end":523346,"line_start":77,"line_end":77,"column_start":2,"column_end":96}},{"value":"/ and there exists no provider reference).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523348,"byte_end":523392,"line_start":78,"line_end":78,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4537},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523524,"byte_end":523536,"line_start":82,"line_end":82,"column_start":2,"column_end":14},"name":"UnknownAsset","qualname":"::traits::tokens::misc::DepositConsequence::UnknownAsset","value":"DepositConsequence::UnknownAsset","parent":{"krate":0,"index":4532},"children":[],"decl_id":null,"docs":" The asset is unknown. Usually because an `AssetId` has been presented which doesn't exist\n on the system.\n","sig":null,"attributes":[{"value":"/ The asset is unknown. Usually because an `AssetId` has been presented which doesn't exist","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523409,"byte_end":523502,"line_start":80,"line_end":80,"column_start":2,"column_end":95}},{"value":"/ on the system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523504,"byte_end":523522,"line_start":81,"line_end":81,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4539},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523740,"byte_end":523748,"line_start":86,"line_end":86,"column_start":2,"column_end":10},"name":"Overflow","qualname":"::traits::tokens::misc::DepositConsequence::Overflow","value":"DepositConsequence::Overflow","parent":{"krate":0,"index":4532},"children":[],"decl_id":null,"docs":" An overflow would occur. This is practically unexpected, but could happen in test systems\n with extremely small balance types or balances that approach the max value of the balance\n type.\n","sig":null,"attributes":[{"value":"/ An overflow would occur. This is practically unexpected, but could happen in test systems","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523539,"byte_end":523632,"line_start":83,"line_end":83,"column_start":2,"column_end":95}},{"value":"/ with extremely small balance types or balances that approach the max value of the balance","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523634,"byte_end":523727,"line_start":84,"line_end":84,"column_start":2,"column_end":95}},{"value":"/ type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523729,"byte_end":523738,"line_start":85,"line_end":85,"column_start":2,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4541},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523788,"byte_end":523795,"line_start":88,"line_end":88,"column_start":2,"column_end":9},"name":"Success","qualname":"::traits::tokens::misc::DepositConsequence::Success","value":"DepositConsequence::Success","parent":{"krate":0,"index":4532},"children":[],"decl_id":null,"docs":" Account continued in existence.\n","sig":null,"attributes":[{"value":"/ Account continued in existence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523751,"byte_end":523786,"line_start":87,"line_end":87,"column_start":2,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":4532},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523009,"byte_end":523027,"line_start":72,"line_end":72,"column_start":10,"column_end":28},"name":"DepositConsequence","qualname":"::traits::tokens::misc::DepositConsequence","value":"pub enum DepositConsequence {\n    BelowMinimum,\n    CannotCreate,\n    UnknownAsset,\n    Overflow,\n    Success,\n}","parent":null,"children":[{"krate":0,"index":4533},{"krate":0,"index":4535},{"krate":0,"index":4537},{"krate":0,"index":4539},{"krate":0,"index":4541}],"decl_id":null,"docs":" One of a number of consequences of withdrawing a fungible from an account.\n","sig":null,"attributes":[{"value":"/ One of a number of consequences of withdrawing a fungible from an account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522883,"byte_end":522961,"line_start":70,"line_end":70,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523904,"byte_end":523915,"line_start":93,"line_end":93,"column_start":9,"column_end":20},"name":"into_result","qualname":"<DepositConsequence>::into_result","value":"pub fn into_result(Self) -> Result<(), TokenError>","parent":null,"children":[],"decl_id":null,"docs":" Convert the type into a `Result` with `TokenError` as the error.\n","sig":null,"attributes":[{"value":"/ Convert the type into a `Result` with `TokenError` as the error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523827,"byte_end":523895,"line_start":92,"line_end":92,"column_start":2,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4553},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524599,"byte_end":524608,"line_start":112,"line_end":112,"column_start":2,"column_end":11},"name":"KeepAlive","qualname":"::traits::tokens::misc::ExistenceRequirement::KeepAlive","value":"ExistenceRequirement::KeepAlive","parent":{"krate":0,"index":4552},"children":[],"decl_id":null,"docs":" Operation must not result in the account going out of existence.","sig":null,"attributes":[{"value":"/ Operation must not result in the account going out of existence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524354,"byte_end":524422,"line_start":108,"line_end":108,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524424,"byte_end":524427,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ Note this implies that if the account never existed in the first place, then the operation","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524429,"byte_end":524523,"line_start":110,"line_end":110,"column_start":2,"column_end":96}},{"value":"/ may legitimately leave the account unchanged and still non-existent.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524525,"byte_end":524597,"line_start":111,"line_end":111,"column_start":2,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4555},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524672,"byte_end":524682,"line_start":114,"line_end":114,"column_start":2,"column_end":12},"name":"AllowDeath","qualname":"::traits::tokens::misc::ExistenceRequirement::AllowDeath","value":"ExistenceRequirement::AllowDeath","parent":{"krate":0,"index":4552},"children":[],"decl_id":null,"docs":" Operation may result in account going out of existence.\n","sig":null,"attributes":[{"value":"/ Operation may result in account going out of existence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524611,"byte_end":524670,"line_start":113,"line_end":113,"column_start":2,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":4552},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524330,"byte_end":524350,"line_start":107,"line_end":107,"column_start":10,"column_end":30},"name":"ExistenceRequirement","qualname":"::traits::tokens::misc::ExistenceRequirement","value":"pub enum ExistenceRequirement { KeepAlive, AllowDeath, }","parent":null,"children":[{"krate":0,"index":4553},{"krate":0,"index":4555}],"decl_id":null,"docs":" Simple boolean for whether an account needs to be kept in existence.\n","sig":null,"attributes":[{"value":"/ Simple boolean for whether an account needs to be kept in existence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524210,"byte_end":524282,"line_start":105,"line_end":105,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4567},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524868,"byte_end":524872,"line_start":121,"line_end":121,"column_start":2,"column_end":6},"name":"Free","qualname":"::traits::tokens::misc::BalanceStatus::Free","value":"BalanceStatus::Free","parent":{"krate":0,"index":4566},"children":[],"decl_id":null,"docs":" Funds are free, as corresponding to `free` item in Balances.\n","sig":null,"attributes":[{"value":"/ Funds are free, as corresponding to `free` item in Balances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524802,"byte_end":524866,"line_start":120,"line_end":120,"column_start":2,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4569},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524949,"byte_end":524957,"line_start":123,"line_end":123,"column_start":2,"column_end":10},"name":"Reserved","qualname":"::traits::tokens::misc::BalanceStatus::Reserved","value":"BalanceStatus::Reserved","parent":{"krate":0,"index":4566},"children":[],"decl_id":null,"docs":" Funds are reserved, as corresponding to `reserved` item in Balances.\n","sig":null,"attributes":[{"value":"/ Funds are reserved, as corresponding to `reserved` item in Balances.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524875,"byte_end":524947,"line_start":122,"line_end":122,"column_start":2,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":4566},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524785,"byte_end":524798,"line_start":119,"line_end":119,"column_start":10,"column_end":23},"name":"BalanceStatus","qualname":"::traits::tokens::misc::BalanceStatus","value":"pub enum BalanceStatus { Free, Reserved, }","parent":null,"children":[{"krate":0,"index":4567},{"krate":0,"index":4569}],"decl_id":null,"docs":" Status of funds.\n","sig":null,"attributes":[{"value":"/ Status of funds.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":524687,"byte_end":524707,"line_start":117,"line_end":117,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":4609},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525072,"byte_end":525087,"line_start":129,"line_end":129,"column_start":13,"column_end":28},"name":"WithdrawReasons","qualname":"::traits::tokens::misc::WithdrawReasons","value":"WithdrawReasons {  }","parent":null,"children":[{"krate":0,"index":4610}],"decl_id":null,"docs":" Reasons for moving funds out of an account.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4646},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525156,"byte_end":525175,"line_start":131,"line_end":131,"column_start":9,"column_end":28},"name":"TRANSACTION_PAYMENT","qualname":"::traits::tokens::misc::WithdrawReasons::TRANSACTION_PAYMENT","value":"WithdrawReasons","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" In order to pay for (system) transaction costs.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4647},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525236,"byte_end":525244,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"TRANSFER","qualname":"::traits::tokens::misc::WithdrawReasons::TRANSFER","value":"WithdrawReasons","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" In order to transfer ownership.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4648},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525340,"byte_end":525347,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"RESERVE","qualname":"::traits::tokens::misc::WithdrawReasons::RESERVE","value":"WithdrawReasons","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" In order to reserve some funds for a later return or repatriation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4649},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525424,"byte_end":525427,"line_start":137,"line_end":137,"column_start":9,"column_end":12},"name":"FEE","qualname":"::traits::tokens::misc::WithdrawReasons::FEE","value":"WithdrawReasons","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" In order to pay some other (higher-level) fees.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4650},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525511,"byte_end":525514,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"name":"TIP","qualname":"::traits::tokens::misc::WithdrawReasons::TIP","value":"WithdrawReasons","parent":{"krate":0,"index":4645},"children":[],"decl_id":null,"docs":" In order to tip a validator for transaction inclusion.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525915,"byte_end":525921,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"name":"except","qualname":"<WithdrawReasons>::except","value":"pub fn except(WithdrawReasons) -> WithdrawReasons","parent":null,"children":[],"decl_id":null,"docs":" Choose all variants except for `one`.","sig":null,"attributes":[{"value":"/ Choose all variants except for `one`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525559,"byte_end":525600,"line_start":144,"line_end":144,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525602,"byte_end":525605,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525607,"byte_end":525618,"line_start":146,"line_end":146,"column_start":2,"column_end":13}},{"value":"/ # use frame_support::traits::WithdrawReasons;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525620,"byte_end":525669,"line_start":147,"line_end":147,"column_start":2,"column_end":51}},{"value":"/ # fn main() {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525671,"byte_end":525688,"line_start":148,"line_end":148,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525690,"byte_end":525705,"line_start":149,"line_end":149,"column_start":2,"column_end":17}},{"value":"/ \tWithdrawReasons::FEE | WithdrawReasons::TRANSFER | WithdrawReasons::RESERVE | WithdrawReasons::TIP,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525707,"byte_end":525811,"line_start":150,"line_end":150,"column_start":2,"column_end":106}},{"value":"/ \tWithdrawReasons::except(WithdrawReasons::TRANSACTION_PAYMENT),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525813,"byte_end":525880,"line_start":151,"line_end":151,"column_start":2,"column_end":69}},{"value":"/\t);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525882,"byte_end":525888,"line_start":152,"line_end":152,"column_start":2,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525890,"byte_end":525897,"line_start":153,"line_end":153,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525899,"byte_end":525906,"line_start":154,"line_end":154,"column_start":2,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":2961},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526133,"byte_end":526140,"line_start":163,"line_end":163,"column_start":11,"column_end":18},"name":"AssetId","qualname":"::traits::tokens::misc::AssetId","value":"AssetId: FullCodec + Copy + Default + Eq + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Simple amalgamation trait to collect together properties for an AssetId under one roof.\n","sig":null,"attributes":[{"value":"/ Simple amalgamation trait to collect together properties for an AssetId under one roof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526031,"byte_end":526122,"line_start":162,"line_end":162,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":2964},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526361,"byte_end":526368,"line_start":167,"line_end":167,"column_start":11,"column_end":18},"name":"Balance","qualname":"::traits::tokens::misc::Balance","value":"Balance: AtLeast32BitUnsigned + FullCodec + Copy + Default","parent":null,"children":[],"decl_id":null,"docs":" Simple amalgamation trait to collect together properties for a Balance under one roof.\n","sig":null,"attributes":[{"value":"/ Simple amalgamation trait to collect together properties for a Balance under one roof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526260,"byte_end":526350,"line_start":166,"line_end":166,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":3034},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527371,"byte_end":527379,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"Contains","qualname":"::traits::members::Contains","value":"Contains<T>","parent":null,"children":[{"krate":0,"index":3036}],"decl_id":null,"docs":" A trait for querying whether a type can be said to \"contain\" a value.\n","sig":null,"attributes":[{"value":"/ A trait for querying whether a type can be said to \"contain\" a value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527287,"byte_end":527360,"line_start":22,"line_end":22,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527448,"byte_end":527456,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"contains","qualname":"::traits::members::Contains::contains","value":"pub fn contains(&T) -> bool","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Return `true` if this \"contains\" the given value `t`.\n","sig":null,"attributes":[{"value":"/ Return `true` if this \"contains\" the given value `t`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527386,"byte_end":527443,"line_start":24,"line_end":24,"column_start":2,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3037},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527548,"byte_end":527551,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"All","qualname":"::traits::members::All","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Contains` implementation which always returns `true`.\n","sig":null,"attributes":[{"value":"/ A `Contains` implementation which always returns `true`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527476,"byte_end":527536,"line_start":28,"line_end":28,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":3045},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528573,"byte_end":528586,"line_start":75,"line_end":75,"column_start":11,"column_end":24},"name":"SortedMembers","qualname":"::traits::members::SortedMembers","value":"SortedMembers<T: Ord>","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049}],"decl_id":null,"docs":" A trait for a set which can enumerate its members in order.\n","sig":null,"attributes":[{"value":"/ A trait for a set which can enumerate its members in order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528499,"byte_end":528562,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528655,"byte_end":528669,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"name":"sorted_members","qualname":"::traits::members::SortedMembers::sorted_members","value":"pub fn sorted_members() -> Vec<T>","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" Get a vector of all members in the set, ordered.\n","sig":null,"attributes":[{"value":"/ Get a vector of all members in the set, ordered.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528598,"byte_end":528650,"line_start":76,"line_end":76,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528747,"byte_end":528755,"line_start":80,"line_end":80,"column_start":5,"column_end":13},"name":"contains","qualname":"::traits::members::SortedMembers::contains","value":"pub fn contains(&T) -> bool","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" Return `true` if this \"contains\" the given value `t`.\n","sig":null,"attributes":[{"value":"/ Return `true` if this \"contains\" the given value `t`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528685,"byte_end":528742,"line_start":79,"line_end":79,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528869,"byte_end":528874,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"count","qualname":"::traits::members::SortedMembers::count","value":"pub fn count() -> usize","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":" Get the number of items in the set.\n","sig":null,"attributes":[{"value":"/ Get the number of items in the set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":528825,"byte_end":528864,"line_start":82,"line_end":82,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529277,"byte_end":529287,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"AsContains","qualname":"::traits::members::AsContains","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter struct for turning an `OrderedMembership` impl into a `Contains` impl.\n","sig":null,"attributes":[{"value":"/ Adapter struct for turning an `OrderedMembership` impl into a `Contains` impl.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529183,"byte_end":529265,"line_start":93,"line_end":93,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529530,"byte_end":529537,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"IsInVec","qualname":"::traits::members::IsInVec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Trivial utility for implementing `Contains`/`OrderedMembership` with a `Vec`.\n","sig":null,"attributes":[{"value":"/ Trivial utility for implementing `Contains`/`OrderedMembership` with a `Vec`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529437,"byte_end":529518,"line_start":99,"line_end":99,"column_start":1,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":3070},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529923,"byte_end":529942,"line_start":109,"line_end":109,"column_start":11,"column_end":30},"name":"ContainsLengthBound","qualname":"::traits::members::ContainsLengthBound","value":"ContainsLengthBound","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072}],"decl_id":null,"docs":" A trait for querying bound for the length of an implementation of `Contains`\n","sig":null,"attributes":[{"value":"/ A trait for querying bound for the length of an implementation of `Contains`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529832,"byte_end":529912,"line_start":108,"line_end":108,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529991,"byte_end":529998,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"min_len","qualname":"::traits::members::ContainsLengthBound::min_len","value":"pub fn min_len() -> usize","parent":{"krate":0,"index":3070},"children":[],"decl_id":null,"docs":" Minimum number of elements contained\n","sig":null,"attributes":[{"value":"/ Minimum number of elements contained","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529946,"byte_end":529986,"line_start":110,"line_end":110,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530057,"byte_end":530064,"line_start":113,"line_end":113,"column_start":5,"column_end":12},"name":"max_len","qualname":"::traits::members::ContainsLengthBound::max_len","value":"pub fn max_len() -> usize","parent":{"krate":0,"index":3070},"children":[],"decl_id":null,"docs":" Maximum number of elements contained\n","sig":null,"attributes":[{"value":"/ Maximum number of elements contained","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530012,"byte_end":530052,"line_start":112,"line_end":112,"column_start":2,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":3073},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530171,"byte_end":530188,"line_start":117,"line_end":117,"column_start":11,"column_end":28},"name":"InitializeMembers","qualname":"::traits::members::InitializeMembers","value":"InitializeMembers<AccountId>","parent":null,"children":[{"krate":0,"index":3075}],"decl_id":null,"docs":" Trait for type that can handle the initialization of account IDs at genesis.\n","sig":null,"attributes":[{"value":"/ Trait for type that can handle the initialization of account IDs at genesis.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530080,"byte_end":530160,"line_start":116,"line_end":116,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530258,"byte_end":530276,"line_start":119,"line_end":119,"column_start":5,"column_end":23},"name":"initialize_members","qualname":"::traits::members::InitializeMembers::initialize_members","value":"pub fn initialize_members(&[AccountId])","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":" Initialize the members to the given `members`.\n","sig":null,"attributes":[{"value":"/ Initialize the members to the given `members`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530203,"byte_end":530253,"line_start":118,"line_end":118,"column_start":2,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":3079},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530470,"byte_end":530483,"line_start":127,"line_end":127,"column_start":11,"column_end":24},"name":"ChangeMembers","qualname":"::traits::members::ChangeMembers","value":"ChangeMembers<AccountId: Clone + Ord>","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086}],"decl_id":null,"docs":" Trait for type that can handle incremental changes to a set of account IDs.\n","sig":null,"attributes":[{"value":"/ Trait for type that can handle incremental changes to a set of account IDs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530380,"byte_end":530459,"line_start":126,"line_end":126,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530716,"byte_end":530730,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"change_members","qualname":"::traits::members::ChangeMembers::change_members","value":"pub fn change_members(&[AccountId], &[AccountId], Vec<AccountId>)","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" A number of members `incoming` just joined the set and replaced some `outgoing` ones. The\n new set is given by `new`, and need not be sorted.","sig":null,"attributes":[{"value":"/ A number of members `incoming` just joined the set and replaced some `outgoing` ones. The","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530511,"byte_end":530604,"line_start":128,"line_end":128,"column_start":2,"column_end":95}},{"value":"/ new set is given by `new`, and need not be sorted.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530606,"byte_end":530660,"line_start":129,"line_end":129,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530662,"byte_end":530665,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ This resets any previous value of prime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530667,"byte_end":530711,"line_start":131,"line_end":131,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531195,"byte_end":531216,"line_start":143,"line_end":143,"column_start":5,"column_end":26},"name":"change_members_sorted","qualname":"::traits::members::ChangeMembers::change_members_sorted","value":"pub fn change_members_sorted(&[AccountId], &[AccountId], &[AccountId])","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" A number of members `_incoming` just joined the set and replaced some `_outgoing` ones. The\n new set is thus given by `sorted_new` and **must be sorted**.","sig":null,"attributes":[{"value":"/ A number of members `_incoming` just joined the set and replaced some `_outgoing` ones. The","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530886,"byte_end":530981,"line_start":137,"line_end":137,"column_start":2,"column_end":97}},{"value":"/ new set is thus given by `sorted_new` and **must be sorted**.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":530983,"byte_end":531048,"line_start":138,"line_end":138,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531050,"byte_end":531053,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ NOTE: This is the only function that needs to be implemented in `ChangeMembers`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531055,"byte_end":531139,"line_start":140,"line_end":140,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531141,"byte_end":531144,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ This resets any previous value of prime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531146,"byte_end":531190,"line_start":142,"line_end":142,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531493,"byte_end":531511,"line_start":153,"line_end":153,"column_start":5,"column_end":23},"name":"set_members_sorted","qualname":"::traits::members::ChangeMembers::set_members_sorted","value":"pub fn set_members_sorted(&[AccountId], &[AccountId])","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" Set the new members; they **must already be sorted**. This will compute the diff and use it to\n call `change_members_sorted`.","sig":null,"attributes":[{"value":"/ Set the new members; they **must already be sorted**. This will compute the diff and use it to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531304,"byte_end":531402,"line_start":149,"line_end":149,"column_start":2,"column_end":100}},{"value":"/ call `change_members_sorted`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531404,"byte_end":531437,"line_start":150,"line_end":150,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531439,"byte_end":531442,"line_start":151,"line_end":151,"column_start":2,"column_end":5}},{"value":"/ This resets any previous value of prime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531444,"byte_end":531488,"line_start":152,"line_end":152,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531870,"byte_end":531897,"line_start":161,"line_end":161,"column_start":5,"column_end":32},"name":"compute_members_diff_sorted","qualname":"::traits::members::ChangeMembers::compute_members_diff_sorted","value":"pub fn compute_members_diff_sorted(&[AccountId], &[AccountId])\n-> (Vec<AccountId>, Vec<AccountId>)","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" Compute diff between new and old members; they **must already be sorted**.","sig":null,"attributes":[{"value":"/ Compute diff between new and old members; they **must already be sorted**.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531738,"byte_end":531816,"line_start":158,"line_end":158,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531818,"byte_end":531821,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ Returns incoming and outgoing members.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":531823,"byte_end":531865,"line_start":160,"line_end":160,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":532760,"byte_end":532769,"line_start":196,"line_end":196,"column_start":5,"column_end":14},"name":"set_prime","qualname":"::traits::members::ChangeMembers::set_prime","value":"pub fn set_prime(Option<AccountId>)","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" Set the prime member.\n","sig":null,"attributes":[{"value":"/ Set the prime member.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":532730,"byte_end":532755,"line_start":195,"line_end":195,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":532833,"byte_end":532842,"line_start":199,"line_end":199,"column_start":5,"column_end":14},"name":"get_prime","qualname":"::traits::members::ChangeMembers::get_prime","value":"pub fn get_prime() -> Option<AccountId>","parent":{"krate":0,"index":3079},"children":[],"decl_id":null,"docs":" Get the current prime.\n","sig":null,"attributes":[{"value":"/ Get the current prime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":532802,"byte_end":532828,"line_start":198,"line_end":198,"column_start":2,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":3156},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534268,"byte_end":534280,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"name":"ValidatorSet","qualname":"::traits::validation::ValidatorSet","value":"ValidatorSet<AccountId>","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161}],"decl_id":null,"docs":" A trait for online node inspection in a session.","sig":null,"attributes":[{"value":"/ A trait for online node inspection in a session.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534128,"byte_end":534180,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534181,"byte_end":534184,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Something that can give information about the current validator set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534185,"byte_end":534257,"line_start":30,"line_end":30,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":3158},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534354,"byte_end":534365,"line_start":33,"line_end":33,"column_start":7,"column_end":18},"name":"ValidatorId","qualname":"::traits::validation::ValidatorSet::ValidatorId","value":"type ValidatorId: Parameter;","parent":{"krate":0,"index":3156},"children":[],"decl_id":null,"docs":" Type for representing validator id in a session.\n","sig":null,"attributes":[{"value":"/ Type for representing validator id in a session.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534295,"byte_end":534347,"line_start":32,"line_end":32,"column_start":2,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3159},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534441,"byte_end":534454,"line_start":35,"line_end":35,"column_start":7,"column_end":20},"name":"ValidatorIdOf","qualname":"::traits::validation::ValidatorSet::ValidatorIdOf","value":"type ValidatorIdOf: Convert<AccountId, Option<Self::ValidatorId>>;","parent":{"krate":0,"index":3156},"children":[],"decl_id":null,"docs":" A type for converting `AccountId` to `ValidatorId`.\n","sig":null,"attributes":[{"value":"/ A type for converting `AccountId` to `ValidatorId`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534379,"byte_end":534434,"line_start":34,"line_end":34,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534544,"byte_end":534557,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"session_index","qualname":"::traits::validation::ValidatorSet::session_index","value":"pub fn session_index() -> SessionIndex","parent":{"krate":0,"index":3156},"children":[],"decl_id":null,"docs":" Returns current session index.\n","sig":null,"attributes":[{"value":"/ Returns current session index.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534505,"byte_end":534539,"line_start":37,"line_end":37,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534625,"byte_end":534635,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"validators","qualname":"::traits::validation::ValidatorSet::validators","value":"pub fn validators() -> Vec<Self::ValidatorId>","parent":{"krate":0,"index":3156},"children":[],"decl_id":null,"docs":" Returns the active set of validators.\n","sig":null,"attributes":[{"value":"/ Returns the active set of validators.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534579,"byte_end":534620,"line_start":40,"line_end":40,"column_start":2,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":3162},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534732,"byte_end":534762,"line_start":45,"line_end":45,"column_start":11,"column_end":41},"name":"ValidatorSetWithIdentification","qualname":"::traits::validation::ValidatorSetWithIdentification","value":"ValidatorSetWithIdentification<AccountId>: ValidatorSet<AccountId>","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165}],"decl_id":null,"docs":" [`ValidatorSet`] combined with an identification.\n","sig":null,"attributes":[{"value":"/ [`ValidatorSet`] combined with an identification.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534668,"byte_end":534721,"line_start":44,"line_end":44,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3164},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534850,"byte_end":534864,"line_start":47,"line_end":47,"column_start":7,"column_end":21},"name":"Identification","qualname":"::traits::validation::ValidatorSetWithIdentification::Identification","value":"type Identification: Parameter;","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":" Full identification of `ValidatorId`.\n","sig":null,"attributes":[{"value":"/ Full identification of `ValidatorId`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534802,"byte_end":534843,"line_start":46,"line_end":46,"column_start":2,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3165},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534945,"byte_end":534961,"line_start":49,"line_end":49,"column_start":7,"column_end":23},"name":"IdentificationOf","qualname":"::traits::validation::ValidatorSetWithIdentification::IdentificationOf","value":"type IdentificationOf: Convert<Self::ValidatorId, Option<Self::Identification>>;","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":" A type for converting `ValidatorId` to `Identification`.\n","sig":null,"attributes":[{"value":"/ A type for converting `ValidatorId` to `Identification`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534878,"byte_end":534938,"line_start":48,"line_end":48,"column_start":2,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":3166},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535146,"byte_end":535156,"line_start":54,"line_end":54,"column_start":11,"column_end":21},"name":"FindAuthor","qualname":"::traits::validation::FindAuthor","value":"FindAuthor<Author>","parent":null,"children":[{"krate":0,"index":3168}],"decl_id":null,"docs":" A trait for finding the author of a block header based on the `PreRuntime` digests contained\n within it.\n","sig":null,"attributes":[{"value":"/ A trait for finding the author of a block header based on the `PreRuntime` digests contained","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535024,"byte_end":535120,"line_start":52,"line_end":52,"column_start":1,"column_end":97}},{"value":"/ within it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535121,"byte_end":535135,"line_start":53,"line_end":53,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535237,"byte_end":535248,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"find_author","qualname":"::traits::validation::FindAuthor::find_author","value":"pub fn find_author<'a, I>(I) -> Option<Author> where I: 'a + IntoIterator<Item\n= (ConsensusEngineId, &'a [u8])>","parent":{"krate":0,"index":3166},"children":[],"decl_id":null,"docs":" Find the author of a block based on the pre-runtime digests.\n","sig":null,"attributes":[{"value":"/ Find the author of a block based on the pre-runtime digests.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535168,"byte_end":535232,"line_start":55,"line_end":55,"column_start":2,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":3176},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535592,"byte_end":535602,"line_start":69,"line_end":69,"column_start":11,"column_end":21},"name":"VerifySeal","qualname":"::traits::validation::VerifySeal","value":"VerifySeal<Header, Author>","parent":null,"children":[{"krate":0,"index":3179}],"decl_id":null,"docs":" A trait for verifying the seal of a header and returning the author.\n","sig":null,"attributes":[{"value":"/ A trait for verifying the seal of a header and returning the author.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535509,"byte_end":535581,"line_start":68,"line_end":68,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535677,"byte_end":535688,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"verify_seal","qualname":"::traits::validation::VerifySeal::verify_seal","value":"pub fn verify_seal(&Header) -> Result<Option<Author>, &'static str>","parent":{"krate":0,"index":3176},"children":[],"decl_id":null,"docs":" Verify a header and return the author, if any.\n","sig":null,"attributes":[{"value":"/ Verify a header and return the author, if any.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535622,"byte_end":535672,"line_start":70,"line_end":70,"column_start":2,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":3180},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535805,"byte_end":535822,"line_start":75,"line_end":75,"column_start":11,"column_end":28},"name":"OneSessionHandler","qualname":"::traits::validation::OneSessionHandler","value":"OneSessionHandler<ValidatorId>: BoundToRuntimeAppPublic","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3186},{"krate":0,"index":3189},{"krate":0,"index":3190}],"decl_id":null,"docs":" A session handler for specific key type.\n","sig":null,"attributes":[{"value":"/ A session handler for specific key type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535750,"byte_end":535794,"line_start":74,"line_end":74,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":3182},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535897,"byte_end":535900,"line_start":77,"line_end":77,"column_start":7,"column_end":10},"name":"Key","qualname":"::traits::validation::OneSessionHandler::Key","value":"type Key: Decode + Default + RuntimeAppPublic;","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" The key type expected.\n","sig":null,"attributes":[{"value":"/ The key type expected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535864,"byte_end":535890,"line_start":76,"line_end":76,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536198,"byte_end":536216,"line_start":83,"line_end":83,"column_start":5,"column_end":23},"name":"on_genesis_session","qualname":"::traits::validation::OneSessionHandler::on_genesis_session","value":"pub fn on_genesis_session<'a, I: 'a>(I) where I: Iterator<Item =\n(&'a ValidatorId, Self::Key)>, ValidatorId: 'a","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" The given validator set will be used for the genesis session.\n It is guaranteed that the given validator set will also be used\n for the second session, therefore the first call to `on_new_session`\n should provide the same validator set.\n","sig":null,"attributes":[{"value":"/ The given validator set will be used for the genesis session.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535941,"byte_end":536006,"line_start":79,"line_end":79,"column_start":2,"column_end":67}},{"value":"/ It is guaranteed that the given validator set will also be used","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536008,"byte_end":536075,"line_start":80,"line_end":80,"column_start":2,"column_end":69}},{"value":"/ for the second session, therefore the first call to `on_new_session`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536077,"byte_end":536149,"line_start":81,"line_end":81,"column_start":2,"column_end":74}},{"value":"/ should provide the same validator set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536151,"byte_end":536193,"line_start":82,"line_end":82,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536740,"byte_end":536754,"line_start":95,"line_end":95,"column_start":5,"column_end":19},"name":"on_new_session","qualname":"::traits::validation::OneSessionHandler::on_new_session","value":"pub fn on_new_session<'a, I: 'a>(bool, I, I) where I: Iterator<Item =\n(&'a ValidatorId, Self::Key)>, ValidatorId: 'a","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Session set has changed; act appropriately. Note that this can be called\n before initialization of your module.","sig":null,"attributes":[{"value":"/ Session set has changed; act appropriately. Note that this can be called","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536318,"byte_end":536394,"line_start":86,"line_end":86,"column_start":2,"column_end":78}},{"value":"/ before initialization of your module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536396,"byte_end":536437,"line_start":87,"line_end":87,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536439,"byte_end":536442,"line_start":88,"line_end":88,"column_start":2,"column_end":5}},{"value":"/ `changed` is true when at least one of the session keys","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536444,"byte_end":536503,"line_start":89,"line_end":89,"column_start":2,"column_end":61}},{"value":"/ or the underlying economic identities/distribution behind one the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536505,"byte_end":536574,"line_start":90,"line_end":90,"column_start":2,"column_end":71}},{"value":"/ session keys has changed, false otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536576,"byte_end":536622,"line_start":91,"line_end":91,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536624,"byte_end":536627,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ The `validators` are the validators of the incoming session, and `queued_validators`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536629,"byte_end":536717,"line_start":93,"line_end":93,"column_start":2,"column_end":90}},{"value":"/ will follow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536719,"byte_end":536735,"line_start":94,"line_end":94,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537077,"byte_end":537101,"line_start":105,"line_end":105,"column_start":5,"column_end":29},"name":"on_before_session_ending","qualname":"::traits::validation::OneSessionHandler::on_before_session_ending","value":"pub fn on_before_session_ending()","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" A notification for end of the session.","sig":null,"attributes":[{"value":"/ A notification for end of the session.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536901,"byte_end":536943,"line_start":101,"line_end":101,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536945,"byte_end":536948,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ Note it is triggered before any `SessionManager::end_session` handlers,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":536950,"byte_end":537025,"line_start":103,"line_end":103,"column_start":2,"column_end":77}},{"value":"/ so we can still affect the validator set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537027,"byte_end":537072,"line_start":104,"line_end":104,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537187,"byte_end":537198,"line_start":108,"line_end":108,"column_start":5,"column_end":16},"name":"on_disabled","qualname":"::traits::validation::OneSessionHandler::on_disabled","value":"pub fn on_disabled(usize)","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" A validator got disabled. Act accordingly until a new session begins.\n","sig":null,"attributes":[{"value":"/ A validator got disabled. Act accordingly until a new session begins.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537109,"byte_end":537182,"line_start":107,"line_end":107,"column_start":2,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":3191},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537782,"byte_end":537809,"line_start":120,"line_end":120,"column_start":11,"column_end":38},"name":"EstimateNextSessionRotation","qualname":"::traits::validation::EstimateNextSessionRotation","value":"EstimateNextSessionRotation<BlockNumber>","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195}],"decl_id":null,"docs":" Something that can estimate at which block the next session rotation will happen (i.e. a new\n session starts).","sig":null,"attributes":[{"value":"/ Something that can estimate at which block the next session rotation will happen (i.e. a new","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537228,"byte_end":537324,"line_start":111,"line_end":111,"column_start":1,"column_end":97}},{"value":"/ session starts).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537325,"byte_end":537345,"line_start":112,"line_end":112,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537346,"byte_end":537349,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The accuracy of the estimates is dependent on the specific implementation, but in order to get","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537350,"byte_end":537448,"line_start":114,"line_end":114,"column_start":1,"column_end":99}},{"value":"/ the best estimate possible these methods should be called throughout the duration of the session","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537449,"byte_end":537549,"line_start":115,"line_end":115,"column_start":1,"column_end":101}},{"value":"/ (rather than calling once and storing the result).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537550,"byte_end":537604,"line_start":116,"line_end":116,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537605,"byte_end":537608,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This should be the same logical unit that dictates `ShouldEndSession` to the session module. No","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537609,"byte_end":537708,"line_start":118,"line_end":118,"column_start":1,"column_end":100}},{"value":"/ assumptions are made about the scheduling of the sessions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537709,"byte_end":537771,"line_start":119,"line_end":119,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537917,"byte_end":537939,"line_start":124,"line_end":124,"column_start":5,"column_end":27},"name":"average_session_length","qualname":"::traits::validation::EstimateNextSessionRotation::average_session_length","value":"pub fn average_session_length() -> BlockNumber","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Return the average length of a session.","sig":null,"attributes":[{"value":"/ Return the average length of a session.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537826,"byte_end":537869,"line_start":121,"line_end":121,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537871,"byte_end":537874,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ This may or may not be accurate.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537876,"byte_end":537912,"line_start":123,"line_end":123,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538100,"byte_end":538133,"line_start":129,"line_end":129,"column_start":5,"column_end":38},"name":"estimate_current_session_progress","qualname":"::traits::validation::EstimateNextSessionRotation::estimate_current_session_progress","value":"pub fn estimate_current_session_progress(BlockNumber)\n-> (Option<Percent>, Weight)","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Return an estimate of the current session progress.","sig":null,"attributes":[{"value":"/ Return an estimate of the current session progress.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":537960,"byte_end":538015,"line_start":126,"line_end":126,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538017,"byte_end":538020,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ None should be returned if the estimation fails to come to an answer.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538022,"byte_end":538095,"line_start":128,"line_end":128,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538355,"byte_end":538385,"line_start":134,"line_end":134,"column_start":5,"column_end":35},"name":"estimate_next_session_rotation","qualname":"::traits::validation::EstimateNextSessionRotation::estimate_next_session_rotation","value":"pub fn estimate_next_session_rotation(BlockNumber)\n-> (Option<BlockNumber>, Weight)","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Return the block number at which the next session rotation is estimated to happen.","sig":null,"attributes":[{"value":"/ Return the block number at which the next session rotation is estimated to happen.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538184,"byte_end":538270,"line_start":131,"line_end":131,"column_start":2,"column_end":88}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538272,"byte_end":538275,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ None should be returned if the estimation fails to come to an answer.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538277,"byte_end":538350,"line_start":133,"line_end":133,"column_start":2,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":3201},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539451,"byte_end":539473,"line_start":161,"line_end":161,"column_start":11,"column_end":33},"name":"EstimateNextNewSession","qualname":"::traits::validation::EstimateNextNewSession","value":"EstimateNextNewSession<BlockNumber>","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204}],"decl_id":null,"docs":" Something that can estimate at which block scheduling of the next session will happen (i.e when\n we will try to fetch new validators).","sig":null,"attributes":[{"value":"/ Something that can estimate at which block scheduling of the next session will happen (i.e when","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538807,"byte_end":538906,"line_start":151,"line_end":151,"column_start":1,"column_end":100}},{"value":"/ we will try to fetch new validators).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538907,"byte_end":538948,"line_start":152,"line_end":152,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538949,"byte_end":538952,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ This only refers to the point when we fetch the next session details and not when we enact them","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":538953,"byte_end":539052,"line_start":154,"line_end":154,"column_start":1,"column_end":100}},{"value":"/ (for enactment there's `EstimateNextSessionRotation`). With `pallet-session` this should be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539053,"byte_end":539148,"line_start":155,"line_end":155,"column_start":1,"column_end":96}},{"value":"/ triggered whenever `SessionManager::new_session` is called.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539149,"byte_end":539212,"line_start":156,"line_end":156,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539213,"byte_end":539216,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ For example, if we are using a staking module this would be the block when the session module","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539217,"byte_end":539314,"line_start":158,"line_end":158,"column_start":1,"column_end":98}},{"value":"/ would ask staking what the next validator set will be, as such this must always be implemented","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539315,"byte_end":539413,"line_start":159,"line_end":159,"column_start":1,"column_end":99}},{"value":"/ by the session module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539414,"byte_end":539440,"line_start":160,"line_end":160,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539581,"byte_end":539603,"line_start":165,"line_end":165,"column_start":5,"column_end":27},"name":"average_session_length","qualname":"::traits::validation::EstimateNextNewSession::average_session_length","value":"pub fn average_session_length() -> BlockNumber","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Return the average length of a session.","sig":null,"attributes":[{"value":"/ Return the average length of a session.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539490,"byte_end":539533,"line_start":162,"line_end":162,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539535,"byte_end":539538,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ This may or may not be accurate.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539540,"byte_end":539576,"line_start":164,"line_end":164,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539790,"byte_end":539815,"line_start":170,"line_end":170,"column_start":5,"column_end":30},"name":"estimate_next_new_session","qualname":"::traits::validation::EstimateNextNewSession::estimate_next_new_session","value":"pub fn estimate_next_new_session(BlockNumber) -> (Option<BlockNumber>, Weight)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Return the block number at which the next new session is estimated to happen.","sig":null,"attributes":[{"value":"/ Return the block number at which the next new session is estimated to happen.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539624,"byte_end":539705,"line_start":167,"line_end":167,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539707,"byte_end":539710,"line_start":168,"line_end":168,"column_start":2,"column_end":5}},{"value":"/ None should be returned if the estimation fails to come to an answer.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":539712,"byte_end":539785,"line_start":169,"line_end":169,"column_start":2,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":3209},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540261,"byte_end":540280,"line_start":186,"line_end":186,"column_start":11,"column_end":30},"name":"KeyOwnerProofSystem","qualname":"::traits::validation::KeyOwnerProofSystem","value":"KeyOwnerProofSystem<Key>","parent":null,"children":[{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214}],"decl_id":null,"docs":" Something which can compute and check proofs of\n a historical key owner and return full identification data of that\n key owner.\n","sig":null,"attributes":[{"value":"/ Something which can compute and check proofs of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540113,"byte_end":540164,"line_start":183,"line_end":183,"column_start":1,"column_end":52}},{"value":"/ a historical key owner and return full identification data of that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540165,"byte_end":540235,"line_start":184,"line_end":184,"column_start":1,"column_end":71}},{"value":"/ key owner.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540236,"byte_end":540250,"line_start":185,"line_end":185,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":3211},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540331,"byte_end":540336,"line_start":188,"line_end":188,"column_start":7,"column_end":12},"name":"Proof","qualname":"::traits::validation::KeyOwnerProofSystem::Proof","value":"type Proof: Codec;","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" The proof of membership itself.\n","sig":null,"attributes":[{"value":"/ The proof of membership itself.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540289,"byte_end":540324,"line_start":187,"line_end":187,"column_start":2,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":3212},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540418,"byte_end":540437,"line_start":190,"line_end":190,"column_start":7,"column_end":26},"name":"IdentificationTuple","qualname":"::traits::validation::KeyOwnerProofSystem::IdentificationTuple","value":"type IdentificationTuple: Codec;","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" The full identification of a key owner and the stash account.\n","sig":null,"attributes":[{"value":"/ The full identification of a key owner and the stash account.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540346,"byte_end":540411,"line_start":189,"line_end":189,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540729,"byte_end":540734,"line_start":199,"line_end":199,"column_start":5,"column_end":10},"name":"prove","qualname":"::traits::validation::KeyOwnerProofSystem::prove","value":"pub fn prove(Key) -> Option<Self::Proof>","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" Prove membership of a key owner in the current block-state.","sig":null,"attributes":[{"value":"/ Prove membership of a key owner in the current block-state.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540448,"byte_end":540511,"line_start":192,"line_end":192,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540513,"byte_end":540516,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ This should typically only be called off-chain, since it may be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540518,"byte_end":540585,"line_start":194,"line_end":194,"column_start":2,"column_end":69}},{"value":"/ computationally heavy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540587,"byte_end":540613,"line_start":195,"line_end":195,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540615,"byte_end":540618,"line_start":196,"line_end":196,"column_start":2,"column_end":5}},{"value":"/ Returns `Some` iff the key owner referred to by the given `key` is a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540620,"byte_end":540692,"line_start":197,"line_end":197,"column_start":2,"column_end":74}},{"value":"/ member of the current set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540694,"byte_end":540724,"line_start":198,"line_end":198,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540887,"byte_end":540898,"line_start":203,"line_end":203,"column_start":5,"column_end":16},"name":"check_proof","qualname":"::traits::validation::KeyOwnerProofSystem::check_proof","value":"pub fn check_proof(Key, Self::Proof) -> Option<Self::IdentificationTuple>","parent":{"krate":0,"index":3209},"children":[],"decl_id":null,"docs":" Check a proof of membership on-chain. Return `Some` iff the proof is\n valid and recent enough to check.\n","sig":null,"attributes":[{"value":"/ Check a proof of membership on-chain. Return `Some` iff the proof is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540771,"byte_end":540843,"line_start":201,"line_end":201,"column_start":2,"column_end":74}},{"value":"/ valid and recent enough to check.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":540845,"byte_end":540882,"line_start":202,"line_end":202,"column_start":2,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":3221},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541636,"byte_end":541644,"line_start":224,"line_end":224,"column_start":11,"column_end":19},"name":"Lateness","qualname":"::traits::validation::Lateness","value":"Lateness<N>","parent":null,"children":[{"krate":0,"index":3223}],"decl_id":null,"docs":" Trait to be used by block producing consensus engine modules to determine\n how late the current block is (e.g. in a slot-based proposal mechanism how\n many slots were skipped since the previous block).\n","sig":null,"attributes":[{"value":"/ Trait to be used by block producing consensus engine modules to determine","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541414,"byte_end":541491,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ how late the current block is (e.g. in a slot-based proposal mechanism how","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541492,"byte_end":541570,"line_start":222,"line_end":222,"column_start":1,"column_end":79}},{"value":"/ many slots were skipped since the previous block).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541571,"byte_end":541625,"line_start":223,"line_end":223,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541747,"byte_end":541755,"line_start":227,"line_end":227,"column_start":5,"column_end":13},"name":"lateness","qualname":"::traits::validation::Lateness::lateness","value":"pub fn lateness(&Self) -> N","parent":{"krate":0,"index":3221},"children":[],"decl_id":null,"docs":" Returns a generic measure of how late the current block is compared to\n its parent.\n","sig":null,"attributes":[{"value":"/ Returns a generic measure of how late the current block is compared to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541651,"byte_end":541725,"line_start":225,"line_end":225,"column_start":2,"column_end":76}},{"value":"/ its parent.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541727,"byte_end":541742,"line_start":226,"line_end":226,"column_start":2,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":3227},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":542060,"byte_end":542081,"line_start":238,"line_end":238,"column_start":11,"column_end":32},"name":"ValidatorRegistration","qualname":"::traits::validation::ValidatorRegistration","value":"ValidatorRegistration<ValidatorId>","parent":null,"children":[{"krate":0,"index":3229}],"decl_id":null,"docs":" Implementors of this trait provide information about whether or not some validator has\n been registered with them. The [Session module](../../pallet_session/index.html) is an implementor.\n","sig":null,"attributes":[{"value":"/ Implementors of this trait provide information about whether or not some validator has","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541855,"byte_end":541945,"line_start":236,"line_end":236,"column_start":1,"column_end":91}},{"value":"/ been registered with them. The [Session module](../../pallet_session/index.html) is an implementor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":541946,"byte_end":542049,"line_start":237,"line_end":237,"column_start":1,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":542210,"byte_end":542223,"line_start":241,"line_end":241,"column_start":5,"column_end":18},"name":"is_registered","qualname":"::traits::validation::ValidatorRegistration::is_registered","value":"pub fn is_registered(&ValidatorId) -> bool","parent":{"krate":0,"index":3227},"children":[],"decl_id":null,"docs":" Returns true if the provided validator ID has been registered with the implementing runtime\n module\n","sig":null,"attributes":[{"value":"/ Returns true if the provided validator ID has been registered with the implementing runtime","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":542098,"byte_end":542193,"line_start":239,"line_end":239,"column_start":2,"column_end":97}},{"value":"/ module","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":542195,"byte_end":542205,"line_start":240,"line_end":240,"column_start":2,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3265},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543138,"byte_end":543144,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"Filter","qualname":"::traits::filter::Filter","value":"Filter<T>","parent":null,"children":[{"krate":0,"index":3267}],"decl_id":null,"docs":" Simple trait for providing a filter over a reference to some type.\n","sig":null,"attributes":[{"value":"/ Simple trait for providing a filter over a reference to some type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543057,"byte_end":543127,"line_start":22,"line_end":22,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543248,"byte_end":543254,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"filter","qualname":"::traits::filter::Filter::filter","value":"pub fn filter(&T) -> bool","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":" Determine if a given value should be allowed through the filter (returns `true`) or not.\n","sig":null,"attributes":[{"value":"/ Determine if a given value should be allowed through the filter (returns `true`) or not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543151,"byte_end":543243,"line_start":24,"line_end":24,"column_start":2,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":3271},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543396,"byte_end":543407,"line_start":33,"line_end":33,"column_start":11,"column_end":22},"name":"FilterStack","qualname":"::traits::filter::FilterStack","value":"FilterStack<T>: Filter<T>","parent":null,"children":[{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278}],"decl_id":null,"docs":" Trait to add a constraint onto the filter.\n","sig":null,"attributes":[{"value":"/ Trait to add a constraint onto the filter.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543339,"byte_end":543385,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":3273},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543471,"byte_end":543476,"line_start":35,"line_end":35,"column_start":7,"column_end":12},"name":"Stack","qualname":"::traits::filter::FilterStack::Stack","value":"type Stack;","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" The type used to archive the stack.\n","sig":null,"attributes":[{"value":"/ The type used to archive the stack.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543425,"byte_end":543464,"line_start":34,"line_end":34,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543528,"byte_end":543532,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"push","qualname":"::traits::filter::FilterStack::push","value":"pub fn push<impl Fn(&T) -> bool + 'static: Fn(&T) -> bool +\n            'static>(impl Fn(&T) -> bool + 'static)","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" Add a new `constraint` onto the filter.\n","sig":null,"attributes":[{"value":"/ Add a new `constraint` onto the filter.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543480,"byte_end":543523,"line_start":37,"line_end":37,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543669,"byte_end":543672,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"pop","qualname":"::traits::filter::FilterStack::pop","value":"pub fn pop()","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" Removes the most recently pushed, and not-yet-popped, constraint from the filter.\n","sig":null,"attributes":[{"value":"/ Removes the most recently pushed, and not-yet-popped, constraint from the filter.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543579,"byte_end":543664,"line_start":40,"line_end":40,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543762,"byte_end":543766,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"take","qualname":"::traits::filter::FilterStack::take","value":"pub fn take() -> Self::Stack","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" Clear the filter, returning a value that may be used later to `restore` it.\n","sig":null,"attributes":[{"value":"/ Clear the filter, returning a value that may be used later to `restore` it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543678,"byte_end":543757,"line_start":43,"line_end":43,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543848,"byte_end":543855,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"restore","qualname":"::traits::filter::FilterStack::restore","value":"pub fn restore(Self::Stack)","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" Restore the filter from a previous `take` operation.\n","sig":null,"attributes":[{"value":"/ Restore the filter from a previous `take` operation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543787,"byte_end":543843,"line_start":46,"line_end":46,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3279},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543976,"byte_end":543992,"line_start":51,"line_end":51,"column_start":12,"column_end":28},"name":"FilterStackGuard","qualname":"::traits::filter::FilterStackGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" Guard type for pushing a constraint to a `FilterStack` and popping when dropped.\n","sig":null,"attributes":[{"value":"/ Guard type for pushing a constraint to a `FilterStack` and popping when dropped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543880,"byte_end":543964,"line_start":50,"line_end":50,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":3284},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544160,"byte_end":544176,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"ClearFilterGuard","qualname":"::traits::filter::ClearFilterGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" Guard type for clearing all pushed constraints from a `FilterStack` and reinstating them when\n dropped.\n","sig":null,"attributes":[{"value":"/ Guard type for clearing all pushed constraints from a `FilterStack` and reinstating them when","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544038,"byte_end":544135,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ dropped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544136,"byte_end":544148,"line_start":54,"line_end":54,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544421,"byte_end":544424,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"new","qualname":"<FilterStackGuard<F, T>>::new","value":"pub fn new<impl Fn(&T) -> bool + 'static: Fn(&T) -> bool +\n           'static>(impl Fn(&T) -> bool + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance, adding a new `constraint` onto the filter `T`, and popping it when\n this instance is dropped.\n","sig":null,"attributes":[{"value":"/ Create a new instance, adding a new `constraint` onto the filter `T`, and popping it when","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544288,"byte_end":544381,"line_start":58,"line_end":58,"column_start":2,"column_end":95}},{"value":"/ this instance is dropped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544383,"byte_end":544412,"line_start":59,"line_end":59,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544814,"byte_end":544817,"line_start":75,"line_end":75,"column_start":9,"column_end":12},"name":"new","qualname":"<ClearFilterGuard<F, T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance, adding a new `constraint` onto the filter `T`, and popping it when\n this instance is dropped.\n","sig":null,"attributes":[{"value":"/ Create a new instance, adding a new `constraint` onto the filter `T`, and popping it when","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544681,"byte_end":544774,"line_start":73,"line_end":73,"column_start":2,"column_end":95}},{"value":"/ this instance is dropped.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544776,"byte_end":544805,"line_start":74,"line_end":74,"column_start":2,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":3307},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545137,"byte_end":545151,"line_start":89,"line_end":89,"column_start":11,"column_end":25},"name":"InstanceFilter","qualname":"::traits::filter::InstanceFilter","value":"InstanceFilter<T>: Sized + Send + Sync","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"decl_id":null,"docs":" Simple trait for providing a filter over a reference to some type, given an instance of itself.\n","sig":null,"attributes":[{"value":"/ Simple trait for providing a filter over a reference to some type, given an instance of itself.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545027,"byte_end":545126,"line_start":88,"line_end":88,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545276,"byte_end":545282,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"filter","qualname":"::traits::filter::InstanceFilter::filter","value":"pub fn filter(&Self, &T) -> bool","parent":{"krate":0,"index":3307},"children":[],"decl_id":null,"docs":" Determine if a given value should be allowed through the filter (returns `true`) or not.\n","sig":null,"attributes":[{"value":"/ Determine if a given value should be allowed through the filter (returns `true`) or not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545179,"byte_end":545271,"line_start":90,"line_end":90,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545386,"byte_end":545397,"line_start":94,"line_end":94,"column_start":5,"column_end":16},"name":"is_superset","qualname":"::traits::filter::InstanceFilter::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":{"krate":0,"index":3307},"children":[],"decl_id":null,"docs":" Determines whether `self` matches at least everything that `_o` does.\n","sig":null,"attributes":[{"value":"/ Determines whether `self` matches at least everything that `_o` does.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545308,"byte_end":545381,"line_start":93,"line_end":93,"column_start":2,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":5269},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":548030,"byte_end":548043,"line_start":185,"line_end":185,"column_start":11,"column_end":24},"name":"IntegrityTest","qualname":"::traits::filter::IntegrityTest","value":"IntegrityTest","parent":null,"children":[{"krate":0,"index":5270}],"decl_id":null,"docs":" Type that provide some integrity tests.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":548151,"byte_end":548165,"line_start":189,"line_end":189,"column_start":5,"column_end":19},"name":"integrity_test","qualname":"::traits::filter::IntegrityTest::integrity_test","value":"pub fn integrity_test()","parent":{"krate":0,"index":5269},"children":[],"decl_id":null,"docs":" Run integrity test.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551686,"byte_end":551689,"line_start":25,"line_end":25,"column_start":11,"column_end":14},"name":"Len","qualname":"::traits::misc::Len","value":"Len","parent":null,"children":[{"krate":0,"index":3367}],"decl_id":null,"docs":" Anything that can have a `::len()` method.\n","sig":null,"attributes":[{"value":"/ Anything that can have a `::len()` method.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551629,"byte_end":551675,"line_start":24,"line_end":24,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551733,"byte_end":551736,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"len","qualname":"::traits::misc::Len::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3366},"children":[],"decl_id":null,"docs":" Return the length of data type.\n","sig":null,"attributes":[{"value":"/ Return the length of data type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551693,"byte_end":551728,"line_start":26,"line_end":26,"column_start":2,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":3371},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552038,"byte_end":552041,"line_start":39,"line_end":39,"column_start":11,"column_end":14},"name":"Get","qualname":"::traits::misc::Get","value":"Get<T>","parent":null,"children":[{"krate":0,"index":3373}],"decl_id":null,"docs":" A trait for querying a single value from a type.","sig":null,"attributes":[{"value":"/ A trait for querying a single value from a type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551920,"byte_end":551972,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551973,"byte_end":551976,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ It is not required that the value is constant.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551977,"byte_end":552027,"line_start":38,"line_end":38,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552082,"byte_end":552085,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::misc::Get::get","value":"pub fn get() -> T","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Return the current value.\n","sig":null,"attributes":[{"value":"/ Return the current value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552048,"byte_end":552077,"line_start":40,"line_end":40,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3377},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552253,"byte_end":552263,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"GetDefault","qualname":"::traits::misc::GetDefault","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implement Get by returning Default for any type that implements Default.\n","sig":null,"attributes":[{"value":"/ Implement Get by returning Default for any type that implements Default.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552165,"byte_end":552241,"line_start":48,"line_end":48,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":3382},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552448,"byte_end":552455,"line_start":57,"line_end":57,"column_start":11,"column_end":18},"name":"TryDrop","qualname":"::traits::misc::TryDrop","value":"TryDrop: Sized","parent":null,"children":[{"krate":0,"index":3383}],"decl_id":null,"docs":" A type for which some values make sense to be able to drop without further consideration.\n","sig":null,"attributes":[{"value":"/ A type for which some values make sense to be able to drop without further consideration.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552344,"byte_end":552437,"line_start":56,"line_end":56,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552551,"byte_end":552559,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"name":"try_drop","qualname":"::traits::misc::TryDrop::try_drop","value":"pub fn try_drop(Self) -> Result<(), Self>","parent":{"krate":0,"index":3382},"children":[],"decl_id":null,"docs":" Drop an instance cleanly. Only works if its value represents \"no-operation\".\n","sig":null,"attributes":[{"value":"/ Drop an instance cleanly. Only works if its value represents \"no-operation\".","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552466,"byte_end":552546,"line_start":58,"line_end":58,"column_start":2,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3387},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552853,"byte_end":552857,"line_start":67,"line_end":67,"column_start":2,"column_end":6},"name":"None","qualname":"::traits::misc::SameOrOther::None","value":"SameOrOther::None","parent":{"krate":0,"index":3384},"children":[],"decl_id":null,"docs":" No item.\n","sig":null,"attributes":[{"value":"/ No item.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552839,"byte_end":552851,"line_start":66,"line_end":66,"column_start":2,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3389},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552945,"byte_end":552949,"line_start":69,"line_end":69,"column_start":2,"column_end":6},"name":"Same","qualname":"::traits::misc::SameOrOther::Same","value":"SameOrOther::Same(A)","parent":{"krate":0,"index":3384},"children":[],"decl_id":null,"docs":" An item of the same type as the `Self` on which the return function was called.\n","sig":null,"attributes":[{"value":"/ An item of the same type as the `Self` on which the return function was called.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552860,"byte_end":552943,"line_start":68,"line_end":68,"column_start":2,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3392},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553044,"byte_end":553049,"line_start":71,"line_end":71,"column_start":2,"column_end":7},"name":"Other","qualname":"::traits::misc::SameOrOther::Other","value":"SameOrOther::Other(B)","parent":{"krate":0,"index":3384},"children":[],"decl_id":null,"docs":" An item of the opposite type to the `Self` on which the return function was called.\n","sig":null,"attributes":[{"value":"/ An item of the opposite type to the `Self` on which the return function was called.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552955,"byte_end":553042,"line_start":70,"line_end":70,"column_start":2,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":3384},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552818,"byte_end":552829,"line_start":65,"line_end":65,"column_start":10,"column_end":21},"name":"SameOrOther","qualname":"::traits::misc::SameOrOther","value":"pub enum SameOrOther<A, B> { None, Same(A), Other(B), }","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3392}],"decl_id":null,"docs":" Return type used when we need to return one of two items, each of the opposite direction or\n sign, with one (`Same`) being of the same type as the `self` or primary argument of the function\n that returned it.\n","sig":null,"attributes":[{"value":"/ Return type used when we need to return one of two items, each of the opposite direction or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552590,"byte_end":552685,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ sign, with one (`Same`) being of the same type as the `self` or primary argument of the function","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552686,"byte_end":552786,"line_start":63,"line_end":63,"column_start":1,"column_end":101}},{"value":"/ that returned it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552787,"byte_end":552808,"line_start":64,"line_end":64,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553370,"byte_end":553378,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"try_same","qualname":"<SameOrOther<A, B>>::try_same","value":"pub fn try_same(Self) -> Result<A, Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ok` with the inner value of `Same` if `self` is that, otherwise returns `Err` with\n `self`.\n","sig":null,"attributes":[{"value":"/ Returns `Ok` with the inner value of `Same` if `self` is that, otherwise returns `Err` with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553253,"byte_end":553348,"line_start":85,"line_end":85,"column_start":2,"column_end":97}},{"value":"/ `self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553350,"byte_end":553361,"line_start":86,"line_end":86,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553598,"byte_end":553607,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"try_other","qualname":"<SameOrOther<A, B>>::try_other","value":"pub fn try_other(Self) -> Result<B, Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ok` with the inner value of `Other` if `self` is that, otherwise returns `Err` with\n `self`.\n","sig":null,"attributes":[{"value":"/ Returns `Ok` with the inner value of `Other` if `self` is that, otherwise returns `Err` with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553480,"byte_end":553576,"line_start":94,"line_end":94,"column_start":2,"column_end":98}},{"value":"/ `self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553578,"byte_end":553589,"line_start":95,"line_end":95,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553793,"byte_end":553801,"line_start":104,"line_end":104,"column_start":9,"column_end":17},"name":"try_none","qualname":"<SameOrOther<A, B>>::try_none","value":"pub fn try_none(Self) -> Result<(), Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ok` if `self` is `None`, otherwise returns `Err` with `self`.\n","sig":null,"attributes":[{"value":"/ Returns `Ok` if `self` is `None`, otherwise returns `Err` with `self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553710,"byte_end":553784,"line_start":103,"line_end":103,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553909,"byte_end":553913,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"same","qualname":"<SameOrOther<A, B>>::same","value":"pub fn same(Self) -> Result<A, B> where A: Default","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554098,"byte_end":554103,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"other","qualname":"<SameOrOther<A, B>>::other","value":"pub fn other(Self) -> Result<B, A> where B: Default","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5798},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554391,"byte_end":554403,"line_start":130,"line_end":130,"column_start":11,"column_end":23},"name":"OnNewAccount","qualname":"::traits::misc::OnNewAccount","value":"OnNewAccount<AccountId>","parent":null,"children":[{"krate":0,"index":5800}],"decl_id":null,"docs":" Handler for when a new account has been created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5800},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554467,"byte_end":554481,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"on_new_account","qualname":"::traits::misc::OnNewAccount::on_new_account","value":"pub fn on_new_account(&AccountId)","parent":{"krate":0,"index":5798},"children":[],"decl_id":null,"docs":" A new account `who` has been registered.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6359},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554605,"byte_end":554620,"line_start":137,"line_end":137,"column_start":11,"column_end":26},"name":"OnKilledAccount","qualname":"::traits::misc::OnKilledAccount","value":"OnKilledAccount<AccountId>","parent":null,"children":[{"krate":0,"index":6361}],"decl_id":null,"docs":" The account with the given id was reaped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6361},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554685,"byte_end":554702,"line_start":139,"line_end":139,"column_start":5,"column_end":22},"name":"on_killed_account","qualname":"::traits::misc::OnKilledAccount::on_killed_account","value":"pub fn on_killed_account(&AccountId)","parent":{"krate":0,"index":6359},"children":[],"decl_id":null,"docs":" The account with the given id was reaped.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3407},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554794,"byte_end":554808,"line_start":143,"line_end":143,"column_start":11,"column_end":25},"name":"HandleLifetime","qualname":"::traits::misc::HandleLifetime","value":"HandleLifetime<T>","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3410}],"decl_id":null,"docs":" A simple, generic one-parameter event notifier/handler.\n","sig":null,"attributes":[{"value":"/ A simple, generic one-parameter event notifier/handler.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554724,"byte_end":554783,"line_start":142,"line_end":142,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554847,"byte_end":554854,"line_start":145,"line_end":145,"column_start":5,"column_end":12},"name":"created","qualname":"::traits::misc::HandleLifetime::created","value":"pub fn created(&T) -> Result<(), StoredMapError>","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":" An account was created.\n","sig":null,"attributes":[{"value":"/ An account was created.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554815,"byte_end":554842,"line_start":144,"line_end":144,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554937,"byte_end":554943,"line_start":148,"line_end":148,"column_start":5,"column_end":11},"name":"killed","qualname":"::traits::misc::HandleLifetime::killed","value":"pub fn killed(&T) -> Result<(), StoredMapError>","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":" An account was killed.\n","sig":null,"attributes":[{"value":"/ An account was killed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":554906,"byte_end":554932,"line_start":147,"line_end":147,"column_start":2,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":3413},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555043,"byte_end":555047,"line_start":153,"line_end":153,"column_start":11,"column_end":15},"name":"Time","qualname":"::traits::misc::Time","value":"Time","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":3415}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3414},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555056,"byte_end":555062,"line_start":154,"line_end":154,"column_start":7,"column_end":13},"name":"Moment","qualname":"::traits::misc::Time::Moment","value":"type Moment: AtLeast32Bit + Parameter + Default + Copy;","parent":{"krate":0,"index":3413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555112,"byte_end":555115,"line_start":156,"line_end":156,"column_start":5,"column_end":8},"name":"now","qualname":"::traits::misc::Time::now","value":"pub fn now() -> Self::Moment","parent":{"krate":0,"index":3413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3416},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555182,"byte_end":555190,"line_start":160,"line_end":160,"column_start":11,"column_end":19},"name":"UnixTime","qualname":"::traits::misc::UnixTime","value":"UnixTime","parent":null,"children":[{"krate":0,"index":3417}],"decl_id":null,"docs":" Trait to deal with unix time.\n","sig":null,"attributes":[{"value":"/ Trait to deal with unix time.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555138,"byte_end":555171,"line_start":159,"line_end":159,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555250,"byte_end":555253,"line_start":162,"line_end":162,"column_start":5,"column_end":8},"name":"now","qualname":"::traits::misc::UnixTime::now","value":"pub fn now() -> core::time::Duration","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Return duration since `SystemTime::UNIX_EPOCH`.\n","sig":null,"attributes":[{"value":"/ Return duration since `SystemTime::UNIX_EPOCH`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555194,"byte_end":555245,"line_start":161,"line_end":161,"column_start":2,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":3418},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555437,"byte_end":555443,"line_start":168,"line_end":168,"column_start":11,"column_end":17},"name":"IsType","qualname":"::traits::misc::IsType","value":"IsType<T>: Into<T> + From<T>","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423}],"decl_id":null,"docs":" Trait to be used when types are exactly same.","sig":null,"attributes":[{"value":"/ Trait to be used when types are exactly same.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555284,"byte_end":555333,"line_start":165,"line_end":165,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555334,"byte_end":555337,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This allow to convert back and forth from type, a reference and a mutable reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555338,"byte_end":555426,"line_start":167,"line_end":167,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555493,"byte_end":555501,"line_start":170,"line_end":170,"column_start":5,"column_end":13},"name":"from_ref","qualname":"::traits::misc::IsType::from_ref","value":"pub fn from_ref(&T) -> &Self","parent":{"krate":0,"index":3418},"children":[],"decl_id":null,"docs":" Cast reference.\n","sig":null,"attributes":[{"value":"/ Cast reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555469,"byte_end":555488,"line_start":169,"line_end":169,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555545,"byte_end":555553,"line_start":173,"line_end":173,"column_start":5,"column_end":13},"name":"into_ref","qualname":"::traits::misc::IsType::into_ref","value":"pub fn into_ref(&Self) -> &T","parent":{"krate":0,"index":3418},"children":[],"decl_id":null,"docs":" Cast reference.\n","sig":null,"attributes":[{"value":"/ Cast reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555521,"byte_end":555540,"line_start":172,"line_end":172,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555602,"byte_end":555610,"line_start":176,"line_end":176,"column_start":5,"column_end":13},"name":"from_mut","qualname":"::traits::misc::IsType::from_mut","value":"pub fn from_mut(&mut T) -> &mut Self","parent":{"krate":0,"index":3418},"children":[],"decl_id":null,"docs":" Cast mutable reference.\n","sig":null,"attributes":[{"value":"/ Cast mutable reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555570,"byte_end":555597,"line_start":175,"line_end":175,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555670,"byte_end":555678,"line_start":179,"line_end":179,"column_start":5,"column_end":13},"name":"into_mut","qualname":"::traits::misc::IsType::into_mut","value":"pub fn into_mut(&mut Self) -> &mut T","parent":{"krate":0,"index":3418},"children":[],"decl_id":null,"docs":" Cast mutable reference.\n","sig":null,"attributes":[{"value":"/ Cast mutable reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555638,"byte_end":555665,"line_start":178,"line_end":178,"column_start":2,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3430},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557025,"byte_end":557034,"line_start":231,"line_end":231,"column_start":11,"column_end":20},"name":"IsSubType","qualname":"::traits::misc::IsSubType","value":"IsSubType<T>","parent":null,"children":[{"krate":0,"index":3432}],"decl_id":null,"docs":" Something that can be checked to be a of sub type `T`.","sig":null,"attributes":[{"value":"/ Something that can be checked to be a of sub type `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555889,"byte_end":555947,"line_start":189,"line_end":189,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555948,"byte_end":555951,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This is useful for enums where each variant encapsulates a different sub type, and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555952,"byte_end":556038,"line_start":191,"line_end":191,"column_start":1,"column_end":87}},{"value":"/ you need access to these sub types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556039,"byte_end":556078,"line_start":192,"line_end":192,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556079,"byte_end":556082,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ For example, in FRAME, this trait is implemented for the runtime `Call` enum. Pallets use this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556083,"byte_end":556181,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"/ to check if a certain call is an instance of the local pallet's `Call` enum.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556182,"byte_end":556262,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556263,"byte_end":556266,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556267,"byte_end":556280,"line_start":197,"line_end":197,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556281,"byte_end":556284,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556285,"byte_end":556292,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ # use frame_support::traits::IsSubType;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556293,"byte_end":556336,"line_start":200,"line_end":200,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556337,"byte_end":556340,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ enum Test {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556341,"byte_end":556356,"line_start":202,"line_end":202,"column_start":1,"column_end":16}},{"value":"/     String(String),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556357,"byte_end":556380,"line_start":203,"line_end":203,"column_start":1,"column_end":24}},{"value":"/     U32(u32),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556381,"byte_end":556398,"line_start":204,"line_end":204,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556399,"byte_end":556404,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556405,"byte_end":556408,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ impl IsSubType<String> for Test {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556409,"byte_end":556446,"line_start":207,"line_end":207,"column_start":1,"column_end":38}},{"value":"/     fn is_sub_type(&self) -> Option<&String> {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556447,"byte_end":556497,"line_start":208,"line_end":208,"column_start":1,"column_end":51}},{"value":"/         match self {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556498,"byte_end":556522,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/             Self::String(ref r) => Some(r),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556523,"byte_end":556570,"line_start":210,"line_end":210,"column_start":1,"column_end":48}},{"value":"/             _ => None,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556571,"byte_end":556597,"line_start":211,"line_end":211,"column_start":1,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556598,"byte_end":556611,"line_start":212,"line_end":212,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556612,"byte_end":556621,"line_start":213,"line_end":213,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556622,"byte_end":556627,"line_start":214,"line_end":214,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556628,"byte_end":556631,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ impl IsSubType<u32> for Test {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556632,"byte_end":556666,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/     fn is_sub_type(&self) -> Option<&u32> {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556667,"byte_end":556714,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/         match self {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556715,"byte_end":556739,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/             Self::U32(ref r) => Some(r),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556740,"byte_end":556784,"line_start":219,"line_end":219,"column_start":1,"column_end":45}},{"value":"/             _ => None,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556785,"byte_end":556811,"line_start":220,"line_end":220,"column_start":1,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556812,"byte_end":556825,"line_start":221,"line_end":221,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556826,"byte_end":556835,"line_start":222,"line_end":222,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556836,"byte_end":556841,"line_start":223,"line_end":223,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556842,"byte_end":556845,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556846,"byte_end":556861,"line_start":225,"line_end":225,"column_start":1,"column_end":16}},{"value":"/     let data = Test::String(\"test\".into());","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556862,"byte_end":556909,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556910,"byte_end":556913,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(\"test\", IsSubType::<String>::is_sub_type(&data).unwrap().as_str());","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":556914,"byte_end":557000,"line_start":228,"line_end":228,"column_start":1,"column_end":87}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557001,"byte_end":557006,"line_start":229,"line_end":229,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557007,"byte_end":557014,"line_start":230,"line_end":230,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557109,"byte_end":557120,"line_start":233,"line_end":233,"column_start":5,"column_end":16},"name":"is_sub_type","qualname":"::traits::misc::IsSubType::is_sub_type","value":"pub fn is_sub_type(&Self) -> Option<&T>","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns `Some(_)` if `self` is an instance of sub type `T`.\n","sig":null,"attributes":[{"value":"/ Returns `Some(_)` if `self` is an instance of sub type `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557041,"byte_end":557104,"line_start":232,"line_end":232,"column_start":2,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":3433},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557372,"byte_end":557384,"line_start":240,"line_end":240,"column_start":11,"column_end":23},"name":"ExecuteBlock","qualname":"::traits::misc::ExecuteBlock","value":"ExecuteBlock<Block: BlockT>","parent":null,"children":[{"krate":0,"index":3435}],"decl_id":null,"docs":" Something that can execute a given block.","sig":null,"attributes":[{"value":"/ Something that can execute a given block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557146,"byte_end":557191,"line_start":236,"line_end":236,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557192,"byte_end":557195,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ Executing a block means that all extrinsics in a given block will be executed and the resulting","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557196,"byte_end":557295,"line_start":238,"line_end":238,"column_start":1,"column_end":100}},{"value":"/ header will be checked against the header of the given block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557296,"byte_end":557361,"line_start":239,"line_end":239,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557662,"byte_end":557675,"line_start":248,"line_end":248,"column_start":5,"column_end":18},"name":"execute_block","qualname":"::traits::misc::ExecuteBlock::execute_block","value":"pub fn execute_block(Block)","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" Execute the given `block`.","sig":null,"attributes":[{"value":"/ Execute the given `block`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557403,"byte_end":557433,"line_start":241,"line_end":241,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557435,"byte_end":557438,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ This will execute all extrinsics in the block and check that the resulting header is correct.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557440,"byte_end":557537,"line_start":243,"line_end":243,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557539,"byte_end":557542,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ # Panic","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557544,"byte_end":557555,"line_start":245,"line_end":245,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557557,"byte_end":557560,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ Panics when an extrinsics panics or the resulting header doesn't match the expected header.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":557562,"byte_end":557657,"line_start":247,"line_end":247,"column_start":2,"column_end":97}}]},{"kind":"Trait","id":{"krate":0,"index":6920},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558244,"byte_end":558258,"line_start":262,"line_end":262,"column_start":11,"column_end":25},"name":"OffchainWorker","qualname":"::traits::misc::OffchainWorker","value":"OffchainWorker<BlockNumber>","parent":null,"children":[{"krate":0,"index":6922}],"decl_id":null,"docs":" Off-chain computation trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6922},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558614,"byte_end":558629,"line_start":269,"line_end":269,"column_start":5,"column_end":20},"name":"offchain_worker","qualname":"::traits::misc::OffchainWorker::offchain_worker","value":"pub fn offchain_worker(BlockNumber)","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":" This function is being called after every block import (when fully synced).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3436},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558786,"byte_end":558793,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"Backing","qualname":"::traits::misc::Backing","value":"Backing { approvals, eligible }","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438}],"decl_id":null,"docs":" Some amount of backing from a group. The precise defintion of what it means to \"back\" something\n is left flexible.\n","sig":null,"attributes":[{"value":"/ Some amount of backing from a group. The precise defintion of what it means to \"back\" something","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558653,"byte_end":558752,"line_start":272,"line_end":272,"column_start":1,"column_end":100}},{"value":"/ is left flexible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558753,"byte_end":558774,"line_start":273,"line_end":273,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3437},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558864,"byte_end":558873,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"name":"approvals","qualname":"::traits::misc::Backing::approvals","value":"u32","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":" The number of members of the group that back some motion.\n","sig":null,"attributes":[{"value":"/ The number of members of the group that back some motion.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558797,"byte_end":558858,"line_start":275,"line_end":275,"column_start":2,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3438},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558924,"byte_end":558932,"line_start":278,"line_end":278,"column_start":6,"column_end":14},"name":"eligible","qualname":"::traits::misc::Backing::eligible","value":"u32","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":" The total count of group members.\n","sig":null,"attributes":[{"value":"/ The total count of group members.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558881,"byte_end":558918,"line_start":277,"line_end":277,"column_start":2,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":3439},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558999,"byte_end":559009,"line_start":282,"line_end":282,"column_start":11,"column_end":21},"name":"GetBacking","qualname":"::traits::misc::GetBacking","value":"GetBacking","parent":null,"children":[{"krate":0,"index":3440}],"decl_id":null,"docs":" Retrieve the backing from an object's ref.\n","sig":null,"attributes":[{"value":"/ Retrieve the backing from an object's ref.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":558942,"byte_end":558988,"line_start":281,"line_end":281,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559151,"byte_end":559162,"line_start":285,"line_end":285,"column_start":5,"column_end":16},"name":"get_backing","qualname":"::traits::misc::GetBacking::get_backing","value":"pub fn get_backing(&Self) -> Option<Backing>","parent":{"krate":0,"index":3439},"children":[],"decl_id":null,"docs":" Returns `Some` `Backing` if `self` represents a fractional/groupwise backing of some\n implicit motion. `None` if it does not.\n","sig":null,"attributes":[{"value":"/ Returns `Some` `Backing` if `self` represents a fractional/groupwise backing of some","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559013,"byte_end":559101,"line_start":283,"line_end":283,"column_start":2,"column_end":90}},{"value":"/ implicit motion. `None` if it does not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559103,"byte_end":559146,"line_start":284,"line_end":284,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":3441},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559356,"byte_end":559379,"line_start":293,"line_end":293,"column_start":11,"column_end":34},"name":"EnsureInherentsAreFirst","qualname":"::traits::misc::EnsureInherentsAreFirst","value":"EnsureInherentsAreFirst<Block>","parent":null,"children":[{"krate":0,"index":3443}],"decl_id":null,"docs":" A trait to ensure the inherent are before non-inherent in a block.","sig":null,"attributes":[{"value":"/ A trait to ensure the inherent are before non-inherent in a block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559195,"byte_end":559265,"line_start":290,"line_end":290,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559266,"byte_end":559269,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This is typically implemented on runtime, through `construct_runtime!`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559270,"byte_end":559345,"line_start":292,"line_end":292,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559571,"byte_end":559597,"line_start":297,"line_end":297,"column_start":5,"column_end":31},"name":"ensure_inherents_are_first","qualname":"::traits::misc::EnsureInherentsAreFirst::ensure_inherents_are_first","value":"pub fn ensure_inherents_are_first(&Block) -> Result<(), u32>","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" Ensure the position of inherent is correct, i.e. they are before non-inherents.","sig":null,"attributes":[{"value":"/ Ensure the position of inherent is correct, i.e. they are before non-inherents.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559390,"byte_end":559473,"line_start":294,"line_end":294,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559475,"byte_end":559478,"line_start":295,"line_end":295,"column_start":2,"column_end":5}},{"value":"/ On error return the index of the inherent with invalid position (counting from 0).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559480,"byte_end":559566,"line_start":296,"line_end":296,"column_start":2,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":3444},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559699,"byte_end":559712,"line_start":301,"line_end":301,"column_start":11,"column_end":24},"name":"ExtrinsicCall","qualname":"::traits::misc::ExtrinsicCall","value":"ExtrinsicCall: sp_runtime::traits::Extrinsic","parent":null,"children":[{"krate":0,"index":3445}],"decl_id":null,"docs":" An extrinsic on which we can get access to call.\n","sig":null,"attributes":[{"value":"/ An extrinsic on which we can get access to call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559636,"byte_end":559688,"line_start":300,"line_end":300,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559786,"byte_end":559790,"line_start":303,"line_end":303,"column_start":5,"column_end":9},"name":"call","qualname":"::traits::misc::ExtrinsicCall::call","value":"pub fn call(&Self) -> &Self::Call","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":" Get the call of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Get the call of the extrinsic.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559747,"byte_end":559781,"line_start":302,"line_end":302,"column_start":2,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3524},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561263,"byte_end":561272,"line_start":27,"line_end":27,"column_start":11,"column_end":20},"name":"StoredMap","qualname":"::traits::stored_map::StoredMap","value":"StoredMap<K, T: Default>","parent":null,"children":[{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3532},{"krate":0,"index":3536},{"krate":0,"index":3540},{"krate":0,"index":3542}],"decl_id":null,"docs":" An abstraction of a value stored within storage, but possibly as part of a larger composite\n item.\n","sig":null,"attributes":[{"value":"/ An abstraction of a value stored within storage, but possibly as part of a larger composite","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561147,"byte_end":561242,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ item.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561243,"byte_end":561252,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561398,"byte_end":561401,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::stored_map::StoredMap::get","value":"pub fn get(&K) -> T","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Get the item, or its default if it doesn't yet exist; we make no distinction between the\n two.\n","sig":null,"attributes":[{"value":"/ Get the item, or its default if it doesn't yet exist; we make no distinction between the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561291,"byte_end":561383,"line_start":28,"line_end":28,"column_start":2,"column_end":94}},{"value":"/ two.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561385,"byte_end":561393,"line_start":29,"line_end":29,"column_start":2,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561605,"byte_end":561622,"line_start":34,"line_end":34,"column_start":5,"column_end":22},"name":"try_mutate_exists","qualname":"::traits::stored_map::StoredMap::try_mutate_exists","value":"pub fn try_mutate_exists<R, E: From<StoredMapError>,\n                         impl FnOnce(&mut Option<T>) -> Result<R, E>: FnOnce(&mut Option<T>)\n                         ->\n                         Result<R,\n                                E>>(&K,\n                                    impl FnOnce(&mut Option<T>) -> Result<R, E>)\n-> Result<R, E>","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Maybe mutate the item only if an `Ok` value is returned from `f`. Do nothing if an `Err` is\n returned. It is removed or reset to default value if it has been mutated to `None`\n","sig":null,"attributes":[{"value":"/ Maybe mutate the item only if an `Ok` value is returned from `f`. Do nothing if an `Err` is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561417,"byte_end":561512,"line_start":32,"line_end":32,"column_start":2,"column_end":97}},{"value":"/ returned. It is removed or reset to default value if it has been mutated to `None`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561514,"byte_end":561600,"line_start":33,"line_end":33,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561814,"byte_end":561820,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"mutate","qualname":"::traits::stored_map::StoredMap::mutate","value":"pub fn mutate<R, impl FnOnce(&mut T) -> R: FnOnce(&mut T) ->\n              R>(&K, impl FnOnce(&mut T) -> R) -> Result<R, StoredMapError>","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Mutate the item.\n","sig":null,"attributes":[{"value":"/ Mutate the item.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":561789,"byte_end":561809,"line_start":41,"line_end":41,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562299,"byte_end":562312,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"mutate_exists","qualname":"::traits::stored_map::StoredMap::mutate_exists","value":"pub fn mutate_exists<R,\n                     impl FnOnce(&mut Option<T>) -> R: FnOnce(&mut Option<T>)\n                     -> R>(&K, impl FnOnce(&mut Option<T>) -> R)\n-> Result<R, StoredMapError>","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Mutate the item, removing or resetting to default value if it has been mutated to `None`.","sig":null,"attributes":[{"value":"/ Mutate the item, removing or resetting to default value if it has been mutated to `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562127,"byte_end":562220,"line_start":54,"line_end":54,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562222,"byte_end":562225,"line_start":55,"line_end":55,"column_start":2,"column_end":5}},{"value":"/ This is infallible as long as the value does not get destroyed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562227,"byte_end":562294,"line_start":56,"line_end":56,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562519,"byte_end":562525,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"insert","qualname":"::traits::stored_map::StoredMap::insert","value":"pub fn insert(&K, T) -> Result<(), StoredMapError>","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Set the item to something new.\n","sig":null,"attributes":[{"value":"/ Set the item to something new.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562480,"byte_end":562514,"line_start":64,"line_end":64,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562696,"byte_end":562702,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"remove","qualname":"::traits::stored_map::StoredMap::remove","value":"pub fn remove(&K) -> Result<(), StoredMapError>","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Remove the item or otherwise replace it with its default value; we don't care which.\n","sig":null,"attributes":[{"value":"/ Remove the item or otherwise replace it with its default value; we don't care which.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562603,"byte_end":562691,"line_start":67,"line_end":67,"column_start":2,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3544},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563688,"byte_end":563702,"line_start":82,"line_end":82,"column_start":12,"column_end":26},"name":"StorageMapShim","qualname":"::traits::stored_map::StorageMapShim","value":"","parent":null,"children":[],"decl_id":null,"docs":" A shim for placing around a storage item in order to use it as a `StoredValue`. Ideally this\n wouldn't be needed as `StorageValue`s should blanket implement `StoredValue`s, however this\n would break the ability to have custom impls of `StoredValue`. The other workaround is to\n implement it directly in the macro.","sig":null,"attributes":[{"value":"/ A shim for placing around a storage item in order to use it as a `StoredValue`. Ideally this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562785,"byte_end":562881,"line_start":71,"line_end":71,"column_start":1,"column_end":97}},{"value":"/ wouldn't be needed as `StorageValue`s should blanket implement `StoredValue`s, however this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562882,"byte_end":562977,"line_start":72,"line_end":72,"column_start":1,"column_end":96}},{"value":"/ would break the ability to have custom impls of `StoredValue`. The other workaround is to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":562978,"byte_end":563071,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/ implement it directly in the macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563072,"byte_end":563111,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563112,"byte_end":563115,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This form has the advantage that two additional types are provides, `Created` and `Removed`,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563116,"byte_end":563212,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/ which are both generic events that can be tied to handlers to do something in the case of being","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563213,"byte_end":563312,"line_start":77,"line_end":77,"column_start":1,"column_end":100}},{"value":"/ about to create an account where one didn't previously exist (at all; not just where it used to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563313,"byte_end":563412,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"/ be the default value), or where the account is being removed or reset back to the default value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563413,"byte_end":563512,"line_start":79,"line_end":79,"column_start":1,"column_end":100}},{"value":"/ where previously it did exist (though may have been in a default state). This works well with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563513,"byte_end":563610,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ system module's `CallOnCreatedAccount` and `CallKillAccount`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563611,"byte_end":563676,"line_start":81,"line_end":81,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":3579},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566270,"byte_end":566280,"line_start":26,"line_end":26,"column_start":11,"column_end":21},"name":"Randomness","qualname":"::traits::randomness::Randomness","value":"Randomness<Output, BlockNumber>","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":3583}],"decl_id":null,"docs":" A trait that is able to provide randomness.","sig":null,"attributes":[{"value":"/ A trait that is able to provide randomness.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":565911,"byte_end":565958,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":565959,"byte_end":565962,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Being a deterministic blockchain, real randomness is difficult to come by, different","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":565963,"byte_end":566051,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ implementations of this trait will provide different security guarantees. At best,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566052,"byte_end":566138,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/ this will be randomness which was hard to predict a long time ago, but that has become","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566139,"byte_end":566229,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/ easy to predict recently.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566230,"byte_end":566259,"line_start":25,"line_end":25,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566985,"byte_end":566991,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"random","qualname":"::traits::randomness::Randomness::random","value":"pub fn random(&[u8]) -> (Output, BlockNumber)","parent":{"krate":0,"index":3579},"children":[],"decl_id":null,"docs":" Get the most recently determined random seed, along with the time in the past\n since when it was determinable by chain observers.","sig":null,"attributes":[{"value":"/ Get the most recently determined random seed, along with the time in the past","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566305,"byte_end":566386,"line_start":27,"line_end":27,"column_start":2,"column_end":83}},{"value":"/ since when it was determinable by chain observers.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566388,"byte_end":566442,"line_start":28,"line_end":28,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566444,"byte_end":566447,"line_start":29,"line_end":29,"column_start":2,"column_end":5}},{"value":"/ `subject` is a context identifier and allows you to get a different result to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566449,"byte_end":566530,"line_start":30,"line_end":30,"column_start":2,"column_end":83}},{"value":"/ other callers of this function; use it like `random(&b\"my context\"[..])`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566532,"byte_end":566609,"line_start":31,"line_end":31,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566611,"byte_end":566614,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ NOTE: The returned seed should only be used to distinguish commitments made before","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566616,"byte_end":566702,"line_start":33,"line_end":33,"column_start":2,"column_end":88}},{"value":"/ the returned block number. If the block number is too early (i.e. commitments were","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566704,"byte_end":566790,"line_start":34,"line_end":34,"column_start":2,"column_end":88}},{"value":"/ made afterwards), then ensure no further commitments may be made and repeatedly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566792,"byte_end":566875,"line_start":35,"line_end":35,"column_start":2,"column_end":85}},{"value":"/ call this on later blocks until the block number returned is later than the latest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566877,"byte_end":566963,"line_start":36,"line_end":36,"column_start":2,"column_end":88}},{"value":"/ commitment.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":566965,"byte_end":566980,"line_start":37,"line_end":37,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567670,"byte_end":567681,"line_start":51,"line_end":51,"column_start":5,"column_end":16},"name":"random_seed","qualname":"::traits::randomness::Randomness::random_seed","value":"pub fn random_seed() -> (Output, BlockNumber)","parent":{"krate":0,"index":3579},"children":[],"decl_id":null,"docs":" Get the basic random seed.","sig":null,"attributes":[{"value":"/ Get the basic random seed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567036,"byte_end":567066,"line_start":40,"line_end":40,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567068,"byte_end":567071,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ In general you won't want to use this, but rather `Self::random` which allows","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567073,"byte_end":567154,"line_start":42,"line_end":42,"column_start":2,"column_end":83}},{"value":"/ you to give a subject for the random result and whose value will be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567156,"byte_end":567227,"line_start":43,"line_end":43,"column_start":2,"column_end":73}},{"value":"/ independently low-influence random from any other such seeds.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567229,"byte_end":567294,"line_start":44,"line_end":44,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567296,"byte_end":567299,"line_start":45,"line_end":45,"column_start":2,"column_end":5}},{"value":"/ NOTE: The returned seed should only be used to distinguish commitments made before","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567301,"byte_end":567387,"line_start":46,"line_end":46,"column_start":2,"column_end":88}},{"value":"/ the returned block number. If the block number is too early (i.e. commitments were","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567389,"byte_end":567475,"line_start":47,"line_end":47,"column_start":2,"column_end":88}},{"value":"/ made afterwards), then ensure no further commitments may be made and repeatedly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567477,"byte_end":567560,"line_start":48,"line_end":48,"column_start":2,"column_end":85}},{"value":"/ call this on later blocks until the block number returned is later than the latest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567562,"byte_end":567648,"line_start":49,"line_end":49,"column_start":2,"column_end":88}},{"value":"/ commitment.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/randomness.rs","byte_start":567650,"byte_end":567665,"line_start":50,"line_end":50,"column_start":2,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":3598},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568769,"byte_end":568779,"line_start":27,"line_end":27,"column_start":11,"column_end":21},"name":"PalletInfo","qualname":"::traits::metadata::PalletInfo","value":"PalletInfo","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3601}],"decl_id":null,"docs":" Provides information about the pallet setup in the runtime.","sig":null,"attributes":[{"value":"/ Provides information about the pallet setup in the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568568,"byte_end":568631,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568632,"byte_end":568635,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An implementor should be able to provide information about each pallet that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568636,"byte_end":568715,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ is configured in `construct_runtime!`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568716,"byte_end":568758,"line_start":26,"line_end":26,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568865,"byte_end":568870,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"index","qualname":"::traits::metadata::PalletInfo::index","value":"pub fn index<P: 'static>() -> Option<usize>","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Convert the given pallet `P` into its index as configured in the runtime.\n","sig":null,"attributes":[{"value":"/ Convert the given pallet `P` into its index as configured in the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568783,"byte_end":568860,"line_start":28,"line_end":28,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568985,"byte_end":568989,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"name","qualname":"::traits::metadata::PalletInfo::name","value":"pub fn name<P: 'static>() -> Option<&'static str>","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Convert the given pallet `P` into its name as configured in the runtime.\n","sig":null,"attributes":[{"value":"/ Convert the given pallet `P` into its name as configured in the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":568904,"byte_end":568980,"line_start":30,"line_end":30,"column_start":2,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":3603},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569187,"byte_end":569203,"line_start":37,"line_end":37,"column_start":11,"column_end":27},"name":"PalletInfoAccess","qualname":"::traits::metadata::PalletInfoAccess","value":"PalletInfoAccess","parent":null,"children":[{"krate":0,"index":3604},{"krate":0,"index":3605}],"decl_id":null,"docs":" Provides information about the pallet setup in the runtime.","sig":null,"attributes":[{"value":"/ Provides information about the pallet setup in the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569032,"byte_end":569095,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569096,"byte_end":569099,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Access the information provided by [`PalletInfo`] for a specific pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569100,"byte_end":569176,"line_start":36,"line_end":36,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569265,"byte_end":569270,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"index","qualname":"::traits::metadata::PalletInfoAccess::index","value":"pub fn index() -> usize","parent":{"krate":0,"index":3603},"children":[],"decl_id":null,"docs":" Index of the pallet as configured in the runtime.\n","sig":null,"attributes":[{"value":"/ Index of the pallet as configured in the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569207,"byte_end":569260,"line_start":38,"line_end":38,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569341,"byte_end":569345,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"name","qualname":"::traits::metadata::PalletInfoAccess::name","value":"pub fn name() -> &'static str","parent":{"krate":0,"index":3603},"children":[],"decl_id":null,"docs":" Name of the pallet as configured in the runtime.\n","sig":null,"attributes":[{"value":"/ Name of the pallet as configured in the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569284,"byte_end":569336,"line_start":40,"line_end":40,"column_start":2,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7481},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569480,"byte_end":569492,"line_start":46,"line_end":46,"column_start":12,"column_end":24},"name":"CallMetadata","qualname":"::traits::metadata::CallMetadata","value":"CallMetadata { function_name, pallet_name }","parent":null,"children":[{"krate":0,"index":7482},{"krate":0,"index":7483}],"decl_id":null,"docs":" The function and pallet name of the Call.\n","sig":null,"attributes":[{"value":"/ The function and pallet name of the Call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569368,"byte_end":569413,"line_start":44,"line_end":44,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7482},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569527,"byte_end":569540,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"name":"function_name","qualname":"::traits::metadata::CallMetadata::function_name","value":"&'static str","parent":{"krate":0,"index":7481},"children":[],"decl_id":null,"docs":" Name of the function.\n","sig":null,"attributes":[{"value":"/ Name of the function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569496,"byte_end":569521,"line_start":47,"line_end":47,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7483},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569616,"byte_end":569627,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"name":"pallet_name","qualname":"::traits::metadata::CallMetadata::pallet_name","value":"&'static str","parent":{"krate":0,"index":7481},"children":[],"decl_id":null,"docs":" Name of the pallet to which the function belongs.\n","sig":null,"attributes":[{"value":"/ Name of the pallet to which the function belongs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569557,"byte_end":569610,"line_start":49,"line_end":49,"column_start":2,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":3606},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569696,"byte_end":569707,"line_start":54,"line_end":54,"column_start":11,"column_end":22},"name":"GetCallName","qualname":"::traits::metadata::GetCallName","value":"GetCallName","parent":null,"children":[{"krate":0,"index":3607},{"krate":0,"index":3608}],"decl_id":null,"docs":" Gets the function name of the Call.\n","sig":null,"attributes":[{"value":"/ Gets the function name of the Call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569646,"byte_end":569685,"line_start":53,"line_end":53,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569746,"byte_end":569760,"line_start":56,"line_end":56,"column_start":5,"column_end":19},"name":"get_call_names","qualname":"::traits::metadata::GetCallName::get_call_names","value":"pub fn get_call_names() -> &'static [&'static str]","parent":{"krate":0,"index":3606},"children":[],"decl_id":null,"docs":" Return all function names.\n","sig":null,"attributes":[{"value":"/ Return all function names.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569711,"byte_end":569741,"line_start":55,"line_end":55,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569838,"byte_end":569851,"line_start":58,"line_end":58,"column_start":5,"column_end":18},"name":"get_call_name","qualname":"::traits::metadata::GetCallName::get_call_name","value":"pub fn get_call_name(&Self) -> &'static str","parent":{"krate":0,"index":3606},"children":[],"decl_id":null,"docs":" Return the function name of the Call.\n","sig":null,"attributes":[{"value":"/ Return the function name of the Call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569792,"byte_end":569833,"line_start":57,"line_end":57,"column_start":2,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":3609},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569957,"byte_end":569972,"line_start":62,"line_end":62,"column_start":11,"column_end":26},"name":"GetCallMetadata","qualname":"::traits::metadata::GetCallMetadata","value":"GetCallMetadata","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"decl_id":null,"docs":" Gets the metadata for the Call - function name and pallet name.\n","sig":null,"attributes":[{"value":"/ Gets the metadata for the Call - function name and pallet name.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569879,"byte_end":569946,"line_start":61,"line_end":61,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570009,"byte_end":570025,"line_start":64,"line_end":64,"column_start":5,"column_end":21},"name":"get_module_names","qualname":"::traits::metadata::GetCallMetadata::get_module_names","value":"pub fn get_module_names() -> &'static [&'static str]","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Return all module names.\n","sig":null,"attributes":[{"value":"/ Return all module names.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":569976,"byte_end":570004,"line_start":63,"line_end":63,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570115,"byte_end":570129,"line_start":66,"line_end":66,"column_start":5,"column_end":19},"name":"get_call_names","qualname":"::traits::metadata::GetCallMetadata::get_call_names","value":"pub fn get_call_names(&str) -> &'static [&'static str]","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Return all function names for the given `module`.\n","sig":null,"attributes":[{"value":"/ Return all function names for the given `module`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570057,"byte_end":570110,"line_start":65,"line_end":65,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570257,"byte_end":570274,"line_start":68,"line_end":68,"column_start":5,"column_end":22},"name":"get_call_metadata","qualname":"::traits::metadata::GetCallMetadata::get_call_metadata","value":"pub fn get_call_metadata(&Self) -> CallMetadata","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Return a [`CallMetadata`], containing function and pallet name of the Call.\n","sig":null,"attributes":[{"value":"/ Return a [`CallMetadata`], containing function and pallet name of the Call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570173,"byte_end":570252,"line_start":67,"line_end":67,"column_start":2,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":3613},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570529,"byte_end":570563,"line_start":75,"line_end":75,"column_start":11,"column_end":45},"name":"PALLET_VERSION_STORAGE_KEY_POSTFIX","qualname":"::traits::metadata::PALLET_VERSION_STORAGE_KEY_POSTFIX","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" The storage key postfix that is used to store the [`PalletVersion`] per pallet.","sig":null,"attributes":[{"value":"/ The storage key postfix that is used to store the [`PalletVersion`] per pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570302,"byte_end":570385,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570386,"byte_end":570389,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The full storage key is built by using:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570390,"byte_end":570433,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/ Twox128([`PalletInfo::name`]) ++ Twox128([`PALLET_VERSION_STORAGE_KEY_POSTFIX`])","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570434,"byte_end":570518,"line_start":74,"line_end":74,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":7497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570856,"byte_end":570869,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"PalletVersion","qualname":"::traits::metadata::PalletVersion","value":"PalletVersion { major, minor, patch }","parent":null,"children":[{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500}],"decl_id":null,"docs":" The version of a pallet.","sig":null,"attributes":[{"value":"/ The version of a pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570599,"byte_end":570627,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570628,"byte_end":570631,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Each pallet version is stored in the state under a fixed key. See","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570632,"byte_end":570701,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ [`PALLET_VERSION_STORAGE_KEY_POSTFIX`] for how this key is built.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570702,"byte_end":570771,"line_start":80,"line_end":80,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":7498},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570915,"byte_end":570920,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"major","qualname":"::traits::metadata::PalletVersion::major","value":"u16","parent":{"krate":0,"index":7497},"children":[],"decl_id":null,"docs":" The major version of the pallet.\n","sig":null,"attributes":[{"value":"/ The major version of the pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570873,"byte_end":570909,"line_start":83,"line_end":83,"column_start":2,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7499},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570970,"byte_end":570975,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"name":"minor","qualname":"::traits::metadata::PalletVersion::minor","value":"u8","parent":{"krate":0,"index":7497},"children":[],"decl_id":null,"docs":" The minor version of the pallet.\n","sig":null,"attributes":[{"value":"/ The minor version of the pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570928,"byte_end":570964,"line_start":85,"line_end":85,"column_start":2,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7500},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571024,"byte_end":571029,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"name":"patch","qualname":"::traits::metadata::PalletVersion::patch","value":"u8","parent":{"krate":0,"index":7497},"children":[],"decl_id":null,"docs":" The patch version of the pallet.\n","sig":null,"attributes":[{"value":"/ The patch version of the pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":570982,"byte_end":571018,"line_start":87,"line_end":87,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571106,"byte_end":571109,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"name":"new","qualname":"<PalletVersion>::new","value":"pub fn new(u16, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571060,"byte_end":571097,"line_start":92,"line_end":92,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571437,"byte_end":571448,"line_start":107,"line_end":107,"column_start":9,"column_end":20},"name":"storage_key","qualname":"<PalletVersion>::storage_key","value":"pub fn storage_key<PI: PalletInfo, Pallet: 'static>() -> Option<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage key for a pallet version.","sig":null,"attributes":[{"value":"/ Returns the storage key for a pallet version.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571202,"byte_end":571251,"line_start":101,"line_end":101,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571253,"byte_end":571256,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ See [`PALLET_VERSION_STORAGE_KEY_POSTFIX`] on how this key is built.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571258,"byte_end":571330,"line_start":103,"line_end":103,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571332,"byte_end":571335,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if the given `PI` returned a `None` as name for the given","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571337,"byte_end":571413,"line_start":105,"line_end":105,"column_start":2,"column_end":78}},{"value":"/ `Pallet`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571415,"byte_end":571428,"line_start":106,"line_end":106,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572320,"byte_end":572336,"line_start":132,"line_end":132,"column_start":9,"column_end":25},"name":"put_into_storage","qualname":"<PalletVersion>::put_into_storage","value":"pub fn put_into_storage<PI: PalletInfo, Pallet: 'static>(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Put this pallet version into the storage.","sig":null,"attributes":[{"value":"/ Put this pallet version into the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571850,"byte_end":571895,"line_start":120,"line_end":120,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571897,"byte_end":571900,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ It will use the storage key that is associated with the given `Pallet`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571902,"byte_end":571977,"line_start":122,"line_end":122,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571979,"byte_end":571982,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571984,"byte_end":571996,"line_start":124,"line_end":124,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571998,"byte_end":572001,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ This function will panic iff `Pallet` can not be found by `PalletInfo`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572003,"byte_end":572078,"line_start":126,"line_end":126,"column_start":2,"column_end":77}},{"value":"/ In a runtime that is put together using","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572080,"byte_end":572123,"line_start":127,"line_end":127,"column_start":2,"column_end":45}},{"value":"/ [`construct_runtime!`](crate::construct_runtime) this should never happen.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572125,"byte_end":572203,"line_start":128,"line_end":128,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572205,"byte_end":572208,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ It will also panic if this function isn't executed in an externalities","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572210,"byte_end":572284,"line_start":130,"line_end":130,"column_start":2,"column_end":76}},{"value":"/ provided environment.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572286,"byte_end":572311,"line_start":131,"line_end":131,"column_start":2,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3628},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573132,"byte_end":573148,"line_start":159,"line_end":159,"column_start":11,"column_end":27},"name":"GetPalletVersion","qualname":"::traits::metadata::GetPalletVersion","value":"GetPalletVersion","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630}],"decl_id":null,"docs":" Provides version information about a pallet.","sig":null,"attributes":[{"value":"/ Provides version information about a pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572841,"byte_end":572889,"line_start":154,"line_end":154,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572890,"byte_end":572893,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This trait provides two functions for returning the version of a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572894,"byte_end":572962,"line_start":156,"line_end":156,"column_start":1,"column_end":69}},{"value":"/ pallet. There is a state where both functions can return distinct versions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572963,"byte_end":573042,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ See [`GetPalletVersion::storage_version`] for more information about this.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573043,"byte_end":573121,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573203,"byte_end":573218,"line_start":161,"line_end":161,"column_start":5,"column_end":20},"name":"current_version","qualname":"::traits::metadata::GetPalletVersion::current_version","value":"pub fn current_version() -> PalletVersion","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Returns the current version of the pallet.\n","sig":null,"attributes":[{"value":"/ Returns the current version of the pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573152,"byte_end":573198,"line_start":160,"line_end":160,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573825,"byte_end":573840,"line_start":177,"line_end":177,"column_start":5,"column_end":20},"name":"storage_version","qualname":"::traits::metadata::GetPalletVersion::storage_version","value":"pub fn storage_version() -> Option<PalletVersion>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Returns the version of the pallet that is stored in storage.","sig":null,"attributes":[{"value":"/ Returns the version of the pallet that is stored in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573241,"byte_end":573305,"line_start":163,"line_end":163,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573307,"byte_end":573310,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ Most of the time this will return the exact same version as","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573312,"byte_end":573375,"line_start":165,"line_end":165,"column_start":2,"column_end":65}},{"value":"/ [`GetPalletVersion::current_version`]. Only when being in","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573377,"byte_end":573438,"line_start":166,"line_end":166,"column_start":2,"column_end":63}},{"value":"/ a state after a runtime upgrade happened and the pallet did","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573440,"byte_end":573503,"line_start":167,"line_end":167,"column_start":2,"column_end":65}},{"value":"/ not yet updated its version in storage, this will return a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573505,"byte_end":573567,"line_start":168,"line_end":168,"column_start":2,"column_end":64}},{"value":"/ different(the previous, seen from the time of calling) version.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573569,"byte_end":573636,"line_start":169,"line_end":169,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573638,"byte_end":573641,"line_start":170,"line_end":170,"column_start":2,"column_end":5}},{"value":"/ See [`PalletVersion`] for more information.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573643,"byte_end":573690,"line_start":171,"line_end":171,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573692,"byte_end":573695,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573697,"byte_end":573707,"line_start":173,"line_end":173,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573709,"byte_end":573712,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ If there was no previous version of the pallet stored in the state,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573714,"byte_end":573785,"line_start":175,"line_end":175,"column_start":2,"column_end":73}},{"value":"/ this function returns `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":573787,"byte_end":573820,"line_start":176,"line_end":176,"column_start":2,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":3666},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":574966,"byte_end":574978,"line_start":28,"line_end":28,"column_start":11,"column_end":23},"name":"OnInitialize","qualname":"::traits::hooks::OnInitialize","value":"OnInitialize<BlockNumber>","parent":null,"children":[{"krate":0,"index":3668}],"decl_id":null,"docs":" The block initialization trait.","sig":null,"attributes":[{"value":"/ The block initialization trait.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":574762,"byte_end":574797,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":574798,"byte_end":574801,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Implementing this lets you express what should happen for your pallet when the block is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":574802,"byte_end":574893,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/ beginning (right before the first extrinsic is executed).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":574894,"byte_end":574955,"line_start":27,"line_end":27,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575379,"byte_end":575392,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"on_initialize","qualname":"::traits::hooks::OnInitialize::on_initialize","value":"pub fn on_initialize(BlockNumber) -> crate::weights::Weight","parent":{"krate":0,"index":3666},"children":[],"decl_id":null,"docs":" The block is being initialized. Implement to have something happen.","sig":null,"attributes":[{"value":"/ The block is being initialized. Implement to have something happen.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":574995,"byte_end":575066,"line_start":29,"line_end":29,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575068,"byte_end":575071,"line_start":30,"line_end":30,"column_start":2,"column_end":5}},{"value":"/ Return the non-negotiable weight consumed in the block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575073,"byte_end":575132,"line_start":31,"line_end":31,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575134,"byte_end":575137,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ NOTE: This function is called BEFORE ANY extrinsic in a block is applied,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575139,"byte_end":575216,"line_start":33,"line_end":33,"column_start":2,"column_end":79}},{"value":"/ including inherent extrinsics. Hence for instance, if you runtime includes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575218,"byte_end":575296,"line_start":34,"line_end":34,"column_start":2,"column_end":80}},{"value":"/ `pallet_timestamp`, the `timestamp` is not yet up to date at this point.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575298,"byte_end":575374,"line_start":35,"line_end":35,"column_start":2,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":8084},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":575890,"byte_end":575900,"line_start":52,"line_end":52,"column_start":11,"column_end":21},"name":"OnFinalize","qualname":"::traits::hooks::OnFinalize","value":"OnFinalize<BlockNumber>","parent":null,"children":[{"krate":0,"index":8086}],"decl_id":null,"docs":" The block finalization trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8086},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576112,"byte_end":576123,"line_start":57,"line_end":57,"column_start":5,"column_end":16},"name":"on_finalize","qualname":"::traits::hooks::OnFinalize::on_finalize","value":"pub fn on_finalize(BlockNumber)","parent":{"krate":0,"index":8084},"children":[],"decl_id":null,"docs":" The block is being finalized. Implement to have something happen.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3669},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576359,"byte_end":576365,"line_start":64,"line_end":64,"column_start":11,"column_end":17},"name":"OnIdle","qualname":"::traits::hooks::OnIdle","value":"OnIdle<BlockNumber>","parent":null,"children":[{"krate":0,"index":3671}],"decl_id":null,"docs":" The block's on idle trait.","sig":null,"attributes":[{"value":"/ The block's on idle trait.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576147,"byte_end":576177,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576178,"byte_end":576181,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Implementing this lets you express what should happen for your pallet before","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576182,"byte_end":576262,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ block finalization (see `on_finalize` hook) in case any remaining weight is left.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576263,"byte_end":576348,"line_start":63,"line_end":63,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576778,"byte_end":576785,"line_start":72,"line_end":72,"column_start":5,"column_end":12},"name":"on_idle","qualname":"::traits::hooks::OnIdle::on_idle","value":"pub fn on_idle(BlockNumber, crate::weights::Weight) -> crate::weights::Weight","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" The block is being finalized.\n Implement to have something happen in case there is leftover weight.\n Check the passed `remaining_weight` to make sure it is high enough to allow for\n your pallet's extra computation.","sig":null,"attributes":[{"value":"/ The block is being finalized.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576382,"byte_end":576415,"line_start":65,"line_end":65,"column_start":2,"column_end":35}},{"value":"/ Implement to have something happen in case there is leftover weight.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576417,"byte_end":576489,"line_start":66,"line_end":66,"column_start":2,"column_end":74}},{"value":"/ Check the passed `remaining_weight` to make sure it is high enough to allow for","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576491,"byte_end":576574,"line_start":67,"line_end":67,"column_start":2,"column_end":85}},{"value":"/ your pallet's extra computation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576576,"byte_end":576612,"line_start":68,"line_end":68,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576614,"byte_end":576617,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ NOTE: This function is called AFTER ALL extrinsics - including inherent extrinsics -","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576619,"byte_end":576707,"line_start":70,"line_end":70,"column_start":2,"column_end":90}},{"value":"/ in a block are applied but before `on_finalize` is executed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":576709,"byte_end":576773,"line_start":71,"line_end":71,"column_start":2,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":9203},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":577631,"byte_end":577640,"line_start":98,"line_end":98,"column_start":11,"column_end":20},"name":"OnGenesis","qualname":"::traits::hooks::OnGenesis","value":"OnGenesis","parent":null,"children":[{"krate":0,"index":9204}],"decl_id":null,"docs":" A trait that will be called at genesis.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9204},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":577693,"byte_end":577703,"line_start":100,"line_end":100,"column_start":5,"column_end":15},"name":"on_genesis","qualname":"::traits::hooks::OnGenesis::on_genesis","value":"pub fn on_genesis()","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":" Something that should happen at genesis.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3672},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579784,"byte_end":579800,"line_start":155,"line_end":155,"column_start":11,"column_end":27},"name":"OnRuntimeUpgrade","qualname":"::traits::hooks::OnRuntimeUpgrade","value":"OnRuntimeUpgrade","parent":null,"children":[{"krate":0,"index":3673}],"decl_id":null,"docs":" The runtime upgrade trait.","sig":null,"attributes":[{"value":"/ The runtime upgrade trait.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579604,"byte_end":579634,"line_start":151,"line_end":151,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579635,"byte_end":579638,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Implementing this lets you express what should happen when the runtime upgrades,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579639,"byte_end":579723,"line_start":153,"line_end":153,"column_start":1,"column_end":85}},{"value":"/ and changes may need to occur to your module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579724,"byte_end":579773,"line_start":154,"line_end":154,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":580149,"byte_end":580167,"line_start":165,"line_end":165,"column_start":5,"column_end":23},"name":"on_runtime_upgrade","qualname":"::traits::hooks::OnRuntimeUpgrade::on_runtime_upgrade","value":"pub fn on_runtime_upgrade() -> crate::weights::Weight","parent":{"krate":0,"index":3672},"children":[],"decl_id":null,"docs":" Perform a module upgrade.","sig":null,"attributes":[{"value":"/ Perform a module upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579804,"byte_end":579833,"line_start":156,"line_end":156,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579835,"byte_end":579838,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579840,"byte_end":579853,"line_start":158,"line_end":158,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579855,"byte_end":579858,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ This function will be called before we initialized any runtime state, aka `on_initialize`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579860,"byte_end":579953,"line_start":160,"line_end":160,"column_start":2,"column_end":95}},{"value":"/ wasn't called yet. So, information like the block number and any other","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":579955,"byte_end":580029,"line_start":161,"line_end":161,"column_start":2,"column_end":76}},{"value":"/ block local data are not accessible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":580031,"byte_end":580071,"line_start":162,"line_end":162,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":580073,"byte_end":580076,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ Return the non-negotiable weight consumed for runtime upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":580078,"byte_end":580144,"line_start":164,"line_end":164,"column_start":2,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3674},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581411,"byte_end":581416,"line_start":206,"line_end":206,"column_start":11,"column_end":16},"name":"Hooks","qualname":"::traits::hooks::Hooks","value":"Hooks<BlockNumber>","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681}],"decl_id":null,"docs":" The pallet hooks trait. Implementing this lets you express some logic to execute.\n","sig":null,"attributes":[{"value":"/ The pallet hooks trait. Implementing this lets you express some logic to execute.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581315,"byte_end":581400,"line_start":205,"line_end":205,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581507,"byte_end":581518,"line_start":208,"line_end":208,"column_start":5,"column_end":16},"name":"on_finalize","qualname":"::traits::hooks::Hooks::on_finalize","value":"pub fn on_finalize(BlockNumber)","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" The block is being finalized. Implement to have something happen.\n","sig":null,"attributes":[{"value":"/ The block is being finalized. Implement to have something happen.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581433,"byte_end":581502,"line_start":207,"line_end":207,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581887,"byte_end":581894,"line_start":215,"line_end":215,"column_start":5,"column_end":12},"name":"on_idle","qualname":"::traits::hooks::Hooks::on_idle","value":"pub fn on_idle(BlockNumber, crate::weights::Weight) -> crate::weights::Weight","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" This will be run when the block is being finalized (before `on_finalize`).\n Implement to have something happen using the remaining weight.\n Will not fire if the remaining weight is 0.\n Return the weight used, the hook will subtract it from current weight used\n and pass the result to the next `on_idle` hook if it exists.\n","sig":null,"attributes":[{"value":"/ This will be run when the block is being finalized (before `on_finalize`).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581541,"byte_end":581619,"line_start":210,"line_end":210,"column_start":2,"column_end":80}},{"value":"/ Implement to have something happen using the remaining weight.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581621,"byte_end":581687,"line_start":211,"line_end":211,"column_start":2,"column_end":68}},{"value":"/ Will not fire if the remaining weight is 0.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581689,"byte_end":581736,"line_start":212,"line_end":212,"column_start":2,"column_end":49}},{"value":"/ Return the weight used, the hook will subtract it from current weight used","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581738,"byte_end":581816,"line_start":213,"line_end":213,"column_start":2,"column_end":80}},{"value":"/ and pass the result to the next `on_idle` hook if it exists.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581818,"byte_end":581882,"line_start":214,"line_end":214,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582141,"byte_end":582154,"line_start":225,"line_end":225,"column_start":5,"column_end":18},"name":"on_initialize","qualname":"::traits::hooks::Hooks::on_initialize","value":"pub fn on_initialize(BlockNumber) -> crate::weights::Weight","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" The block is being initialized. Implement to have something happen.","sig":null,"attributes":[{"value":"/ The block is being initialized. Implement to have something happen.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":581999,"byte_end":582070,"line_start":222,"line_end":222,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582072,"byte_end":582075,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ Return the non-negotiable weight consumed in the block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582077,"byte_end":582136,"line_start":224,"line_end":224,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582848,"byte_end":582866,"line_start":241,"line_end":241,"column_start":5,"column_end":23},"name":"on_runtime_upgrade","qualname":"::traits::hooks::Hooks::on_runtime_upgrade","value":"pub fn on_runtime_upgrade() -> crate::weights::Weight","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" Perform a module upgrade.","sig":null,"attributes":[{"value":"/ Perform a module upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582206,"byte_end":582235,"line_start":227,"line_end":227,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582237,"byte_end":582240,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ NOTE: this doesn't include all pallet logic triggered on runtime upgrade. For instance it","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582242,"byte_end":582335,"line_start":229,"line_end":229,"column_start":2,"column_end":95}},{"value":"/ doesn't include the write of the pallet version in storage. The final complete logic","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582337,"byte_end":582425,"line_start":230,"line_end":230,"column_start":2,"column_end":90}},{"value":"/ triggered on runtime upgrade is given by implementation of `OnRuntimeUpgrade` trait by","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582427,"byte_end":582517,"line_start":231,"line_end":231,"column_start":2,"column_end":92}},{"value":"/ `Pallet`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582519,"byte_end":582532,"line_start":232,"line_end":232,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582534,"byte_end":582537,"line_start":233,"line_end":233,"column_start":2,"column_end":5}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582539,"byte_end":582552,"line_start":234,"line_end":234,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582554,"byte_end":582557,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ This function will be called before we initialized any runtime state, aka `on_initialize`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582559,"byte_end":582652,"line_start":236,"line_end":236,"column_start":2,"column_end":95}},{"value":"/ wasn't called yet. So, information like the block number and any other","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582654,"byte_end":582728,"line_start":237,"line_end":237,"column_start":2,"column_end":76}},{"value":"/ block local data are not accessible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582730,"byte_end":582770,"line_start":238,"line_end":238,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582772,"byte_end":582775,"line_start":239,"line_end":239,"column_start":2,"column_end":5}},{"value":"/ Return the non-negotiable weight consumed for runtime upgrade.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":582777,"byte_end":582843,"line_start":240,"line_end":240,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584218,"byte_end":584233,"line_start":274,"line_end":274,"column_start":5,"column_end":20},"name":"offchain_worker","qualname":"::traits::hooks::Hooks::offchain_worker","value":"pub fn offchain_worker(BlockNumber)","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" Implementing this function on a module allows you to perform long-running tasks\n that make (by default) validators generate transactions that feed results\n of those long-running computations back on chain.","sig":null,"attributes":[{"value":"/ Implementing this function on a module allows you to perform long-running tasks","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583406,"byte_end":583489,"line_start":259,"line_end":259,"column_start":2,"column_end":85}},{"value":"/ that make (by default) validators generate transactions that feed results","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583491,"byte_end":583568,"line_start":260,"line_end":260,"column_start":2,"column_end":79}},{"value":"/ of those long-running computations back on chain.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583570,"byte_end":583623,"line_start":261,"line_end":261,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583625,"byte_end":583628,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ NOTE: This function runs off-chain, so it can access the block state,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583630,"byte_end":583703,"line_start":263,"line_end":263,"column_start":2,"column_end":75}},{"value":"/ but cannot preform any alterations. More specifically alterations are","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583705,"byte_end":583778,"line_start":264,"line_end":264,"column_start":2,"column_end":75}},{"value":"/ not forbidden, but they are not persisted in any way after the worker","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583780,"byte_end":583853,"line_start":265,"line_end":265,"column_start":2,"column_end":75}},{"value":"/ has finished.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583855,"byte_end":583872,"line_start":266,"line_end":266,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583874,"byte_end":583877,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ This function is being called after every block import (when fully synced).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583879,"byte_end":583958,"line_start":268,"line_end":268,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583960,"byte_end":583963,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ Implement this and use any of the `Offchain` `sp_io` set of APIs","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":583965,"byte_end":584033,"line_start":270,"line_end":270,"column_start":2,"column_end":70}},{"value":"/ to perform off-chain computations, calls and submit transactions","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584035,"byte_end":584103,"line_start":271,"line_end":271,"column_start":2,"column_end":70}},{"value":"/ with results to trigger any on-chain changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584105,"byte_end":584154,"line_start":272,"line_end":272,"column_start":2,"column_end":51}},{"value":"/ Any state alterations are lost and are not persisted.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584156,"byte_end":584213,"line_start":273,"line_end":273,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584360,"byte_end":584374,"line_start":279,"line_end":279,"column_start":5,"column_end":19},"name":"integrity_test","qualname":"::traits::hooks::Hooks::integrity_test","value":"pub fn integrity_test()","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" Run integrity test.","sig":null,"attributes":[{"value":"/ Run integrity test.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584256,"byte_end":584279,"line_start":276,"line_end":276,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584281,"byte_end":584284,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ The test is not executed in a externalities provided environment.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584286,"byte_end":584355,"line_start":278,"line_end":278,"column_start":2,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":3682},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584545,"byte_end":584557,"line_start":285,"line_end":285,"column_start":11,"column_end":23},"name":"GenesisBuild","qualname":"::traits::hooks::GenesisBuild","value":"GenesisBuild<T, I = ()>: Default + MaybeSerializeDeserialize","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687}],"decl_id":null,"docs":" A trait to define the build function of a genesis config, T and I are placeholder for pallet\n trait and pallet instance.\n","sig":null,"attributes":[{"value":"/ A trait to define the build function of a genesis config, T and I are placeholder for pallet","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584383,"byte_end":584479,"line_start":282,"line_end":282,"column_start":1,"column_end":97}},{"value":"/ trait and pallet instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584480,"byte_end":584510,"line_start":283,"line_end":283,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584511,"byte_end":584534,"line_start":284,"line_end":284,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584757,"byte_end":584762,"line_start":288,"line_end":288,"column_start":5,"column_end":10},"name":"build","qualname":"::traits::hooks::GenesisBuild::build","value":"pub fn build(&Self)","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" The build function is called within an externalities allowing storage APIs.\n Thus one can write to storage using regular pallet storages.\n","sig":null,"attributes":[{"value":"/ The build function is called within an externalities allowing storage APIs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584607,"byte_end":584686,"line_start":286,"line_end":286,"column_start":2,"column_end":81}},{"value":"/ Thus one can write to storage using regular pallet storages.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584688,"byte_end":584752,"line_start":287,"line_end":287,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3686},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584837,"byte_end":584850,"line_start":291,"line_end":291,"column_start":5,"column_end":18},"name":"build_storage","qualname":"::traits::hooks::GenesisBuild::build_storage","value":"pub fn build_storage(&Self) -> Result<sp_runtime::Storage, String>","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" Build the storage using `build` inside default storage.\n","sig":null,"attributes":[{"value":"/ Build the storage using `build` inside default storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584773,"byte_end":584832,"line_start":290,"line_end":290,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":585075,"byte_end":585093,"line_start":298,"line_end":298,"column_start":5,"column_end":23},"name":"assimilate_storage","qualname":"::traits::hooks::GenesisBuild::assimilate_storage","value":"pub fn assimilate_storage(&Self, &mut sp_runtime::Storage)\n-> Result<(), String>","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" Assimilate the storage for this module into pre-existing overlays.\n","sig":null,"attributes":[{"value":"/ Assimilate the storage for this module into pre-existing overlays.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":585000,"byte_end":585070,"line_start":297,"line_end":297,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":10259},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":585376,"byte_end":585390,"line_start":308,"line_end":308,"column_start":11,"column_end":25},"name":"OnTimestampSet","qualname":"::traits::hooks::OnTimestampSet","value":"OnTimestampSet<Moment>","parent":null,"children":[{"krate":0,"index":10261}],"decl_id":null,"docs":" A trait which is called when the timestamp is set in the runtime.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10261},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":585444,"byte_end":585460,"line_start":310,"line_end":310,"column_start":5,"column_end":21},"name":"on_timestamp_set","qualname":"::traits::hooks::OnTimestampSet::on_timestamp_set","value":"pub fn on_timestamp_set(Moment)","parent":{"krate":0,"index":10259},"children":[],"decl_id":null,"docs":" Called when the timestamp is set.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3714},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schedule","qualname":"::traits::schedule","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":10820},{"krate":0,"index":10828},{"krate":0,"index":10836},{"krate":0,"index":10843},{"krate":0,"index":10845},{"krate":0,"index":10848},{"krate":0,"index":10850},{"krate":0,"index":10854},{"krate":0,"index":10856},{"krate":0,"index":10859},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3755}],"decl_id":null,"docs":" Traits and associated utilities for scheduling dispatchables in FRAME.\n","sig":null,"attributes":[{"value":"/ Traits and associated utilities for scheduling dispatchables in FRAME.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587170,"byte_end":587244,"line_start":18,"line_end":18,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":3740},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587617,"byte_end":587623,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Period","qualname":"::traits::schedule::Period","value":"(BlockNumber, u32)","parent":null,"children":[],"decl_id":null,"docs":" Information relating to the period of a scheduled task. First item is the length of the\n period and the second is the number of times it should be executed in total before the task\n is considered finished and removed.\n","sig":null,"attributes":[{"value":"/ Information relating to the period of a scheduled task. First item is the length of the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587380,"byte_end":587471,"line_start":24,"line_end":24,"column_start":1,"column_end":92}},{"value":"/ period and the second is the number of times it should be executed in total before the task","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587472,"byte_end":587567,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ is considered finished and removed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587568,"byte_end":587607,"line_start":26,"line_end":26,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":3742},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587788,"byte_end":587796,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Priority","qualname":"::traits::schedule::Priority","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Priority with which a call is scheduled. It's just a linear amount with lowest values meaning\n higher priority.\n","sig":null,"attributes":[{"value":"/ Priority with which a call is scheduled. It's just a linear amount with lowest values meaning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587660,"byte_end":587757,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ higher priority.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587758,"byte_end":587778,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10822},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587978,"byte_end":587980,"line_start":37,"line_end":37,"column_start":2,"column_end":4},"name":"At","qualname":"::traits::schedule::DispatchTime::At","value":"DispatchTime::At(BlockNumber)","parent":{"krate":0,"index":10820},"children":[],"decl_id":null,"docs":" At specified block.\n","sig":null,"attributes":[{"value":"/ At specified block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587953,"byte_end":587976,"line_start":36,"line_end":36,"column_start":2,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10825},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588035,"byte_end":588040,"line_start":39,"line_end":39,"column_start":2,"column_end":7},"name":"After","qualname":"::traits::schedule::DispatchTime::After","value":"DispatchTime::After(BlockNumber)","parent":{"krate":0,"index":10820},"children":[],"decl_id":null,"docs":" After specified number of blocks.\n","sig":null,"attributes":[{"value":"/ After specified number of blocks.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587996,"byte_end":588033,"line_start":38,"line_end":38,"column_start":2,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":10820},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587924,"byte_end":587936,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"DispatchTime","qualname":"::traits::schedule::DispatchTime","value":"pub enum DispatchTime<BlockNumber> { At(BlockNumber), After(BlockNumber), }","parent":null,"children":[{"krate":0,"index":10822},{"krate":0,"index":10825}],"decl_id":null,"docs":" The dispatch time of a scheduled task.\n","sig":null,"attributes":[{"value":"/ The dispatch time of a scheduled task.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":587804,"byte_end":587846,"line_start":33,"line_end":33,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":3743},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588203,"byte_end":588219,"line_start":44,"line_end":44,"column_start":11,"column_end":27},"name":"HIGHEST_PRIORITY","qualname":"::traits::schedule::HIGHEST_PRIORITY","value":"Priority","parent":null,"children":[],"decl_id":null,"docs":" The highest priority. We invert the value so that normal sorting will place the highest\n priority at the beginning of the list.\n","sig":null,"attributes":[{"value":"/ The highest priority. We invert the value so that normal sorting will place the highest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588058,"byte_end":588149,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ priority at the beginning of the list.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588150,"byte_end":588192,"line_start":43,"line_end":43,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":3744},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588398,"byte_end":588411,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"HARD_DEADLINE","qualname":"::traits::schedule::HARD_DEADLINE","value":"Priority","parent":null,"children":[],"decl_id":null,"docs":" Anything of this value or lower will definitely be scheduled on the block that they ask for, even\n if it breaches the `MaximumWeight` limitation.\n","sig":null,"attributes":[{"value":"/ Anything of this value or lower will definitely be scheduled on the block that they ask for, even","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588235,"byte_end":588336,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"/ if it breaches the `MaximumWeight` limitation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588337,"byte_end":588387,"line_start":46,"line_end":46,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":3745},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588497,"byte_end":588512,"line_start":49,"line_end":49,"column_start":11,"column_end":26},"name":"LOWEST_PRIORITY","qualname":"::traits::schedule::LOWEST_PRIORITY","value":"Priority","parent":null,"children":[],"decl_id":null,"docs":" The lowest priority. Most stuff should be around here.\n","sig":null,"attributes":[{"value":"/ The lowest priority. Most stuff should be around here.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588428,"byte_end":588486,"line_start":48,"line_end":48,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":3746},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588585,"byte_end":588589,"line_start":52,"line_end":52,"column_start":11,"column_end":15},"name":"Anon","qualname":"::traits::schedule::Anon","value":"Anon<BlockNumber, Call, Origin>","parent":null,"children":[{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754}],"decl_id":null,"docs":" A type that can be used as a scheduler.\n","sig":null,"attributes":[{"value":"/ A type that can be used as a scheduler.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588531,"byte_end":588574,"line_start":51,"line_end":51,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3750},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588690,"byte_end":588697,"line_start":54,"line_end":54,"column_start":7,"column_end":14},"name":"Address","qualname":"::traits::schedule::Anon::Address","value":"type Address: Codec + Clone + Eq + EncodeLike + Debug;","parent":{"krate":0,"index":3746},"children":[],"decl_id":null,"docs":" An address which can be used for removing a scheduled task.\n","sig":null,"attributes":[{"value":"/ An address which can be used for removing a scheduled task.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588620,"byte_end":588683,"line_start":53,"line_end":53,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588855,"byte_end":588863,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"name":"schedule","qualname":"::traits::schedule::Anon::schedule","value":"pub fn schedule(DispatchTime<BlockNumber>, Option<Period<BlockNumber>>,\n                Priority, Origin, Call)\n-> Result<Self::Address, DispatchError>","parent":{"krate":0,"index":3746},"children":[],"decl_id":null,"docs":" Schedule a dispatch to happen at the beginning of some block in the future.","sig":null,"attributes":[{"value":"/ Schedule a dispatch to happen at the beginning of some block in the future.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588742,"byte_end":588821,"line_start":56,"line_end":56,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588823,"byte_end":588826,"line_start":57,"line_end":57,"column_start":2,"column_end":5}},{"value":"/ This is not named.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":588828,"byte_end":588850,"line_start":58,"line_end":58,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589568,"byte_end":589574,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"cancel","qualname":"::traits::schedule::Anon::cancel","value":"pub fn cancel(Self::Address) -> Result<(), ()>","parent":{"krate":0,"index":3746},"children":[],"decl_id":null,"docs":" Cancel a scheduled task. If periodic, then it will cancel all further instances of that,\n also.","sig":null,"attributes":[{"value":"/ Cancel a scheduled task. If periodic, then it will cancel all further instances of that,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589046,"byte_end":589138,"line_start":67,"line_end":67,"column_start":2,"column_end":94}},{"value":"/ also.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589140,"byte_end":589149,"line_start":68,"line_end":68,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589151,"byte_end":589154,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ Will return an error if the `address` is invalid.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589156,"byte_end":589209,"line_start":70,"line_end":70,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589211,"byte_end":589214,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ NOTE: This guaranteed to work only *before* the point that it is due to be executed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589216,"byte_end":589304,"line_start":72,"line_end":72,"column_start":2,"column_end":90}},{"value":"/ If it ends up being delayed beyond the point of execution, then it cannot be cancelled.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589306,"byte_end":589397,"line_start":73,"line_end":73,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589399,"byte_end":589402,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ NOTE2: This will not work to cancel periodic tasks after their initial execution. For","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589404,"byte_end":589493,"line_start":75,"line_end":75,"column_start":2,"column_end":91}},{"value":"/ that, you must name the task explicitly using the `Named` trait.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589495,"byte_end":589563,"line_start":76,"line_end":76,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589975,"byte_end":589985,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"reschedule","qualname":"::traits::schedule::Anon::reschedule","value":"pub fn reschedule(Self::Address, DispatchTime<BlockNumber>)\n-> Result<Self::Address, DispatchError>","parent":{"krate":0,"index":3746},"children":[],"decl_id":null,"docs":" Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\n only if it is executed *before* the currently scheduled block. For periodic tasks,\n this dispatch is guaranteed to succeed only before the *initial* execution; for\n others, use `reschedule_named`.","sig":null,"attributes":[{"value":"/ Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589620,"byte_end":589700,"line_start":79,"line_end":79,"column_start":2,"column_end":82}},{"value":"/ only if it is executed *before* the currently scheduled block. For periodic tasks,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589702,"byte_end":589788,"line_start":80,"line_end":80,"column_start":2,"column_end":88}},{"value":"/ this dispatch is guaranteed to succeed only before the *initial* execution; for","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589790,"byte_end":589873,"line_start":81,"line_end":81,"column_start":2,"column_end":85}},{"value":"/ others, use `reschedule_named`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589875,"byte_end":589910,"line_start":82,"line_end":82,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589912,"byte_end":589915,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ Will return an error if the `address` is invalid.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":589917,"byte_end":589970,"line_start":84,"line_end":84,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590210,"byte_end":590228,"line_start":93,"line_end":93,"column_start":5,"column_end":23},"name":"next_dispatch_time","qualname":"::traits::schedule::Anon::next_dispatch_time","value":"pub fn next_dispatch_time(Self::Address) -> Result<BlockNumber, ()>","parent":{"krate":0,"index":3746},"children":[],"decl_id":null,"docs":" Return the next dispatch time for a given task.","sig":null,"attributes":[{"value":"/ Return the next dispatch time for a given task.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590094,"byte_end":590145,"line_start":90,"line_end":90,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590147,"byte_end":590150,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ Will return an error if the `address` is invalid.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590152,"byte_end":590205,"line_start":92,"line_end":92,"column_start":2,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":3755},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590338,"byte_end":590343,"line_start":97,"line_end":97,"column_start":11,"column_end":16},"name":"Named","qualname":"::traits::schedule::Named","value":"Named<BlockNumber, Call, Origin>","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3763}],"decl_id":null,"docs":" A type that can be used as a scheduler.\n","sig":null,"attributes":[{"value":"/ A type that can be used as a scheduler.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590284,"byte_end":590327,"line_start":96,"line_end":96,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3759},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590444,"byte_end":590451,"line_start":99,"line_end":99,"column_start":7,"column_end":14},"name":"Address","qualname":"::traits::schedule::Named::Address","value":"type Address: Codec + Clone + Eq + EncodeLike + sp_std::fmt::Debug;","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":" An address which can be used for removing a scheduled task.\n","sig":null,"attributes":[{"value":"/ An address which can be used for removing a scheduled task.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590374,"byte_end":590437,"line_start":98,"line_end":98,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590690,"byte_end":590704,"line_start":104,"line_end":104,"column_start":5,"column_end":19},"name":"schedule_named","qualname":"::traits::schedule::Named::schedule_named","value":"pub fn schedule_named(Vec<u8>, DispatchTime<BlockNumber>,\n                      Option<Period<BlockNumber>>, Priority, Origin, Call)\n-> Result<Self::Address, ()>","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":" Schedule a dispatch to happen at the beginning of some block in the future.","sig":null,"attributes":[{"value":"/ Schedule a dispatch to happen at the beginning of some block in the future.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590509,"byte_end":590588,"line_start":101,"line_end":101,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590590,"byte_end":590593,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ - `id`: The identity of the task. This must be unique and will return an error if not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590595,"byte_end":590685,"line_start":103,"line_end":103,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591249,"byte_end":591261,"line_start":120,"line_end":120,"column_start":5,"column_end":17},"name":"cancel_named","qualname":"::traits::schedule::Named::cancel_named","value":"pub fn cancel_named(Vec<u8>) -> Result<(), ()>","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":" Cancel a scheduled, named task. If periodic, then it will cancel all further instances\n of that, also.","sig":null,"attributes":[{"value":"/ Cancel a scheduled, named task. If periodic, then it will cancel all further instances","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590891,"byte_end":590981,"line_start":113,"line_end":113,"column_start":2,"column_end":92}},{"value":"/ of that, also.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":590983,"byte_end":591001,"line_start":114,"line_end":114,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591003,"byte_end":591006,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ Will return an error if the `id` is invalid.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591008,"byte_end":591056,"line_start":116,"line_end":116,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591058,"byte_end":591061,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ NOTE: This guaranteed to work only *before* the point that it is due to be executed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591063,"byte_end":591151,"line_start":118,"line_end":118,"column_start":2,"column_end":90}},{"value":"/ If it ends up being delayed beyond the point of execution, then it cannot be cancelled.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591153,"byte_end":591244,"line_start":119,"line_end":119,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591449,"byte_end":591465,"line_start":124,"line_end":124,"column_start":5,"column_end":21},"name":"reschedule_named","qualname":"::traits::schedule::Named::reschedule_named","value":"pub fn reschedule_named(Vec<u8>, DispatchTime<BlockNumber>)\n-> Result<Self::Address, DispatchError>","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":" Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed\n only if it is executed *before* the currently scheduled block.\n","sig":null,"attributes":[{"value":"/ Reschedule a task. For one-off tasks, this dispatch is guaranteed to succeed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591296,"byte_end":591376,"line_start":122,"line_end":122,"column_start":2,"column_end":82}},{"value":"/ only if it is executed *before* the currently scheduled block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591378,"byte_end":591444,"line_start":123,"line_end":123,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591674,"byte_end":591692,"line_start":132,"line_end":132,"column_start":5,"column_end":23},"name":"next_dispatch_time","qualname":"::traits::schedule::Named::next_dispatch_time","value":"pub fn next_dispatch_time(Vec<u8>) -> Result<BlockNumber, ()>","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":" Return the next dispatch time for a given task.","sig":null,"attributes":[{"value":"/ Return the next dispatch time for a given task.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591563,"byte_end":591614,"line_start":129,"line_end":129,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591616,"byte_end":591619,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ Will return an error if the `id` is invalid.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/schedule.rs","byte_start":591621,"byte_end":591669,"line_start":131,"line_end":131,"column_start":2,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3765},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592783,"byte_end":592791,"line_start":26,"line_end":26,"column_start":11,"column_end":19},"name":"Instance","qualname":"::traits::storage::Instance","value":"Instance: 'static","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3767}],"decl_id":null,"docs":" An instance of a pallet in the storage.","sig":null,"attributes":[{"value":"/ An instance of a pallet in the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592488,"byte_end":592531,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592532,"byte_end":592535,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It is required that these instances are unique, to support multiple instances per pallet in the same runtime!","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592536,"byte_end":592649,"line_start":22,"line_end":22,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592650,"byte_end":592653,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ E.g. for module MyModule default instance will have prefix \"MyModule\" and other instances","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592654,"byte_end":592747,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/ \"InstanceNMyModule\".","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592748,"byte_end":592772,"line_start":25,"line_end":25,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":3766},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592876,"byte_end":592882,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"PREFIX","qualname":"::traits::storage::Instance::PREFIX","value":"&'static str","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":" Unique module prefix. E.g. \"InstanceNMyModule\" or \"MyModule\"\n","sig":null,"attributes":[{"value":"/ Unique module prefix. E.g. \"InstanceNMyModule\" or \"MyModule\"","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592804,"byte_end":592868,"line_start":27,"line_end":27,"column_start":2,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":3767},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592955,"byte_end":592960,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"INDEX","qualname":"::traits::storage::Instance::INDEX","value":"u8","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":" Unique numerical identifier for an instance.\n","sig":null,"attributes":[{"value":"/ Unique numerical identifier for an instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592899,"byte_end":592947,"line_start":29,"line_end":29,"column_start":2,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3768},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593412,"byte_end":593427,"line_start":41,"line_end":41,"column_start":11,"column_end":26},"name":"StorageInstance","qualname":"::traits::storage::StorageInstance","value":"StorageInstance","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770}],"decl_id":null,"docs":" An instance of a storage in a pallet.","sig":null,"attributes":[{"value":"/ An instance of a storage in a pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":592969,"byte_end":593010,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593011,"byte_end":593014,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Define an instance for an individual storage inside a pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593015,"byte_end":593080,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/ The pallet prefix is used to isolate the storage between pallets, and the storage prefix is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593081,"byte_end":593176,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ used to isolate storages inside a pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593177,"byte_end":593222,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593223,"byte_end":593226,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ NOTE: These information can be used to define storages in pallet such as a `StorageMap` which","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593227,"byte_end":593324,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/ can use keys after `twox_128(pallet_prefix())++twox_128(STORAGE_PREFIX)`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593325,"byte_end":593401,"line_start":40,"line_end":40,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593492,"byte_end":593505,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"name":"pallet_prefix","qualname":"::traits::storage::StorageInstance::pallet_prefix","value":"pub fn pallet_prefix() -> &'static str","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" Prefix of a pallet to isolate it from other pallets.\n","sig":null,"attributes":[{"value":"/ Prefix of a pallet to isolate it from other pallets.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593431,"byte_end":593487,"line_start":42,"line_end":42,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":3770},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593610,"byte_end":593624,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"STORAGE_PREFIX","qualname":"::traits::storage::StorageInstance::STORAGE_PREFIX","value":"&'static str","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" Prefix given to a storage to isolate from other storages in the pallet.\n","sig":null,"attributes":[{"value":"/ Prefix given to a storage to isolate from other storages in the pallet.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/storage.rs","byte_start":593527,"byte_end":593602,"line_start":45,"line_end":45,"column_start":2,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":3785},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594584,"byte_end":594596,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"EnsureOrigin","qualname":"::traits::dispatch::EnsureOrigin","value":"EnsureOrigin<OuterOrigin>","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3790}],"decl_id":null,"docs":" Some sort of check on the origin is performed by this object.\n","sig":null,"attributes":[{"value":"/ Some sort of check on the origin is performed by this object.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594508,"byte_end":594573,"line_start":23,"line_end":23,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":3787},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594638,"byte_end":594645,"line_start":26,"line_end":26,"column_start":7,"column_end":14},"name":"Success","qualname":"::traits::dispatch::EnsureOrigin::Success","value":"type Success;","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" A return type.\n","sig":null,"attributes":[{"value":"/ A return type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594613,"byte_end":594631,"line_start":25,"line_end":25,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594682,"byte_end":594695,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"ensure_origin","qualname":"::traits::dispatch::EnsureOrigin::ensure_origin","value":"pub fn ensure_origin(OuterOrigin) -> Result<Self::Success, BadOrigin>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Perform the origin check.\n","sig":null,"attributes":[{"value":"/ Perform the origin check.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594648,"byte_end":594677,"line_start":27,"line_end":27,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594833,"byte_end":594843,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"try_origin","qualname":"::traits::dispatch::EnsureOrigin::try_origin","value":"pub fn try_origin(OuterOrigin) -> Result<Self::Success, OuterOrigin>","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":" Perform the origin check.\n","sig":null,"attributes":[{"value":"/ Perform the origin check.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":594799,"byte_end":594828,"line_start":31,"line_end":31,"column_start":2,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":3791},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595353,"byte_end":595375,"line_start":45,"line_end":45,"column_start":11,"column_end":33},"name":"UnfilteredDispatchable","qualname":"::traits::dispatch::UnfilteredDispatchable","value":"UnfilteredDispatchable","parent":null,"children":[{"krate":0,"index":3792},{"krate":0,"index":3793}],"decl_id":null,"docs":" Type that can be dispatched with an origin but without checking the origin filter.","sig":null,"attributes":[{"value":"/ Type that can be dispatched with an origin but without checking the origin filter.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595107,"byte_end":595193,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595194,"byte_end":595197,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Implemented for pallet dispatchable type by `decl_module` and for runtime dispatchable by","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595198,"byte_end":595291,"line_start":43,"line_end":43,"column_start":1,"column_end":94}},{"value":"/ `construct_runtime` and `impl_outer_dispatch`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595292,"byte_end":595342,"line_start":44,"line_end":44,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3792},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595460,"byte_end":595466,"line_start":47,"line_end":47,"column_start":7,"column_end":13},"name":"Origin","qualname":"::traits::dispatch::UnfilteredDispatchable::Origin","value":"type Origin;","parent":{"krate":0,"index":3791},"children":[],"decl_id":null,"docs":" The origin type of the runtime, (i.e. `frame_system::Config::Origin`).\n","sig":null,"attributes":[{"value":"/ The origin type of the runtime, (i.e. `frame_system::Config::Origin`).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595379,"byte_end":595453,"line_start":46,"line_end":46,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595536,"byte_end":595558,"line_start":50,"line_end":50,"column_start":5,"column_end":27},"name":"dispatch_bypass_filter","qualname":"::traits::dispatch::UnfilteredDispatchable::dispatch_bypass_filter","value":"pub fn dispatch_bypass_filter(Self, Self::Origin)\n-> DispatchResultWithPostInfo","parent":{"krate":0,"index":3791},"children":[],"decl_id":null,"docs":" Dispatch this call but do not check the filter in origin.\n","sig":null,"attributes":[{"value":"/ Dispatch this call but do not check the filter in origin.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595470,"byte_end":595531,"line_start":49,"line_end":49,"column_start":2,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":3794},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595688,"byte_end":595699,"line_start":54,"line_end":54,"column_start":11,"column_end":22},"name":"OriginTrait","qualname":"::traits::dispatch::OriginTrait","value":"OriginTrait: Sized","parent":null,"children":[{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810}],"decl_id":null,"docs":" Methods available on `frame_system::Config::Origin`.\n","sig":null,"attributes":[{"value":"/ Methods available on `frame_system::Config::Origin`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595621,"byte_end":595677,"line_start":53,"line_end":53,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3795},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595774,"byte_end":595778,"line_start":56,"line_end":56,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::dispatch::OriginTrait::Call","value":"type Call;","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Runtime call type, as in `frame_system::Config::Call`\n","sig":null,"attributes":[{"value":"/ Runtime call type, as in `frame_system::Config::Call`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595710,"byte_end":595767,"line_start":55,"line_end":55,"column_start":2,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":3796},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595852,"byte_end":595865,"line_start":59,"line_end":59,"column_start":7,"column_end":20},"name":"PalletsOrigin","qualname":"::traits::dispatch::OriginTrait::PalletsOrigin","value":"type PalletsOrigin;","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" The caller origin, overarching type of all pallets origins.\n","sig":null,"attributes":[{"value":"/ The caller origin, overarching type of all pallets origins.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595782,"byte_end":595845,"line_start":58,"line_end":58,"column_start":2,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3797},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595917,"byte_end":595926,"line_start":62,"line_end":62,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::dispatch::OriginTrait::AccountId","value":"type AccountId;","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" The AccountId used across the system.\n","sig":null,"attributes":[{"value":"/ The AccountId used across the system.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595869,"byte_end":595910,"line_start":61,"line_end":61,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595966,"byte_end":595976,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"name":"add_filter","qualname":"::traits::dispatch::OriginTrait::add_filter","value":"pub fn add_filter<impl Fn(&Self::Call) -> bool + 'static: Fn(&Self::Call) ->\n                  bool +\n                  'static>(&mut Self, impl Fn(&Self::Call) -> bool + 'static)","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Add a filter to the origin.\n","sig":null,"attributes":[{"value":"/ Add a filter to the origin.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595930,"byte_end":595961,"line_start":64,"line_end":64,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596128,"byte_end":596140,"line_start":68,"line_end":68,"column_start":5,"column_end":17},"name":"reset_filter","qualname":"::traits::dispatch::OriginTrait::reset_filter","value":"pub fn reset_filter(&mut Self)","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Reset origin filters to default one, i.e `frame_system::Config::BaseCallFilter`.\n","sig":null,"attributes":[{"value":"/ Reset origin filters to default one, i.e `frame_system::Config::BaseCallFilter`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596039,"byte_end":596123,"line_start":67,"line_end":67,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596216,"byte_end":596231,"line_start":71,"line_end":71,"column_start":5,"column_end":20},"name":"set_caller_from","qualname":"::traits::dispatch::OriginTrait::set_caller_from","value":"pub fn set_caller_from<impl Into<Self>: Into<Self>>(&mut Self,\n                                                    impl Into<Self>)","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Replace the caller with caller from the other origin\n","sig":null,"attributes":[{"value":"/ Replace the caller with caller from the other origin","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596155,"byte_end":596211,"line_start":70,"line_end":70,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596331,"byte_end":596342,"line_start":74,"line_end":74,"column_start":5,"column_end":16},"name":"filter_call","qualname":"::traits::dispatch::OriginTrait::filter_call","value":"pub fn filter_call(&Self, &Self::Call) -> bool","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Filter the call, if false then call is filtered out.\n","sig":null,"attributes":[{"value":"/ Filter the call, if false then call is filtered out.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596270,"byte_end":596326,"line_start":73,"line_end":73,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596404,"byte_end":596410,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"caller","qualname":"::traits::dispatch::OriginTrait::caller","value":"pub fn caller(&Self) -> &Self::PalletsOrigin","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Get the caller.\n","sig":null,"attributes":[{"value":"/ Get the caller.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596380,"byte_end":596399,"line_start":76,"line_end":76,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596541,"byte_end":596556,"line_start":80,"line_end":80,"column_start":5,"column_end":20},"name":"try_with_caller","qualname":"::traits::dispatch::OriginTrait::try_with_caller","value":"pub fn try_with_caller<R,\n                       impl FnOnce(Self::PalletsOrigin) -> Result<R, Self::PalletsOrigin>: FnOnce(Self::PalletsOrigin)\n                       ->\n                       Result<R,\n                              Self::PalletsOrigin>>(Self,\n                                                    impl FnOnce(Self::PalletsOrigin) -> Result<R, Self::PalletsOrigin>)\n-> Result<R, Self>","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Do something with the caller, consuming self but returning it if the caller was unused.\n","sig":null,"attributes":[{"value":"/ Do something with the caller, consuming self but returning it if the caller was unused.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596445,"byte_end":596536,"line_start":79,"line_end":79,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596750,"byte_end":596754,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"name":"none","qualname":"::traits::dispatch::OriginTrait::none","value":"pub fn none() -> Self","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Create with system none origin and `frame-system::Config::BaseCallFilter`.\n","sig":null,"attributes":[{"value":"/ Create with system none origin and `frame-system::Config::BaseCallFilter`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596667,"byte_end":596745,"line_start":85,"line_end":85,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596822,"byte_end":596826,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"root","qualname":"::traits::dispatch::OriginTrait::root","value":"pub fn root() -> Self","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Create with system root origin and no filter.\n","sig":null,"attributes":[{"value":"/ Create with system root origin and no filter.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596768,"byte_end":596817,"line_start":88,"line_end":88,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596925,"byte_end":596931,"line_start":92,"line_end":92,"column_start":5,"column_end":11},"name":"signed","qualname":"::traits::dispatch::OriginTrait::signed","value":"pub fn signed(Self::AccountId) -> Self","parent":{"krate":0,"index":3794},"children":[],"decl_id":null,"docs":" Create with system signed origin and `frame-system::Config::BaseCallFilter`.\n","sig":null,"attributes":[{"value":"/ Create with system signed origin and `frame-system::Config::BaseCallFilter`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":596840,"byte_end":596920,"line_start":91,"line_end":91,"column_start":2,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":3832},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598504,"byte_end":598518,"line_start":35,"line_end":35,"column_start":11,"column_end":25},"name":"CurrencyToVote","qualname":"::traits::voting::CurrencyToVote","value":"CurrencyToVote<B>","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3835}],"decl_id":null,"docs":" A trait similar to `Convert` to convert values from `B` an abstract balance type\n into u64 and back from u128. (This conversion is used in election and other places where complex\n calculation over balance type is needed)","sig":null,"attributes":[{"value":"/ A trait similar to `Convert` to convert values from `B` an abstract balance type","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":597851,"byte_end":597935,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ into u64 and back from u128. (This conversion is used in election and other places where complex","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":597936,"byte_end":598036,"line_start":24,"line_end":24,"column_start":1,"column_end":101}},{"value":"/ calculation over balance type is needed)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598037,"byte_end":598081,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598082,"byte_end":598085,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Total issuance of the currency is passed in, but an implementation of this trait may or may not","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598086,"byte_end":598185,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ use it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598186,"byte_end":598197,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598198,"byte_end":598201,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # WARNING","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598202,"byte_end":598215,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598216,"byte_end":598219,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ the total issuance being passed in implies that the implementation must be aware of the fact","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598220,"byte_end":598316,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ that its values can affect the outcome. This implies that if the vote value is dependent on the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598317,"byte_end":598416,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/ total issuance, it should never ber written to storage for later re-use.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598417,"byte_end":598493,"line_start":34,"line_end":34,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598557,"byte_end":598564,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"to_vote","qualname":"::traits::voting::CurrencyToVote::to_vote","value":"pub fn to_vote(B, B) -> u64","parent":{"krate":0,"index":3832},"children":[],"decl_id":null,"docs":" Convert balance to u64.\n","sig":null,"attributes":[{"value":"/ Convert balance to u64.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598525,"byte_end":598552,"line_start":36,"line_end":36,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598631,"byte_end":598642,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"name":"to_currency","qualname":"::traits::voting::CurrencyToVote::to_currency","value":"pub fn to_currency(u128, B) -> B","parent":{"krate":0,"index":3832},"children":[],"decl_id":null,"docs":" Convert u128 to balance.\n","sig":null,"attributes":[{"value":"/ Convert u128 to balance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598598,"byte_end":598626,"line_start":39,"line_end":39,"column_start":2,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3836},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599322,"byte_end":599340,"line_start":54,"line_end":54,"column_start":12,"column_end":30},"name":"U128CurrencyToVote","qualname":"::traits::voting::U128CurrencyToVote","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of `CurrencyToVote` tailored for chain's that have a balance type of u128.","sig":null,"attributes":[{"value":"/ An implementation of `CurrencyToVote` tailored for chain's that have a balance type of u128.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598678,"byte_end":598774,"line_start":43,"line_end":43,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598775,"byte_end":598778,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The factor is the `(total_issuance / u64::max()).max(1)`, represented as u64. Let's look at the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598779,"byte_end":598878,"line_start":45,"line_end":45,"column_start":1,"column_end":100}},{"value":"/ important cases:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598879,"byte_end":598899,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598900,"byte_end":598903,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ If the chain's total issuance is less than u64::max(), this will always be 1, which means that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":598904,"byte_end":599002,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ the factor will not have any effect. In this case, any account's balance is also less. Thus,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599003,"byte_end":599099,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ both of the conversions are basically an `as`; Any balance can fit in u64.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599100,"byte_end":599178,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599179,"byte_end":599182,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ If the chain's total issuance is more than 2*u64::max(), then a factor might be multiplied and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599183,"byte_end":599281,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ divided upon conversion.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599282,"byte_end":599310,"line_start":53,"line_end":53,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599946,"byte_end":599970,"line_start":78,"line_end":78,"column_start":12,"column_end":36},"name":"SaturatingCurrencyToVote","qualname":"::traits::voting::SaturatingCurrencyToVote","value":"","parent":null,"children":[],"decl_id":null,"docs":" A naive implementation of `CurrencyConvert` that simply saturates all conversions.","sig":null,"attributes":[{"value":"/ A naive implementation of `CurrencyConvert` that simply saturates all conversions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599725,"byte_end":599811,"line_start":73,"line_end":73,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599812,"byte_end":599815,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599816,"byte_end":599829,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599830,"byte_end":599833,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This is designed to be used mostly for testing. Use with care, and think about the consequences.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599834,"byte_end":599934,"line_start":77,"line_end":77,"column_start":1,"column_end":101}}]},{"kind":"Mod","id":{"krate":0,"index":3859},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"weights","qualname":"::weights","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":3912},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3947},{"krate":0,"index":10890},{"krate":0,"index":10895},{"krate":0,"index":10897},{"krate":0,"index":10898},{"krate":0,"index":10899},{"krate":0,"index":10901},{"krate":0,"index":10902},{"krate":0,"index":10904},{"krate":0,"index":10906},{"krate":0,"index":10912},{"krate":0,"index":3950},{"krate":0,"index":10965},{"krate":0,"index":10972},{"krate":0,"index":10973},{"krate":0,"index":10975},{"krate":0,"index":10976},{"krate":0,"index":10978},{"krate":0,"index":10980},{"krate":0,"index":10981},{"krate":0,"index":10987},{"krate":0,"index":10993},{"krate":0,"index":10918},{"krate":0,"index":10924},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":3961},{"krate":0,"index":3964},{"krate":0,"index":3968},{"krate":0,"index":10995},{"krate":0,"index":10999},{"krate":0,"index":11001},{"krate":0,"index":11002},{"krate":0,"index":11003},{"krate":0,"index":11005},{"krate":0,"index":11006},{"krate":0,"index":11009},{"krate":0,"index":11011},{"krate":0,"index":11013},{"krate":0,"index":11019},{"krate":0,"index":3979},{"krate":0,"index":11024},{"krate":0,"index":11027},{"krate":0,"index":11029},{"krate":0,"index":11030},{"krate":0,"index":11031},{"krate":0,"index":11033},{"krate":0,"index":11034},{"krate":0,"index":11037},{"krate":0,"index":11039},{"krate":0,"index":11041},{"krate":0,"index":11047},{"krate":0,"index":3981},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3988},{"krate":0,"index":3990},{"krate":0,"index":3992},{"krate":0,"index":3994},{"krate":0,"index":3996},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4007},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4045},{"krate":0,"index":4050},{"krate":0,"index":4056},{"krate":0,"index":4061},{"krate":0,"index":4067},{"krate":0,"index":4072},{"krate":0,"index":4078},{"krate":0,"index":4084},{"krate":0,"index":4089},{"krate":0,"index":11052},{"krate":0,"index":11055},{"krate":0,"index":11057},{"krate":0,"index":11058},{"krate":0,"index":11059},{"krate":0,"index":11061},{"krate":0,"index":11062},{"krate":0,"index":11065},{"krate":0,"index":11067},{"krate":0,"index":11069},{"krate":0,"index":11075},{"krate":0,"index":4093},{"krate":0,"index":11080},{"krate":0,"index":11086},{"krate":0,"index":11089},{"krate":0,"index":11097},{"krate":0,"index":4097},{"krate":0,"index":4100},{"krate":0,"index":4105},{"krate":0,"index":4109},{"krate":0,"index":11103},{"krate":0,"index":11108},{"krate":0,"index":11111},{"krate":0,"index":11113},{"krate":0,"index":11116},{"krate":0,"index":11118},{"krate":0,"index":11122},{"krate":0,"index":11125},{"krate":0,"index":11128},{"krate":0,"index":11136},{"krate":0,"index":4113},{"krate":0,"index":4119},{"krate":0,"index":4123}],"decl_id":null,"docs":" # Primitives for transaction weighting.","sig":null,"attributes":[{"value":"/ # Primitives for transaction weighting.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":600925,"byte_end":600968,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":600969,"byte_end":600972,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Every dispatchable function is responsible for providing `#[weight = $x]` attribute. In this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":600973,"byte_end":601069,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ snipped, `$x` can be any user provided struct that implements the following traits:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601070,"byte_end":601157,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601158,"byte_end":601161,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - [`WeighData`]: the weight amount.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601162,"byte_end":601201,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ - [`ClassifyDispatch`]: class of the dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601202,"byte_end":601252,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ - [`PaysFee`]: weather this weight should be translated to fee and deducted upon dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601253,"byte_end":601347,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601348,"byte_end":601351,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Substrate then bundles the output information of the three traits into [`DispatchInfo`] struct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601352,"byte_end":601450,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ and provides it by implementing the [`GetDispatchInfo`] for all `Call` both inner and outer call","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601451,"byte_end":601551,"line_start":28,"line_end":28,"column_start":1,"column_end":101}},{"value":"/ types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601552,"byte_end":601562,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601563,"byte_end":601566,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Substrate provides two pre-defined ways to annotate weight:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601567,"byte_end":601630,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601631,"byte_end":601634,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ### 1. Fixed values","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601635,"byte_end":601658,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601659,"byte_end":601662,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This can only be used when all 3 traits can be resolved statically. You have 3 degrees of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601663,"byte_end":601756,"line_start":35,"line_end":35,"column_start":1,"column_end":94}},{"value":"/ configuration:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601757,"byte_end":601775,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601776,"byte_end":601779,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ 1. Define only weight, **in which case `ClassifyDispatch` will be `Normal` and `PaysFee` will be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601780,"byte_end":601880,"line_start":38,"line_end":38,"column_start":1,"column_end":101}},{"value":"/    `Yes`**.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601881,"byte_end":601896,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601897,"byte_end":601900,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601901,"byte_end":601908,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # use frame_system::Config;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601909,"byte_end":601940,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ frame_support::decl_module! {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601941,"byte_end":601974,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/     pub struct Module<T: Config> for enum Call where origin: T::Origin {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":601975,"byte_end":602051,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/         #[weight = 1000]","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602052,"byte_end":602080,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         fn dispatching(origin) { unimplemented!() }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602081,"byte_end":602136,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602137,"byte_end":602146,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602147,"byte_end":602152,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602153,"byte_end":602171,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602172,"byte_end":602179,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602180,"byte_end":602183,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ 2.1 Define weight and class, **in which case `PaysFee` would be `Yes`**.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602184,"byte_end":602260,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602261,"byte_end":602264,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602265,"byte_end":602272,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # use frame_system::Config;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602273,"byte_end":602304,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ # use frame_support::weights::DispatchClass;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602305,"byte_end":602353,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ frame_support::decl_module! {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602354,"byte_end":602387,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     pub struct Module<T: Config> for enum Call where origin: T::Origin {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602388,"byte_end":602464,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/         #[weight = (1000, DispatchClass::Operational)]","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602465,"byte_end":602523,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/         fn dispatching(origin) { unimplemented!() }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602524,"byte_end":602579,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602580,"byte_end":602589,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602590,"byte_end":602595,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602596,"byte_end":602614,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602615,"byte_end":602622,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602623,"byte_end":602626,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ 2.2 Define weight and `PaysFee`, **in which case `ClassifyDispatch` would be `Normal`**.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602627,"byte_end":602719,"line_start":66,"line_end":66,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602720,"byte_end":602723,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602724,"byte_end":602731,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # use frame_system::Config;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602732,"byte_end":602763,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/ # use frame_support::weights::Pays;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602764,"byte_end":602803,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ frame_support::decl_module! {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602804,"byte_end":602837,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/     pub struct Module<T: Config> for enum Call where origin: T::Origin {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602838,"byte_end":602914,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/         #[weight = (1000, Pays::No)]","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602915,"byte_end":602955,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/         fn dispatching(origin) { unimplemented!() }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":602956,"byte_end":603011,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603012,"byte_end":603021,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603022,"byte_end":603027,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603028,"byte_end":603046,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603047,"byte_end":603054,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603055,"byte_end":603058,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ 3. Define all 3 parameters.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603059,"byte_end":603090,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603091,"byte_end":603094,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603095,"byte_end":603102,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # use frame_system::Config;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603103,"byte_end":603134,"line_start":83,"line_end":83,"column_start":1,"column_end":32}},{"value":"/ # use frame_support::weights::{DispatchClass, Pays};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603135,"byte_end":603191,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/ frame_support::decl_module! {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603192,"byte_end":603225,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/     pub struct Module<T: Config> for enum Call where origin: T::Origin {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603226,"byte_end":603302,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/         #[weight = (1000, DispatchClass::Operational, Pays::No)]","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603303,"byte_end":603371,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/         fn dispatching(origin) { unimplemented!() }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603372,"byte_end":603427,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603428,"byte_end":603437,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603438,"byte_end":603443,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603444,"byte_end":603462,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603463,"byte_end":603470,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603471,"byte_end":603474,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ### 2. Define weights as a function of input arguments using `FunctionOf` tuple struct.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603475,"byte_end":603566,"line_start":94,"line_end":94,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603567,"byte_end":603570,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This struct works in a similar manner as above. 3 items must be provided and each can be either","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603571,"byte_end":603670,"line_start":96,"line_end":96,"column_start":1,"column_end":100}},{"value":"/ a fixed value or a function/closure with the same parameters list as the dispatchable function","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603671,"byte_end":603769,"line_start":97,"line_end":97,"column_start":1,"column_end":99}},{"value":"/ itself, wrapper in a tuple.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603770,"byte_end":603801,"line_start":98,"line_end":98,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603802,"byte_end":603805,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Using this only makes sense if you want to use a function for at least one of the elements. If","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603806,"byte_end":603904,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ all 3 are static values, providing a raw tuple is easier.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603905,"byte_end":603966,"line_start":101,"line_end":101,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603967,"byte_end":603970,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603971,"byte_end":603978,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ # use frame_system::Config;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":603979,"byte_end":604010,"line_start":104,"line_end":104,"column_start":1,"column_end":32}},{"value":"/ # use frame_support::weights::{DispatchClass, FunctionOf, Pays};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604011,"byte_end":604079,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ frame_support::decl_module! {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604080,"byte_end":604113,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/     pub struct Module<T: Config> for enum Call where origin: T::Origin {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604114,"byte_end":604190,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/         #[weight = FunctionOf(","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604191,"byte_end":604225,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ \t\t\t// weight, function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604226,"byte_end":604253,"line_start":109,"line_end":109,"column_start":1,"column_end":28}},{"value":"/ \t\t\t|args: (&u32, &u64)| *args.0 as u64 + args.1,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604254,"byte_end":604306,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/ \t\t\t// class, fixed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604307,"byte_end":604330,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"/ \t\t\tDispatchClass::Operational,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604331,"byte_end":604365,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ \t\t\t// pays fee, function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604366,"byte_end":604395,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/ \t\t\t|args: (&u32, &u64)| if *args.0 > 1000 { Pays::Yes } else { Pays::No },","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604396,"byte_end":604474,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ \t\t)]","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604475,"byte_end":604483,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/         fn dispatching(origin, a: u32, b: u64) { unimplemented!() }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604484,"byte_end":604555,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/     }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604556,"byte_end":604565,"line_start":117,"line_end":117,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604566,"byte_end":604571,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604572,"byte_end":604590,"line_start":119,"line_end":119,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604591,"byte_end":604598,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ FRAME assumes a weight of `1_000_000_000_000` equals 1 second of compute on a standard machine.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604599,"byte_end":604698,"line_start":121,"line_end":121,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604699,"byte_end":604702,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Latest machine specification used to benchmark are:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604703,"byte_end":604758,"line_start":123,"line_end":123,"column_start":1,"column_end":56}},{"value":"/ - Digital Ocean: ubuntu-s-2vcpu-4gb-ams3-01","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604759,"byte_end":604806,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ - 2x Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604807,"byte_end":604857,"line_start":125,"line_end":125,"column_start":1,"column_end":51}},{"value":"/ - 4GB RAM","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604858,"byte_end":604871,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/ - Ubuntu 19.10 (GNU/Linux 5.3.0-18-generic x86_64)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604872,"byte_end":604926,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ - rustc 1.42.0 (b8cedc004 2020-03-09)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":604927,"byte_end":604968,"line_start":128,"line_end":128,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":3925},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605582,"byte_end":605588,"line_start":144,"line_end":144,"column_start":10,"column_end":16},"name":"Weight","qualname":"::weights::Weight","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Numeric range of a transaction weight.\n","sig":null,"attributes":[{"value":"/ Numeric range of a transaction weight.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605530,"byte_end":605572,"line_start":143,"line_end":143,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3926},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605790,"byte_end":605799,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"name":"constants","qualname":"::weights::constants","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3931},{"krate":0,"index":3934},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":10862},{"krate":0,"index":10864},{"krate":0,"index":10866},{"krate":0,"index":10869},{"krate":0,"index":10871},{"krate":0,"index":10873},{"krate":0,"index":10876},{"krate":0,"index":10878},{"krate":0,"index":10880},{"krate":0,"index":10883},{"krate":0,"index":10885},{"krate":0,"index":10887}],"decl_id":null,"docs":" These constants are specific to FRAME, and the current implementation of its various components.\n For example: FRAME System, FRAME Executive, our FRAME support libraries, etc...\n","sig":null,"attributes":[{"value":"/ These constants are specific to FRAME, and the current implementation of its various components.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605597,"byte_end":605697,"line_start":146,"line_end":146,"column_start":1,"column_end":101}},{"value":"/ For example: FRAME System, FRAME Executive, our FRAME support libraries, etc...","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605698,"byte_end":605781,"line_start":147,"line_end":147,"column_start":1,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":3937},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605882,"byte_end":605899,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"WEIGHT_PER_SECOND","qualname":"::weights::constants::WEIGHT_PER_SECOND","value":"Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3938},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":605940,"byte_end":605957,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"WEIGHT_PER_MILLIS","qualname":"::weights::constants::WEIGHT_PER_MILLIS","value":"Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3939},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":606022,"byte_end":606039,"line_start":154,"line_end":154,"column_start":12,"column_end":29},"name":"WEIGHT_PER_MICROS","qualname":"::weights::constants::WEIGHT_PER_MICROS","value":"Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3940},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":606100,"byte_end":606116,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"WEIGHT_PER_NANOS","qualname":"::weights::constants::WEIGHT_PER_NANOS","value":"Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10862},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":606243,"byte_end":606263,"line_start":159,"line_end":159,"column_start":13,"column_end":33},"name":"BlockExecutionWeight","qualname":"::weights::constants::BlockExecutionWeight","value":"","parent":null,"children":[],"decl_id":null,"docs":" Importing a block with 0 txs takes ~5 ms\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10869},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":606398,"byte_end":606417,"line_start":161,"line_end":161,"column_start":13,"column_end":32},"name":"ExtrinsicBaseWeight","qualname":"::weights::constants::ExtrinsicBaseWeight","value":"","parent":null,"children":[],"decl_id":null,"docs":" Executing 10,000 System remarks (no-op) txs takes ~1.26 seconds -> ~125 µs per tx\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10876},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":606569,"byte_end":606582,"line_start":164,"line_end":164,"column_start":13,"column_end":26},"name":"RocksDbWeight","qualname":"::weights::constants::RocksDbWeight","value":"","parent":null,"children":[],"decl_id":null,"docs":" By default, Substrate uses RocksDB, so this will be the weight used throughout\n the runtime.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10883},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":606943,"byte_end":606957,"line_start":170,"line_end":170,"column_start":13,"column_end":27},"name":"ParityDbWeight","qualname":"::weights::constants::ParityDbWeight","value":"","parent":null,"children":[],"decl_id":null,"docs":" ParityDB can be enabled with a feature flag, but is still experimental. These weights\n are available for brave runtime engineers who may want to try this out as default.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3941},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607195,"byte_end":607204,"line_start":178,"line_end":178,"column_start":11,"column_end":20},"name":"WeighData","qualname":"::weights::WeighData","value":"WeighData<T>","parent":null,"children":[{"krate":0,"index":3943}],"decl_id":null,"docs":" Means of weighing some particular kind of data (`T`).\n","sig":null,"attributes":[{"value":"/ Means of weighing some particular kind of data (`T`).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607127,"byte_end":607184,"line_start":177,"line_end":177,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607381,"byte_end":607391,"line_start":181,"line_end":181,"column_start":5,"column_end":15},"name":"weigh_data","qualname":"::weights::WeighData::weigh_data","value":"pub fn weigh_data(&Self, T) -> Weight","parent":{"krate":0,"index":3941},"children":[],"decl_id":null,"docs":" Weigh the data `T` given by `target`. When implementing this for a dispatchable, `T` will be\n a tuple of all arguments given to the function (except origin).\n","sig":null,"attributes":[{"value":"/ Weigh the data `T` given by `target`. When implementing this for a dispatchable, `T` will be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607211,"byte_end":607307,"line_start":179,"line_end":179,"column_start":2,"column_end":98}},{"value":"/ a tuple of all arguments given to the function (except origin).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607309,"byte_end":607376,"line_start":180,"line_end":180,"column_start":2,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":3944},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607484,"byte_end":607500,"line_start":185,"line_end":185,"column_start":11,"column_end":27},"name":"ClassifyDispatch","qualname":"::weights::ClassifyDispatch","value":"ClassifyDispatch<T>","parent":null,"children":[{"krate":0,"index":3946}],"decl_id":null,"docs":" Means of classifying a dispatchable function.\n","sig":null,"attributes":[{"value":"/ Means of classifying a dispatchable function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607424,"byte_end":607473,"line_start":184,"line_end":184,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3946},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607717,"byte_end":607734,"line_start":189,"line_end":189,"column_start":5,"column_end":22},"name":"classify_dispatch","qualname":"::weights::ClassifyDispatch::classify_dispatch","value":"pub fn classify_dispatch(&Self, T) -> DispatchClass","parent":{"krate":0,"index":3944},"children":[],"decl_id":null,"docs":" Classify the dispatch function based on input data `target` of type `T`. When implementing\n this for a dispatchable, `T` will be a tuple of all arguments given to the function (except\n origin).\n","sig":null,"attributes":[{"value":"/ Classify the dispatch function based on input data `target` of type `T`. When implementing","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607507,"byte_end":607601,"line_start":186,"line_end":186,"column_start":2,"column_end":96}},{"value":"/ this for a dispatchable, `T` will be a tuple of all arguments given to the function (except","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607603,"byte_end":607698,"line_start":187,"line_end":187,"column_start":2,"column_end":97}},{"value":"/ origin).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607700,"byte_end":607712,"line_start":188,"line_end":188,"column_start":2,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3947},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607932,"byte_end":607939,"line_start":194,"line_end":194,"column_start":11,"column_end":18},"name":"PaysFee","qualname":"::weights::PaysFee","value":"PaysFee<T>","parent":null,"children":[{"krate":0,"index":3949}],"decl_id":null,"docs":" Indicates if dispatch function should pay fees or not.\n If set to `Pays::No`, the block resource limits are applied, yet no fee is deducted.\n","sig":null,"attributes":[{"value":"/ Indicates if dispatch function should pay fees or not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607774,"byte_end":607832,"line_start":192,"line_end":192,"column_start":1,"column_end":59}},{"value":"/ If set to `Pays::No`, the block resource limits are applied, yet no fee is deducted.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607833,"byte_end":607921,"line_start":193,"line_end":193,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607949,"byte_end":607957,"line_start":195,"line_end":195,"column_start":5,"column_end":13},"name":"pays_fee","qualname":"::weights::PaysFee::pays_fee","value":"pub fn pays_fee(&Self, T) -> Pays","parent":{"krate":0,"index":3947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10891},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608175,"byte_end":608178,"line_start":202,"line_end":202,"column_start":2,"column_end":5},"name":"Yes","qualname":"::weights::Pays::Yes","value":"Pays::Yes","parent":{"krate":0,"index":10890},"children":[],"decl_id":null,"docs":" Transactor will pay related fees.\n","sig":null,"attributes":[{"value":"/ Transactor will pay related fees.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608136,"byte_end":608173,"line_start":201,"line_end":201,"column_start":2,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10893},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608224,"byte_end":608226,"line_start":204,"line_end":204,"column_start":2,"column_end":4},"name":"No","qualname":"::weights::Pays::No","value":"Pays::No","parent":{"krate":0,"index":10890},"children":[],"decl_id":null,"docs":" Transactor will NOT pay related fees.\n","sig":null,"attributes":[{"value":"/ Transactor will NOT pay related fees.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608181,"byte_end":608222,"line_start":203,"line_end":203,"column_start":2,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":10890},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608128,"byte_end":608132,"line_start":200,"line_end":200,"column_start":10,"column_end":14},"name":"Pays","qualname":"::weights::Pays","value":"pub enum Pays { Yes, No, }","parent":null,"children":[{"krate":0,"index":10891},{"krate":0,"index":10893}],"decl_id":null,"docs":" Explicit enum to denote if a transaction pays fee or not.\n","sig":null,"attributes":[{"value":"/ Explicit enum to denote if a transaction pays fee or not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":607989,"byte_end":608050,"line_start":198,"line_end":198,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10966},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608725,"byte_end":608731,"line_start":222,"line_end":222,"column_start":2,"column_end":8},"name":"Normal","qualname":"::weights::DispatchClass::Normal","value":"DispatchClass::Normal","parent":{"krate":0,"index":10965},"children":[],"decl_id":null,"docs":" A normal dispatch.\n","sig":null,"attributes":[{"value":"/ A normal dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608701,"byte_end":608723,"line_start":221,"line_end":221,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10968},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608764,"byte_end":608775,"line_start":224,"line_end":224,"column_start":2,"column_end":13},"name":"Operational","qualname":"::weights::DispatchClass::Operational","value":"DispatchClass::Operational","parent":{"krate":0,"index":10965},"children":[],"decl_id":null,"docs":" An operational dispatch.\n","sig":null,"attributes":[{"value":"/ An operational dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608734,"byte_end":608762,"line_start":223,"line_end":223,"column_start":2,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10970},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609676,"byte_end":609685,"line_start":237,"line_end":237,"column_start":2,"column_end":11},"name":"Mandatory","qualname":"::weights::DispatchClass::Mandatory","value":"DispatchClass::Mandatory","parent":{"krate":0,"index":10965},"children":[],"decl_id":null,"docs":" A mandatory dispatch. These kinds of dispatch are always included regardless of their\n weight, therefore it is critical that they are separately validated to ensure that a\n malicious validator cannot craft a valid but impossibly heavy block. Usually this just means\n ensuring that the extrinsic can only be included once and that it is always very light.","sig":null,"attributes":[{"value":"/ A mandatory dispatch. These kinds of dispatch are always included regardless of their","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608778,"byte_end":608867,"line_start":225,"line_end":225,"column_start":2,"column_end":91}},{"value":"/ weight, therefore it is critical that they are separately validated to ensure that a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608869,"byte_end":608957,"line_start":226,"line_end":226,"column_start":2,"column_end":90}},{"value":"/ malicious validator cannot craft a valid but impossibly heavy block. Usually this just means","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608959,"byte_end":609055,"line_start":227,"line_end":227,"column_start":2,"column_end":98}},{"value":"/ ensuring that the extrinsic can only be included once and that it is always very light.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609057,"byte_end":609148,"line_start":228,"line_end":228,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609150,"byte_end":609153,"line_start":229,"line_end":229,"column_start":2,"column_end":5}},{"value":"/ Do *NOT* use it for extrinsics that can be heavy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609155,"byte_end":609208,"line_start":230,"line_end":230,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609210,"byte_end":609213,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ The only real use case for this is inherent extrinsics that are required to execute in a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609215,"byte_end":609307,"line_start":232,"line_end":232,"column_start":2,"column_end":94}},{"value":"/ block for the block to be valid, and it solves the issue in the case that the block","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609309,"byte_end":609396,"line_start":233,"line_end":233,"column_start":2,"column_end":89}},{"value":"/ initialization is sufficiently heavy to mean that those inherents do not fit into the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609398,"byte_end":609487,"line_start":234,"line_end":234,"column_start":2,"column_end":91}},{"value":"/ block. Essentially, we assume that in these exceptional circumstances, it is better to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609489,"byte_end":609579,"line_start":235,"line_end":235,"column_start":2,"column_end":92}},{"value":"/ allow an overweight block to be created than to not allow any block at all to be created.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609581,"byte_end":609674,"line_start":236,"line_end":236,"column_start":2,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":10965},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608684,"byte_end":608697,"line_start":220,"line_end":220,"column_start":10,"column_end":23},"name":"DispatchClass","qualname":"::weights::DispatchClass","value":"pub enum DispatchClass { Normal, Operational, Mandatory, }","parent":null,"children":[{"krate":0,"index":10966},{"krate":0,"index":10968},{"krate":0,"index":10970}],"decl_id":null,"docs":" A generalized group of dispatch types.","sig":null,"attributes":[{"value":"/ A generalized group of dispatch types.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608297,"byte_end":608339,"line_start":213,"line_end":213,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608340,"byte_end":608343,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ NOTE whenever upgrading the enum make sure to also update","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608344,"byte_end":608405,"line_start":215,"line_end":215,"column_start":1,"column_end":62}},{"value":"/ [DispatchClass::all] and [DispatchClass::non_mandatory] helper functions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608406,"byte_end":608483,"line_start":216,"line_end":216,"column_start":1,"column_end":78}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608573,"byte_end":608604,"line_start":218,"line_end":218,"column_start":29,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3955},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609852,"byte_end":609855,"line_start":248,"line_end":248,"column_start":9,"column_end":12},"name":"all","qualname":"<DispatchClass>::all","value":"pub fn all() -> &'static [DispatchClass]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing all dispatch classes.\n","sig":null,"attributes":[{"value":"/ Returns an array containing all dispatch classes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609790,"byte_end":609843,"line_start":247,"line_end":247,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610047,"byte_end":610060,"line_start":253,"line_end":253,"column_start":9,"column_end":22},"name":"non_mandatory","qualname":"<DispatchClass>::non_mandatory","value":"pub fn non_mandatory() -> &'static [DispatchClass]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array of all dispatch classes except `Mandatory`.\n","sig":null,"attributes":[{"value":"/ Returns an array of all dispatch classes except `Mandatory`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609974,"byte_end":610038,"line_start":252,"line_end":252,"column_start":2,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":3957},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610343,"byte_end":610352,"line_start":262,"line_end":262,"column_start":11,"column_end":20},"name":"OneOrMany","qualname":"::weights::OneOrMany","value":"OneOrMany<T>","parent":null,"children":[{"krate":0,"index":3959},{"krate":0,"index":3960}],"decl_id":null,"docs":" A trait that represents one or many values of given type.","sig":null,"attributes":[{"value":"/ A trait that represents one or many values of given type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610154,"byte_end":610215,"line_start":258,"line_end":258,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610216,"byte_end":610219,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ Useful to accept as parameter type to let the caller pass either a single value directly","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610220,"byte_end":610312,"line_start":260,"line_end":260,"column_start":1,"column_end":93}},{"value":"/ or an iterator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610313,"byte_end":610332,"line_start":261,"line_end":261,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":3959},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610388,"byte_end":610392,"line_start":264,"line_end":264,"column_start":7,"column_end":11},"name":"Iter","qualname":"::weights::OneOrMany::Iter","value":"type Iter: Iterator<Item = T>;","parent":{"krate":0,"index":3957},"children":[],"decl_id":null,"docs":" The iterator type.\n","sig":null,"attributes":[{"value":"/ The iterator type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610359,"byte_end":610381,"line_start":263,"line_end":263,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610459,"byte_end":610468,"line_start":266,"line_end":266,"column_start":5,"column_end":14},"name":"into_iter","qualname":"::weights::OneOrMany::into_iter","value":"pub fn into_iter(Self) -> Self::Iter","parent":{"krate":0,"index":3957},"children":[],"decl_id":null,"docs":" Convert this item into an iterator.\n","sig":null,"attributes":[{"value":"/ Convert this item into an iterator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610415,"byte_end":610454,"line_start":265,"line_end":265,"column_start":2,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":3968},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610930,"byte_end":610938,"line_start":280,"line_end":280,"column_start":9,"column_end":17},"name":"priority","qualname":"::weights::priority","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","parent":null,"children":[{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3977}],"decl_id":null,"docs":" Primitives related to priority management of Frame.\n","sig":null,"attributes":[{"value":"/ Primitives related to priority management of Frame.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610866,"byte_end":610921,"line_start":279,"line_end":279,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":3969},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611034,"byte_end":611039,"line_start":282,"line_end":282,"column_start":12,"column_end":17},"name":"LIMIT","qualname":"::weights::priority::LIMIT","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The starting point of all Operational transactions. 3/4 of u64::max_value().\n","sig":null,"attributes":[{"value":"/ The starting point of all Operational transactions. 3/4 of u64::max_value().","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610942,"byte_end":611022,"line_start":281,"line_end":281,"column_start":2,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3971},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611299,"byte_end":611305,"line_start":289,"line_end":289,"column_start":3,"column_end":9},"name":"Normal","qualname":"::weights::priority::FrameTransactionPriority::Normal","value":"FrameTransactionPriority::Normal(u64)","parent":{"krate":0,"index":3970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3974},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611314,"byte_end":611325,"line_start":290,"line_end":290,"column_start":3,"column_end":14},"name":"Operational","qualname":"::weights::priority::FrameTransactionPriority::Operational","value":"FrameTransactionPriority::Operational(u64)","parent":{"krate":0,"index":3970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3970},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611270,"byte_end":611294,"line_start":288,"line_end":288,"column_start":11,"column_end":35},"name":"FrameTransactionPriority","qualname":"::weights::priority::FrameTransactionPriority","value":"pub enum FrameTransactionPriority { Normal(u64), Operational(u64), }","parent":null,"children":[{"krate":0,"index":3971},{"krate":0,"index":3974}],"decl_id":null,"docs":" Wrapper for priority of different dispatch classes.","sig":null,"attributes":[{"value":"/ Wrapper for priority of different dispatch classes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611081,"byte_end":611136,"line_start":284,"line_end":284,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611138,"byte_end":611141,"line_start":285,"line_end":285,"column_start":2,"column_end":5}},{"value":"/ This only makes sure that any value created for the operational dispatch class is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611143,"byte_end":611228,"line_start":286,"line_end":286,"column_start":2,"column_end":87}},{"value":"/ incremented by [`LIMIT`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611230,"byte_end":611259,"line_start":287,"line_end":287,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":10995},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611780,"byte_end":611792,"line_start":305,"line_end":305,"column_start":12,"column_end":24},"name":"DispatchInfo","qualname":"::weights::DispatchInfo","value":"DispatchInfo { weight, class, pays_fee }","parent":null,"children":[{"krate":0,"index":10996},{"krate":0,"index":10997},{"krate":0,"index":10998}],"decl_id":null,"docs":" A bundle of static information collected from the `#[weight = $x]` attributes.\n","sig":null,"attributes":[{"value":"/ A bundle of static information collected from the `#[weight = $x]` attributes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611609,"byte_end":611691,"line_start":303,"line_end":303,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":10996},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611833,"byte_end":611839,"line_start":307,"line_end":307,"column_start":6,"column_end":12},"name":"weight","qualname":"::weights::DispatchInfo::weight","value":"u64","parent":{"krate":0,"index":10995},"children":[],"decl_id":null,"docs":" Weight of this transaction.\n","sig":null,"attributes":[{"value":"/ Weight of this transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611796,"byte_end":611827,"line_start":306,"line_end":306,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":10997},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611886,"byte_end":611891,"line_start":309,"line_end":309,"column_start":6,"column_end":11},"name":"class","qualname":"::weights::DispatchInfo::class","value":"weights::DispatchClass","parent":{"krate":0,"index":10995},"children":[],"decl_id":null,"docs":" Class of this transaction.\n","sig":null,"attributes":[{"value":"/ Class of this transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611850,"byte_end":611880,"line_start":308,"line_end":308,"column_start":2,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":10998},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611950,"byte_end":611958,"line_start":311,"line_end":311,"column_start":6,"column_end":14},"name":"pays_fee","qualname":"::weights::DispatchInfo::pays_fee","value":"weights::Pays","parent":{"krate":0,"index":10995},"children":[],"decl_id":null,"docs":" Does this transaction pay fees.\n","sig":null,"attributes":[{"value":"/ Does this transaction pay fees.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611909,"byte_end":611944,"line_start":310,"line_end":310,"column_start":2,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":3979},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612118,"byte_end":612133,"line_start":316,"line_end":316,"column_start":11,"column_end":26},"name":"GetDispatchInfo","qualname":"::weights::GetDispatchInfo","value":"GetDispatchInfo","parent":null,"children":[{"krate":0,"index":3980}],"decl_id":null,"docs":" A `Dispatchable` function (aka transaction) that can carry some static information along with\n it, using the `#[weight]` attribute.\n","sig":null,"attributes":[{"value":"/ A `Dispatchable` function (aka transaction) that can carry some static information along with","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":611969,"byte_end":612066,"line_start":314,"line_end":314,"column_start":1,"column_end":98}},{"value":"/ it, using the `#[weight]` attribute.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612067,"byte_end":612107,"line_start":315,"line_end":315,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612278,"byte_end":612295,"line_start":320,"line_end":320,"column_start":5,"column_end":22},"name":"get_dispatch_info","qualname":"::weights::GetDispatchInfo::get_dispatch_info","value":"pub fn get_dispatch_info(&Self) -> DispatchInfo","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Return a `DispatchInfo`, containing relevant information of this dispatch.","sig":null,"attributes":[{"value":"/ Return a `DispatchInfo`, containing relevant information of this dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612137,"byte_end":612215,"line_start":317,"line_end":317,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612217,"byte_end":612220,"line_start":318,"line_end":318,"column_start":2,"column_end":5}},{"value":"/ This is done independently of its encoded size.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612222,"byte_end":612273,"line_start":319,"line_end":319,"column_start":2,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":11024},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612550,"byte_end":612566,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"PostDispatchInfo","qualname":"::weights::PostDispatchInfo","value":"PostDispatchInfo { actual_weight, pays_fee }","parent":null,"children":[{"krate":0,"index":11025},{"krate":0,"index":11026}],"decl_id":null,"docs":" Weight information that is only available post dispatch.\n NOTE: This can only be used to reduce the weight or fee, not increase it.\n","sig":null,"attributes":[{"value":"/ Weight information that is only available post dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612323,"byte_end":612383,"line_start":323,"line_end":323,"column_start":1,"column_end":61}},{"value":"/ NOTE: This can only be used to reduce the weight or fee, not increase it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612384,"byte_end":612461,"line_start":324,"line_end":324,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":11025},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612669,"byte_end":612682,"line_start":328,"line_end":328,"column_start":6,"column_end":19},"name":"actual_weight","qualname":"::weights::PostDispatchInfo::actual_weight","value":"std::option::Option<u64>","parent":{"krate":0,"index":11024},"children":[],"decl_id":null,"docs":" Actual weight consumed by a call or `None` which stands for the worst case static weight.\n","sig":null,"attributes":[{"value":"/ Actual weight consumed by a call or `None` which stands for the worst case static weight.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612570,"byte_end":612663,"line_start":327,"line_end":327,"column_start":2,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":11026},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612778,"byte_end":612786,"line_start":330,"line_end":330,"column_start":6,"column_end":14},"name":"pays_fee","qualname":"::weights::PostDispatchInfo::pays_fee","value":"weights::Pays","parent":{"krate":0,"index":11024},"children":[],"decl_id":null,"docs":" Whether this transaction should pay fees when all is said and done.\n","sig":null,"attributes":[{"value":"/ Whether this transaction should pay fees when all is said and done.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612701,"byte_end":612772,"line_start":329,"line_end":329,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612905,"byte_end":612917,"line_start":335,"line_end":335,"column_start":9,"column_end":21},"name":"calc_unspent","qualname":"<PostDispatchInfo>::calc_unspent","value":"pub fn calc_unspent(&Self, &DispatchInfo) -> Weight","parent":null,"children":[],"decl_id":null,"docs":" Calculate how much (if any) weight was not used by the `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Calculate how much (if any) weight was not used by the `Dispatchable`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612822,"byte_end":612896,"line_start":334,"line_end":334,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":613089,"byte_end":613107,"line_start":340,"line_end":340,"column_start":9,"column_end":27},"name":"calc_actual_weight","qualname":"<PostDispatchInfo>::calc_actual_weight","value":"pub fn calc_actual_weight(&Self, &DispatchInfo) -> Weight","parent":null,"children":[],"decl_id":null,"docs":" Calculate how much weight was actually spent by the `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Calculate how much weight was actually spent by the `Dispatchable`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":613009,"byte_end":613080,"line_start":339,"line_end":339,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":613352,"byte_end":613360,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"pays_fee","qualname":"<PostDispatchInfo>::pays_fee","value":"pub fn pays_fee(&Self, &DispatchInfo) -> Pays","parent":null,"children":[],"decl_id":null,"docs":" Determine if user should actually pay fees at the end of the dispatch.\n","sig":null,"attributes":[{"value":"/ Determine if user should actually pay fees at the end of the dispatch.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":613269,"byte_end":613343,"line_start":348,"line_end":348,"column_start":2,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3985},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":613879,"byte_end":613900,"line_start":364,"line_end":364,"column_start":8,"column_end":29},"name":"extract_actual_weight","qualname":"::weights::extract_actual_weight","value":"pub fn extract_actual_weight(&DispatchResultWithPostInfo, &DispatchInfo)\n-> Weight","parent":null,"children":[],"decl_id":null,"docs":" Extract the actual weight from a dispatch result if any or fall back to the default weight.\n","sig":null,"attributes":[{"value":"/ Extract the actual weight from a dispatch result if any or fall back to the default weight.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":613776,"byte_end":613871,"line_start":363,"line_end":363,"column_start":1,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":3996},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615230,"byte_end":615250,"line_start":425,"line_end":425,"column_start":11,"column_end":31},"name":"WithPostDispatchInfo","qualname":"::weights::WithPostDispatchInfo","value":"WithPostDispatchInfo","parent":null,"children":[{"krate":0,"index":3997}],"decl_id":null,"docs":" Allows easy conversion from `DispatchError` to `DispatchErrorWithPostInfo` for dispatchables\n that want to return a custom a posterior weight on error.\n","sig":null,"attributes":[{"value":"/ Allows easy conversion from `DispatchError` to `DispatchErrorWithPostInfo` for dispatchables","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615061,"byte_end":615157,"line_start":423,"line_end":423,"column_start":1,"column_end":97}},{"value":"/ that want to return a custom a posterior weight on error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615158,"byte_end":615219,"line_start":424,"line_end":424,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615537,"byte_end":615548,"line_start":434,"line_end":434,"column_start":5,"column_end":16},"name":"with_weight","qualname":"::weights::WithPostDispatchInfo::with_weight","value":"pub fn with_weight(Self, Weight) -> DispatchErrorWithPostInfo","parent":{"krate":0,"index":3996},"children":[],"decl_id":null,"docs":" Call this on your modules custom errors type in order to return a custom weight on error.","sig":null,"attributes":[{"value":"/ Call this on your modules custom errors type in order to return a custom weight on error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615254,"byte_end":615347,"line_start":426,"line_end":426,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615349,"byte_end":615352,"line_start":427,"line_end":427,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615354,"byte_end":615367,"line_start":428,"line_end":428,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615369,"byte_end":615372,"line_start":429,"line_end":429,"column_start":2,"column_end":5}},{"value":"/ ```ignore","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615374,"byte_end":615387,"line_start":430,"line_end":430,"column_start":2,"column_end":15}},{"value":"/ let who = ensure_signed(origin).map_err(|e| e.with_weight(100))?;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615389,"byte_end":615458,"line_start":431,"line_end":431,"column_start":2,"column_end":71}},{"value":"/ ensure!(who == me, Error::<T>::NotMe.with_weight(200_000));","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615460,"byte_end":615523,"line_start":432,"line_end":432,"column_start":2,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615525,"byte_end":615532,"line_start":433,"line_end":433,"column_start":2,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":4037},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617979,"byte_end":617989,"line_start":533,"line_end":533,"column_start":12,"column_end":22},"name":"FunctionOf","qualname":"::weights::FunctionOf","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct to represent a weight which is a function of the input arguments. The given items have\n the following types:","sig":null,"attributes":[{"value":"/ A struct to represent a weight which is a function of the input arguments. The given items have","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617265,"byte_end":617364,"line_start":523,"line_end":523,"column_start":1,"column_end":100}},{"value":"/ the following types:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617365,"byte_end":617389,"line_start":524,"line_end":524,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617390,"byte_end":617393,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ - `WD`: a raw `Weight` value or a closure that returns a `Weight` with the same","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617394,"byte_end":617477,"line_start":526,"line_end":526,"column_start":1,"column_end":84}},{"value":"/   argument list as the dispatched, wrapped in a tuple.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617478,"byte_end":617536,"line_start":527,"line_end":527,"column_start":1,"column_end":59}},{"value":"/ - `CD`: a raw `DispatchClass` value or a closure that returns a `DispatchClass`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617537,"byte_end":617620,"line_start":528,"line_end":528,"column_start":1,"column_end":84}},{"value":"/   with the same argument list as the dispatched, wrapped in a tuple.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617621,"byte_end":617693,"line_start":529,"line_end":529,"column_start":1,"column_end":73}},{"value":"/ - `PF`: a `Pays` variant for whether this dispatch pays fee or not or a closure that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617694,"byte_end":617782,"line_start":530,"line_end":530,"column_start":1,"column_end":89}},{"value":"/   returns a `Pays` variant with the same argument list as the dispatched, wrapped in a tuple.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617783,"byte_end":617880,"line_start":531,"line_end":531,"column_start":1,"column_end":98}},{"value":"deprecated =\n  \"Function arguments are available directly inside the annotation now.\"","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":617881,"byte_end":617967,"line_start":532,"line_end":532,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":4042},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618002,"byte_end":618008,"line_start":533,"line_end":533,"column_start":35,"column_end":41},"name":"0","qualname":"::weights::FunctionOf::0","value":"WD","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4043},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618010,"byte_end":618016,"line_start":533,"line_end":533,"column_start":43,"column_end":49},"name":"1","qualname":"::weights::FunctionOf::1","value":"CD","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4044},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618018,"byte_end":618024,"line_start":533,"line_end":533,"column_start":51,"column_end":57},"name":"2","qualname":"::weights::FunctionOf::2","value":"PF","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11052},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620325,"byte_end":620340,"line_start":627,"line_end":627,"column_start":12,"column_end":27},"name":"RuntimeDbWeight","qualname":"::weights::RuntimeDbWeight","value":"RuntimeDbWeight { read, write }","parent":null,"children":[{"krate":0,"index":11053},{"krate":0,"index":11054}],"decl_id":null,"docs":" The weight of database operations that the runtime can invoke.\n","sig":null,"attributes":[{"value":"/ The weight of database operations that the runtime can invoke.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620170,"byte_end":620236,"line_start":625,"line_end":625,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":11053},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620348,"byte_end":620352,"line_start":628,"line_end":628,"column_start":6,"column_end":10},"name":"read","qualname":"::weights::RuntimeDbWeight::read","value":"u64","parent":{"krate":0,"index":11052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11054},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620367,"byte_end":620372,"line_start":629,"line_end":629,"column_start":6,"column_end":11},"name":"write","qualname":"::weights::RuntimeDbWeight::write","value":"u64","parent":{"krate":0,"index":11052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620416,"byte_end":620421,"line_start":633,"line_end":633,"column_start":9,"column_end":14},"name":"reads","qualname":"<RuntimeDbWeight>::reads","value":"pub fn reads(Self, Weight) -> Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620493,"byte_end":620499,"line_start":637,"line_end":637,"column_start":9,"column_end":15},"name":"writes","qualname":"<RuntimeDbWeight>::writes","value":"pub fn writes(Self, Weight) -> Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620572,"byte_end":620584,"line_start":641,"line_end":641,"column_start":9,"column_end":21},"name":"reads_writes","qualname":"<RuntimeDbWeight>::reads_writes","value":"pub fn reads_writes(Self, Weight, Weight) -> Weight","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11080},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621137,"byte_end":621159,"line_start":659,"line_end":659,"column_start":12,"column_end":34},"name":"WeightToFeeCoefficient","qualname":"::weights::WeightToFeeCoefficient","value":"WeightToFeeCoefficient { coeff_integer, coeff_frac, negative, degree }","parent":null,"children":[{"krate":0,"index":11082},{"krate":0,"index":11083},{"krate":0,"index":11084},{"krate":0,"index":11085}],"decl_id":null,"docs":" One coefficient and its position in the `WeightToFeePolynomial`.","sig":null,"attributes":[{"value":"/ One coefficient and its position in the `WeightToFeePolynomial`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620774,"byte_end":620842,"line_start":648,"line_end":648,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620843,"byte_end":620846,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ One term of polynomial is calculated as:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620847,"byte_end":620891,"line_start":650,"line_end":650,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620892,"byte_end":620895,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620896,"byte_end":620909,"line_start":652,"line_end":652,"column_start":1,"column_end":14}},{"value":"/ coeff_integer * x^(degree) + coeff_frac * x^(degree)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620910,"byte_end":620966,"line_start":653,"line_end":653,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620967,"byte_end":620974,"line_start":654,"line_end":654,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620975,"byte_end":620978,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ The `negative` value encodes whether the term is added or substracted from the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620979,"byte_end":621061,"line_start":656,"line_end":656,"column_start":1,"column_end":83}},{"value":"/ overall polynomial result.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621062,"byte_end":621092,"line_start":657,"line_end":657,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":11082},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621219,"byte_end":621232,"line_start":661,"line_end":661,"column_start":6,"column_end":19},"name":"coeff_integer","qualname":"::weights::WeightToFeeCoefficient::coeff_integer","value":"Balance","parent":{"krate":0,"index":11080},"children":[],"decl_id":null,"docs":" The integral part of the coefficient.\n","sig":null,"attributes":[{"value":"/ The integral part of the coefficient.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621172,"byte_end":621213,"line_start":660,"line_end":660,"column_start":2,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":11083},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621293,"byte_end":621303,"line_start":663,"line_end":663,"column_start":6,"column_end":16},"name":"coeff_frac","qualname":"::weights::WeightToFeeCoefficient::coeff_frac","value":"sp_runtime::Perbill","parent":{"krate":0,"index":11080},"children":[],"decl_id":null,"docs":" The fractional part of the coefficient.\n","sig":null,"attributes":[{"value":"/ The fractional part of the coefficient.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621244,"byte_end":621287,"line_start":662,"line_end":662,"column_start":2,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":11084},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621384,"byte_end":621392,"line_start":665,"line_end":665,"column_start":6,"column_end":14},"name":"negative","qualname":"::weights::WeightToFeeCoefficient::negative","value":"bool","parent":{"krate":0,"index":11080},"children":[],"decl_id":null,"docs":" True iff the coefficient should be interpreted as negative.\n","sig":null,"attributes":[{"value":"/ True iff the coefficient should be interpreted as negative.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621315,"byte_end":621378,"line_start":664,"line_end":664,"column_start":2,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":11085},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621439,"byte_end":621445,"line_start":667,"line_end":667,"column_start":6,"column_end":12},"name":"degree","qualname":"::weights::WeightToFeeCoefficient::degree","value":"u8","parent":{"krate":0,"index":11080},"children":[],"decl_id":null,"docs":" Degree/exponent of the term.\n","sig":null,"attributes":[{"value":"/ Degree/exponent of the term.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621401,"byte_end":621433,"line_start":666,"line_end":666,"column_start":2,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":4097},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621521,"byte_end":621544,"line_start":671,"line_end":671,"column_start":10,"column_end":33},"name":"WeightToFeeCoefficients","qualname":"::weights::WeightToFeeCoefficients","value":"SmallVec<[WeightToFeeCoefficient<T>; ]>","parent":null,"children":[],"decl_id":null,"docs":" A list of coefficients that represent one polynomial.\n","sig":null,"attributes":[{"value":"/ A list of coefficients that represent one polynomial.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621454,"byte_end":621511,"line_start":670,"line_end":670,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4100},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621747,"byte_end":621768,"line_start":676,"line_end":676,"column_start":11,"column_end":32},"name":"WeightToFeePolynomial","qualname":"::weights::WeightToFeePolynomial","value":"WeightToFeePolynomial","parent":null,"children":[{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103}],"decl_id":null,"docs":" A trait that describes the weight to fee calculation as polynomial.","sig":null,"attributes":[{"value":"/ A trait that describes the weight to fee calculation as polynomial.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621593,"byte_end":621664,"line_start":673,"line_end":673,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621665,"byte_end":621668,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ An implementor should only implement the `polynomial` function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621669,"byte_end":621736,"line_start":675,"line_end":675,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":4101},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621846,"byte_end":621853,"line_start":678,"line_end":678,"column_start":7,"column_end":14},"name":"Balance","qualname":"::weights::WeightToFeePolynomial::Balance","value":"type Balance: BaseArithmetic + From<u32> + Copy + Unsigned;","parent":{"krate":0,"index":4100},"children":[],"decl_id":null,"docs":" The type that is returned as result from polynomial evaluation.\n","sig":null,"attributes":[{"value":"/ The type that is returned as result from polynomial evaluation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621772,"byte_end":621839,"line_start":677,"line_end":677,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622306,"byte_end":622316,"line_start":686,"line_end":686,"column_start":5,"column_end":15},"name":"polynomial","qualname":"::weights::WeightToFeePolynomial::polynomial","value":"pub fn polynomial() -> WeightToFeeCoefficients<Self::Balance>","parent":{"krate":0,"index":4100},"children":[],"decl_id":null,"docs":" Returns a polynomial that describes the weight to fee conversion.","sig":null,"attributes":[{"value":"/ Returns a polynomial that describes the weight to fee conversion.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621903,"byte_end":621972,"line_start":680,"line_end":680,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621974,"byte_end":621977,"line_start":681,"line_end":681,"column_start":2,"column_end":5}},{"value":"/ This is the only function that should be manually implemented. Please note","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":621979,"byte_end":622057,"line_start":682,"line_end":682,"column_start":2,"column_end":80}},{"value":"/ that all calculation is done in the probably unsigned `Balance` type. This means","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622059,"byte_end":622143,"line_start":683,"line_end":683,"column_start":2,"column_end":86}},{"value":"/ that the order of coefficients is important as putting the negative coefficients","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622145,"byte_end":622229,"line_start":684,"line_end":684,"column_start":2,"column_end":86}},{"value":"/ first will most likely saturate the result to zero mid evaluation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622231,"byte_end":622301,"line_start":685,"line_end":685,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622607,"byte_end":622611,"line_start":692,"line_end":692,"column_start":5,"column_end":9},"name":"calc","qualname":"::weights::WeightToFeePolynomial::calc","value":"pub fn calc(&Weight) -> Self::Balance","parent":{"krate":0,"index":4100},"children":[],"decl_id":null,"docs":" Calculates the fee from the passed `weight` according to the `polynomial`.","sig":null,"attributes":[{"value":"/ Calculates the fee from the passed `weight` according to the `polynomial`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622364,"byte_end":622442,"line_start":688,"line_end":688,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622444,"byte_end":622447,"line_start":689,"line_end":689,"column_start":2,"column_end":5}},{"value":"/ This should not be overriden in most circumstances. Calculation is done in the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622449,"byte_end":622531,"line_start":690,"line_end":690,"column_start":2,"column_end":84}},{"value":"/ `Balance` type and never overflows. All evaluation is saturating.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":622533,"byte_end":622602,"line_start":691,"line_end":691,"column_start":2,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":4105},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":623360,"byte_end":623371,"line_start":715,"line_end":715,"column_start":12,"column_end":23},"name":"IdentityFee","qualname":"::weights::IdentityFee","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementor of `WeightToFeePolynomial` that maps one unit of weight to one unit of fee.\n","sig":null,"attributes":[{"value":"/ Implementor of `WeightToFeePolynomial` that maps one unit of weight to one unit of fee.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":623257,"byte_end":623348,"line_start":714,"line_end":714,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":11103},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":623876,"byte_end":623892,"line_start":734,"line_end":734,"column_start":12,"column_end":28},"name":"PerDispatchClass","qualname":"::weights::PerDispatchClass","value":"PerDispatchClass {  }","parent":null,"children":[{"krate":0,"index":11105},{"krate":0,"index":11106},{"krate":0,"index":11107}],"decl_id":null,"docs":" A struct holding value for each `DispatchClass`.\n","sig":null,"attributes":[{"value":"/ A struct holding value for each `DispatchClass`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":623741,"byte_end":623793,"line_start":732,"line_end":732,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624171,"byte_end":624174,"line_start":745,"line_end":745,"column_start":9,"column_end":12},"name":"new","qualname":"<PerDispatchClass<T>>::new","value":"pub fn new<impl Fn(DispatchClass) -> T: Fn(DispatchClass) ->\n           T>(impl Fn(DispatchClass) -> T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `PerDispatchClass` with the same value for every class.\n","sig":null,"attributes":[{"value":"/ Create new `PerDispatchClass` with the same value for every class.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624092,"byte_end":624162,"line_start":744,"line_end":744,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624439,"byte_end":624446,"line_start":754,"line_end":754,"column_start":9,"column_end":16},"name":"get_mut","qualname":"<PerDispatchClass<T>>::get_mut","value":"pub fn get_mut(&mut Self, DispatchClass) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to current value of given class.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to current value of given class.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624370,"byte_end":624430,"line_start":753,"line_end":753,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624718,"byte_end":624721,"line_start":763,"line_end":763,"column_start":9,"column_end":12},"name":"get","qualname":"<PerDispatchClass<T>>::get","value":"pub fn get(&Self, DispatchClass) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get current value for given class.\n","sig":null,"attributes":[{"value":"/ Get current value for given class.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624671,"byte_end":624709,"line_start":762,"line_end":762,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625007,"byte_end":625010,"line_start":774,"line_end":774,"column_start":9,"column_end":12},"name":"set","qualname":"<PerDispatchClass<T>>::set","value":"pub fn set<impl OneOrMany<DispatchClass>: OneOrMany<DispatchClass>>(&mut Self,\n                                                                    T,\n                                                                    impl OneOrMany<DispatchClass>)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of given class.\n","sig":null,"attributes":[{"value":"/ Set the value of given class.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624965,"byte_end":624998,"line_start":773,"line_end":773,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625265,"byte_end":625270,"line_start":783,"line_end":783,"column_start":9,"column_end":14},"name":"total","qualname":"<PerDispatchClass<Weight>>::total","value":"pub fn total(&Self) -> Weight","parent":null,"children":[],"decl_id":null,"docs":" Returns the total weight consumed by all extrinsics in the block.\n","sig":null,"attributes":[{"value":"/ Returns the total weight consumed by all extrinsics in the block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625187,"byte_end":625256,"line_start":782,"line_end":782,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625514,"byte_end":625517,"line_start":792,"line_end":792,"column_start":9,"column_end":12},"name":"add","qualname":"<PerDispatchClass<Weight>>::add","value":"pub fn add(&mut Self, Weight, DispatchClass)","parent":null,"children":[],"decl_id":null,"docs":" Add some weight of a specific dispatch class, saturating at the numeric bounds of `Weight`.\n","sig":null,"attributes":[{"value":"/ Add some weight of a specific dispatch class, saturating at the numeric bounds of `Weight`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625410,"byte_end":625505,"line_start":791,"line_end":791,"column_start":2,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625763,"byte_end":625774,"line_start":799,"line_end":799,"column_start":9,"column_end":20},"name":"checked_add","qualname":"<PerDispatchClass<Weight>>::checked_add","value":"pub fn checked_add(&mut Self, Weight, DispatchClass) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Try to add some weight of a specific dispatch class, returning Err(()) if overflow would\n occur.\n","sig":null,"attributes":[{"value":"/ Try to add some weight of a specific dispatch class, returning Err(()) if overflow would","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625650,"byte_end":625742,"line_start":797,"line_end":797,"column_start":2,"column_end":94}},{"value":"/ occur.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625744,"byte_end":625754,"line_start":798,"line_end":798,"column_start":2,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":626056,"byte_end":626059,"line_start":807,"line_end":807,"column_start":9,"column_end":12},"name":"sub","qualname":"<PerDispatchClass<Weight>>::sub","value":"pub fn sub(&mut Self, Weight, DispatchClass)","parent":null,"children":[],"decl_id":null,"docs":" Subtract some weight of a specific dispatch class, saturating at the numeric bounds of\n `Weight`.\n","sig":null,"attributes":[{"value":"/ Subtract some weight of a specific dispatch class, saturating at the numeric bounds of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625942,"byte_end":626032,"line_start":805,"line_end":805,"column_start":2,"column_end":92}},{"value":"/ `Weight`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":626034,"byte_end":626047,"line_start":806,"line_end":806,"column_start":2,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":4128},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instances","qualname":"::instances","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","parent":null,"children":[{"krate":0,"index":11142},{"krate":0,"index":11144},{"krate":0,"index":11146},{"krate":0,"index":11147},{"krate":0,"index":11148},{"krate":0,"index":11150},{"krate":0,"index":11151},{"krate":0,"index":11153},{"krate":0,"index":11156},{"krate":0,"index":11158},{"krate":0,"index":11160},{"krate":0,"index":11161},{"krate":0,"index":11162},{"krate":0,"index":11164},{"krate":0,"index":11165},{"krate":0,"index":11167},{"krate":0,"index":11170},{"krate":0,"index":11172},{"krate":0,"index":11174},{"krate":0,"index":11175},{"krate":0,"index":11176},{"krate":0,"index":11178},{"krate":0,"index":11179},{"krate":0,"index":11181},{"krate":0,"index":11184},{"krate":0,"index":11186},{"krate":0,"index":11188},{"krate":0,"index":11189},{"krate":0,"index":11190},{"krate":0,"index":11192},{"krate":0,"index":11193},{"krate":0,"index":11195},{"krate":0,"index":11198},{"krate":0,"index":11200},{"krate":0,"index":11202},{"krate":0,"index":11203},{"krate":0,"index":11204},{"krate":0,"index":11206},{"krate":0,"index":11207},{"krate":0,"index":11209},{"krate":0,"index":11212},{"krate":0,"index":11214},{"krate":0,"index":11216},{"krate":0,"index":11217},{"krate":0,"index":11218},{"krate":0,"index":11220},{"krate":0,"index":11221},{"krate":0,"index":11223},{"krate":0,"index":11226},{"krate":0,"index":11228},{"krate":0,"index":11230},{"krate":0,"index":11231},{"krate":0,"index":11232},{"krate":0,"index":11234},{"krate":0,"index":11235},{"krate":0,"index":11237},{"krate":0,"index":11240},{"krate":0,"index":11242},{"krate":0,"index":11244},{"krate":0,"index":11245},{"krate":0,"index":11246},{"krate":0,"index":11248},{"krate":0,"index":11249},{"krate":0,"index":11251},{"krate":0,"index":11254},{"krate":0,"index":11256},{"krate":0,"index":11258},{"krate":0,"index":11259},{"krate":0,"index":11260},{"krate":0,"index":11262},{"krate":0,"index":11263},{"krate":0,"index":11265},{"krate":0,"index":11268},{"krate":0,"index":11270},{"krate":0,"index":11272},{"krate":0,"index":11273},{"krate":0,"index":11274},{"krate":0,"index":11276},{"krate":0,"index":11277},{"krate":0,"index":11279},{"krate":0,"index":11282},{"krate":0,"index":11284},{"krate":0,"index":11286},{"krate":0,"index":11287},{"krate":0,"index":11288},{"krate":0,"index":11290},{"krate":0,"index":11291},{"krate":0,"index":11293},{"krate":0,"index":11296},{"krate":0,"index":11298},{"krate":0,"index":11300},{"krate":0,"index":11301},{"krate":0,"index":11302},{"krate":0,"index":11304},{"krate":0,"index":11305},{"krate":0,"index":11307},{"krate":0,"index":11310},{"krate":0,"index":11312},{"krate":0,"index":11314},{"krate":0,"index":11315},{"krate":0,"index":11316},{"krate":0,"index":11318},{"krate":0,"index":11319},{"krate":0,"index":11321},{"krate":0,"index":11324},{"krate":0,"index":11326},{"krate":0,"index":11328},{"krate":0,"index":11329},{"krate":0,"index":11330},{"krate":0,"index":11332},{"krate":0,"index":11333},{"krate":0,"index":11335},{"krate":0,"index":11338},{"krate":0,"index":11340},{"krate":0,"index":11342},{"krate":0,"index":11343},{"krate":0,"index":11344},{"krate":0,"index":11346},{"krate":0,"index":11347},{"krate":0,"index":11349},{"krate":0,"index":11352},{"krate":0,"index":11354},{"krate":0,"index":11356},{"krate":0,"index":11357},{"krate":0,"index":11358},{"krate":0,"index":11360},{"krate":0,"index":11361},{"krate":0,"index":11363}],"decl_id":null,"docs":" Some instance placeholder to be used in [`frame_support::pallet`] attribute macro.","sig":null,"attributes":[{"value":"/ Some instance placeholder to be used in [`frame_support::pallet`] attribute macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":632711,"byte_end":632797,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":632798,"byte_end":632801,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`frame_support::pallet`] attribute macro does only requires the instance generic `I` to be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":632802,"byte_end":632897,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ static (contrary to `decl_*` macro which requires instance generic to implement","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":632898,"byte_end":632981,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ [`frame_support::traits::Instance`]).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":632982,"byte_end":633023,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633024,"byte_end":633027,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Thus support provides some instance types to be used, This allow some instantiable pallet to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633028,"byte_end":633124,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ depend on specific instance of another:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633125,"byte_end":633168,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633169,"byte_end":633176,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # mod another_pallet { pub trait Config<I: 'static = ()> {} }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633177,"byte_end":633242,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ pub trait Config<I: 'static = ()>: another_pallet::Config<I> {}","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633243,"byte_end":633310,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633311,"byte_end":633318,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633319,"byte_end":633322,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ NOTE: [`frame_support::pallet`] will reexport them inside the module, in order to make them","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633323,"byte_end":633418,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ accessible to [`frame_support::construct_runtime`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633419,"byte_end":633474,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":11142},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633630,"byte_end":633639,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"Instance1","qualname":"::instances::Instance1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance1 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance1 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633476,"byte_end":633552,"line_start":34,"line_end":34,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11156},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633796,"byte_end":633805,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"Instance2","qualname":"::instances::Instance2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance2 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance2 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633642,"byte_end":633718,"line_start":38,"line_end":38,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11170},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633962,"byte_end":633971,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"Instance3","qualname":"::instances::Instance3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance3 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance3 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633808,"byte_end":633884,"line_start":42,"line_end":42,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11184},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634128,"byte_end":634137,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"Instance4","qualname":"::instances::Instance4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance4 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance4 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":633974,"byte_end":634050,"line_start":46,"line_end":46,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11198},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634294,"byte_end":634303,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"Instance5","qualname":"::instances::Instance5","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance5 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance5 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634140,"byte_end":634216,"line_start":50,"line_end":50,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11212},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634460,"byte_end":634469,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"Instance6","qualname":"::instances::Instance6","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance6 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance6 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634306,"byte_end":634382,"line_start":54,"line_end":54,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11226},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634626,"byte_end":634635,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"Instance7","qualname":"::instances::Instance7","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance7 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance7 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634472,"byte_end":634548,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11240},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634792,"byte_end":634801,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"Instance8","qualname":"::instances::Instance8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance8 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance8 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634638,"byte_end":634714,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11254},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634958,"byte_end":634967,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"Instance9","qualname":"::instances::Instance9","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance9 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance9 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634804,"byte_end":634880,"line_start":66,"line_end":66,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":11268},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635125,"byte_end":635135,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"Instance10","qualname":"::instances::Instance10","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance10 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance10 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":634970,"byte_end":635047,"line_start":70,"line_end":70,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":11282},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635293,"byte_end":635303,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"Instance11","qualname":"::instances::Instance11","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance11 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance11 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635138,"byte_end":635215,"line_start":74,"line_end":74,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":11296},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635461,"byte_end":635471,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"Instance12","qualname":"::instances::Instance12","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance12 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance12 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635306,"byte_end":635383,"line_start":78,"line_end":78,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":11310},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635629,"byte_end":635639,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"Instance13","qualname":"::instances::Instance13","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance13 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance13 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635474,"byte_end":635551,"line_start":82,"line_end":82,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":11324},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635797,"byte_end":635807,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"Instance14","qualname":"::instances::Instance14","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance14 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance14 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635642,"byte_end":635719,"line_start":86,"line_end":86,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":11338},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635965,"byte_end":635975,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"Instance15","qualname":"::instances::Instance15","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance15 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance15 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635810,"byte_end":635887,"line_start":90,"line_end":90,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":11352},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":636133,"byte_end":636143,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"Instance16","qualname":"::instances::Instance16","value":"","parent":null,"children":[],"decl_id":null,"docs":" Instance16 to be used for instantiable pallet define with `pallet` macro.\n","sig":null,"attributes":[{"value":"/ Instance16 to be used for instantiable pallet define with `pallet` macro.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/instances.rs","byte_start":635978,"byte_end":636055,"line_start":94,"line_end":94,"column_start":1,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":4219},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2241,"byte_end":2251,"line_start":88,"line_end":88,"column_start":11,"column_end":21},"name":"LOG_TARGET","qualname":"::LOG_TARGET","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" A unified log target for support operations.\n","sig":null,"attributes":[{"value":"/ A unified log target for support operations.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2182,"byte_end":2230,"line_start":87,"line_end":87,"column_start":1,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":11366},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2383,"byte_end":2388,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"Never","qualname":"::Never","value":"pub enum Never { }","parent":null,"children":[],"decl_id":null,"docs":" A type that cannot be instantiated.\n","sig":null,"attributes":[{"value":"/ A type that cannot be instantiated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2295,"byte_end":2334,"line_start":90,"line_end":90,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11377},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2550,"byte_end":2558,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"PalletId","qualname":"::PalletId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A pallet identifier. These are per pallet and should be stored in a registry somewhere.\n","sig":null,"attributes":[{"value":"/ A pallet identifier. These are per pallet and should be stored in a registry somewhere.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2393,"byte_end":2484,"line_start":94,"line_end":94,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":11379},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2559,"byte_end":2570,"line_start":96,"line_end":96,"column_start":21,"column_end":32},"name":"0","qualname":"::PalletId::0","value":"[u8; 8]","parent":{"krate":0,"index":11377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4228},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":13868,"byte_end":13873,"line_start":495,"line_end":495,"column_start":8,"column_end":13},"name":"debug","qualname":"::debug","value":"pub fn debug<impl sp_std::fmt::Debug: sp_std::fmt::Debug>(&impl sp_std::fmt::Debug)","parent":null,"children":[],"decl_id":null,"docs":" Print out the debuggable type.\n","sig":null,"attributes":[{"value":"/ Print out the debuggable type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":13826,"byte_end":13860,"line_start":494,"line_end":494,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":4279},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35229,"byte_end":35243,"line_start":1229,"line_end":1229,"column_start":9,"column_end":23},"name":"pallet_prelude","qualname":"::pallet_prelude","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4283},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4412},{"krate":0,"index":4415},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4422},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4434},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4443}],"decl_id":null,"docs":" Prelude to be used alongside pallet macro, for ease of use.\n","sig":null,"attributes":[{"value":"/ Prelude to be used alongside pallet macro, for ease of use.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":35157,"byte_end":35220,"line_start":1228,"line_end":1228,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93685,"byte_end":93686,"line_start":65,"line_end":65,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227519,"byte_end":227520,"line_start":31,"line_end":31,"column_start":69,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228281,"byte_end":228291,"line_start":46,"line_end":46,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228421,"byte_end":228431,"line_start":51,"line_end":51,"column_start":63,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228480,"byte_end":228490,"line_start":53,"line_end":53,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231609,"byte_end":231619,"line_start":164,"line_end":164,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231926,"byte_end":231936,"line_start":176,"line_end":176,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232128,"byte_end":232138,"line_start":183,"line_end":183,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232368,"byte_end":232378,"line_start":192,"line_end":192,"column_start":69,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232577,"byte_end":232587,"line_start":199,"line_end":199,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232784,"byte_end":232794,"line_start":207,"line_end":207,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233143,"byte_end":233153,"line_start":215,"line_end":215,"column_start":63,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234548,"byte_end":234561,"line_start":253,"line_end":253,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":235179,"byte_end":235190,"line_start":275,"line_end":275,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":235776,"byte_end":235793,"line_start":299,"line_end":299,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":256370,"byte_end":256388,"line_start":105,"line_end":105,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":257200,"byte_end":257201,"line_start":139,"line_end":139,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":258772,"byte_end":258773,"line_start":197,"line_end":197,"column_start":86,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":647},{"krate":0,"index":652},{"krate":0,"index":657},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":269965,"byte_end":269966,"line_start":127,"line_end":127,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":781},{"krate":0,"index":787},{"krate":0,"index":793},{"krate":0,"index":799},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":275806,"byte_end":275807,"line_start":338,"line_end":338,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":284033,"byte_end":284034,"line_start":56,"line_end":56,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287342,"byte_end":287357,"line_start":35,"line_end":35,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":288412,"byte_end":288427,"line_start":61,"line_end":61,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289341,"byte_end":289359,"line_start":96,"line_end":96,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":290484,"byte_end":290502,"line_start":123,"line_end":123,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307993,"byte_end":308005,"line_start":42,"line_end":42,"column_start":2,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":308675,"byte_end":308687,"line_start":65,"line_end":65,"column_start":2,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309360,"byte_end":309372,"line_start":84,"line_end":84,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313664,"byte_end":313676,"line_start":203,"line_end":203,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318647,"byte_end":318657,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":319463,"byte_end":319473,"line_start":78,"line_end":78,"column_start":2,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320045,"byte_end":320055,"line_start":96,"line_end":96,"column_start":2,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320904,"byte_end":320914,"line_start":124,"line_end":124,"column_start":2,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1266},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326827,"byte_end":326837,"line_start":287,"line_end":287,"column_start":2,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328493,"byte_end":328503,"line_start":331,"line_end":331,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336631,"byte_end":336647,"line_start":57,"line_end":57,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":337572,"byte_end":337588,"line_start":87,"line_end":87,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":338277,"byte_end":338293,"line_start":107,"line_end":107,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":339383,"byte_end":339399,"line_start":151,"line_end":151,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1464},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1480},{"krate":0,"index":1486},{"krate":0,"index":1491},{"krate":0,"index":1497},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347217,"byte_end":347233,"line_start":380,"line_end":380,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349978,"byte_end":349994,"line_start":444,"line_end":444,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":305039,"byte_end":305050,"line_start":60,"line_end":60,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":305557,"byte_end":305567,"line_start":80,"line_end":80,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":306172,"byte_end":306185,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":306350,"byte_end":306363,"line_start":107,"line_end":107,"column_start":66,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":306448,"byte_end":306461,"line_start":108,"line_end":108,"column_start":66,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185847,"byte_end":185868,"line_start":56,"line_end":56,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202540,"byte_end":202554,"line_start":527,"line_end":527,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202742,"byte_end":202756,"line_start":535,"line_end":535,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204498,"byte_end":204521,"line_start":598,"line_end":598,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204712,"byte_end":204735,"line_start":606,"line_end":606,"column_start":25,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":205431,"byte_end":205454,"line_start":629,"line_end":629,"column_start":44,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":206245,"byte_end":206268,"line_start":654,"line_end":654,"column_start":22,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211255,"byte_end":211258,"line_start":817,"line_end":817,"column_start":29,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211296,"byte_end":211302,"line_start":818,"line_end":818,"column_start":32,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211362,"byte_end":211372,"line_start":819,"line_end":819,"column_start":51,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211422,"byte_end":211425,"line_start":822,"line_end":822,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211472,"byte_end":211475,"line_start":823,"line_end":823,"column_start":41,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211789,"byte_end":211795,"line_start":828,"line_end":828,"column_start":56,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358789,"byte_end":358790,"line_start":35,"line_end":35,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359898,"byte_end":359906,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360106,"byte_end":360114,"line_start":83,"line_end":83,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360262,"byte_end":360274,"line_start":91,"line_end":91,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360551,"byte_end":360563,"line_start":102,"line_end":102,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360820,"byte_end":360836,"line_start":114,"line_end":114,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361120,"byte_end":361136,"line_start":125,"line_end":125,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361369,"byte_end":361379,"line_start":137,"line_end":137,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361638,"byte_end":361648,"line_start":147,"line_end":147,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361902,"byte_end":361909,"line_start":157,"line_end":157,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":362158,"byte_end":362165,"line_start":167,"line_end":167,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454523,"byte_end":454539,"line_start":262,"line_end":262,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454959,"byte_end":454975,"line_start":273,"line_end":273,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":456563,"byte_end":456564,"line_start":316,"line_end":316,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460113,"byte_end":460122,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460352,"byte_end":460361,"line_start":67,"line_end":67,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460646,"byte_end":460655,"line_start":78,"line_end":78,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460825,"byte_end":460834,"line_start":88,"line_end":88,"column_start":3,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":461064,"byte_end":461073,"line_start":98,"line_end":98,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439136,"byte_end":439137,"line_start":170,"line_end":170,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439873,"byte_end":439879,"line_start":196,"line_end":196,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":440927,"byte_end":440933,"line_start":222,"line_end":222,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":441412,"byte_end":441418,"line_start":235,"line_end":235,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":441817,"byte_end":441823,"line_start":247,"line_end":247,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":442262,"byte_end":442268,"line_start":260,"line_end":260,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":443086,"byte_end":443092,"line_start":291,"line_end":291,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482980,"byte_end":482996,"line_start":277,"line_end":277,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":483459,"byte_end":483475,"line_start":288,"line_end":288,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":485222,"byte_end":485223,"line_start":335,"line_end":335,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488870,"byte_end":488879,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489143,"byte_end":489152,"line_start":69,"line_end":69,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489447,"byte_end":489456,"line_start":81,"line_end":81,"column_start":3,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":471427,"byte_end":471428,"line_start":200,"line_end":200,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/split_two_ways.rs","byte_start":515278,"byte_end":515290,"line_start":42,"line_end":42,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517062,"byte_end":517077,"line_start":38,"line_end":38,"column_start":3,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522270,"byte_end":522289,"line_start":52,"line_end":52,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523805,"byte_end":523823,"line_start":91,"line_end":91,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525540,"byte_end":525555,"line_start":143,"line_end":143,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526254,"byte_end":526255,"line_start":164,"line_end":164,"column_start":66,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526494,"byte_end":526495,"line_start":168,"line_end":168,"column_start":72,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527596,"byte_end":527599,"line_start":30,"line_end":30,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529369,"byte_end":529379,"line_start":95,"line_end":95,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529609,"byte_end":529616,"line_start":101,"line_end":101,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529747,"byte_end":529754,"line_start":104,"line_end":104,"column_start":71,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544262,"byte_end":544278,"line_start":57,"line_end":57,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3293}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544563,"byte_end":544579,"line_start":66,"line_end":66,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544655,"byte_end":544671,"line_start":72,"line_end":72,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544909,"byte_end":544925,"line_start":80,"line_end":80,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551796,"byte_end":551797,"line_start":30,"line_end":30,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552293,"byte_end":552303,"line_start":50,"line_end":50,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553080,"byte_end":553091,"line_start":74,"line_end":74,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553232,"byte_end":553243,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555726,"byte_end":555727,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559898,"byte_end":559904,"line_start":307,"line_end":307,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":560090,"byte_end":560108,"line_start":316,"line_end":316,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563881,"byte_end":563895,"line_start":88,"line_end":88,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3562},{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571043,"byte_end":571056,"line_start":91,"line_end":91,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572576,"byte_end":572589,"line_start":140,"line_end":140,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599348,"byte_end":599366,"line_start":56,"line_end":56,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3839}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599489,"byte_end":599507,"line_start":62,"line_end":62,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3841},{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":600057,"byte_end":600081,"line_start":80,"line_end":80,"column_start":85,"column_end":109},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608248,"byte_end":608252,"line_start":207,"line_end":207,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609707,"byte_end":609720,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609773,"byte_end":609786,"line_start":246,"line_end":246,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610527,"byte_end":610540,"line_start":269,"line_end":269,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3962},{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612802,"byte_end":612818,"line_start":333,"line_end":333,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614117,"byte_end":614133,"line_start":371,"line_end":371,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614319,"byte_end":614335,"line_start":381,"line_end":381,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614459,"byte_end":614475,"line_start":390,"line_end":390,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614616,"byte_end":614632,"line_start":399,"line_end":399,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614776,"byte_end":614792,"line_start":408,"line_end":408,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615644,"byte_end":615645,"line_start":437,"line_end":437,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4000}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615955,"byte_end":615961,"line_start":451,"line_end":451,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":616057,"byte_end":616063,"line_start":457,"line_end":457,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4006}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":616173,"byte_end":616179,"line_start":463,"line_end":463,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618118,"byte_end":618128,"line_start":537,"line_end":537,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618297,"byte_end":618307,"line_start":545,"line_end":545,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618526,"byte_end":618536,"line_start":555,"line_end":555,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618742,"byte_end":618752,"line_start":563,"line_end":563,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618974,"byte_end":618984,"line_start":573,"line_end":573,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619143,"byte_end":619153,"line_start":581,"line_end":581,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619365,"byte_end":619383,"line_start":591,"line_end":591,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619655,"byte_end":619671,"line_start":603,"line_end":603,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4088}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619955,"byte_end":619961,"line_start":614,"line_end":614,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620390,"byte_end":620405,"line_start":632,"line_end":632,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":623443,"byte_end":623454,"line_start":717,"line_end":717,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4111},{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624069,"byte_end":624085,"line_start":743,"line_end":743,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4118}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624942,"byte_end":624958,"line_start":772,"line_end":772,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625159,"byte_end":625175,"line_start":781,"line_end":781,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2590,"byte_end":2598,"line_start":98,"line_end":98,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4221}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1386,"byte_end":1394,"line_start":53,"line_end":53,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1404,"byte_end":1411,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185299,"byte_end":185307,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":236}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185317,"byte_end":185323,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":273}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185333,"byte_end":185344,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":335}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185354,"byte_end":185359,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":480}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185384,"byte_end":185393,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":534}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185403,"byte_end":185412,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185422,"byte_end":185427,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1007}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1444,"byte_end":1449,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2007}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1472,"byte_end":1480,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2026}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1503,"byte_end":1517,"line_start":61,"line_end":61,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":2078}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1540,"byte_end":1548,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2081}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1571,"byte_end":1579,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2112}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1602,"byte_end":1607,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2130}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1617,"byte_end":1623,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2149}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":429268,"byte_end":429274,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2150}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":431937,"byte_end":431945,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2151}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":431955,"byte_end":431964,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2445}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":431974,"byte_end":431982,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2681}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens.rs","byte_start":431992,"byte_end":432001,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2799}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits.rs","byte_start":430921,"byte_end":430929,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3714}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1633,"byte_end":1640,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3859}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":1650,"byte_end":1659,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4128}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93615,"byte_end":93620,"line_start":64,"line_end":64,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":21,"index":221},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93623,"byte_end":93633,"line_start":64,"line_end":64,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":21,"index":861},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93636,"byte_end":93641,"line_start":64,"line_end":64,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93644,"byte_end":93646,"line_start":64,"line_end":64,"column_start":51,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93654,"byte_end":93659,"line_start":64,"line_end":64,"column_start":61,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":93685,"byte_end":93686,"line_start":65,"line_end":65,"column_start":23,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227409,"byte_end":227418,"line_start":30,"line_end":30,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":21,"index":227},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227421,"byte_end":227426,"line_start":30,"line_end":30,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227442,"byte_end":227447,"line_start":30,"line_end":30,"column_start":61,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":227519,"byte_end":227520,"line_start":31,"line_end":31,"column_start":69,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228281,"byte_end":228291,"line_start":46,"line_end":46,"column_start":65,"column_end":75},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228421,"byte_end":228431,"line_start":51,"line_end":51,"column_start":63,"column_end":73},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":228480,"byte_end":228490,"line_start":53,"line_end":53,"column_start":39,"column_end":49},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231609,"byte_end":231619,"line_start":164,"line_end":164,"column_start":59,"column_end":69},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":231926,"byte_end":231936,"line_start":176,"line_end":176,"column_start":57,"column_end":67},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232128,"byte_end":232138,"line_start":183,"line_end":183,"column_start":62,"column_end":72},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232368,"byte_end":232378,"line_start":192,"line_end":192,"column_start":69,"column_end":79},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232577,"byte_end":232587,"line_start":199,"line_end":199,"column_start":70,"column_end":80},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4452},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":232784,"byte_end":232794,"line_start":207,"line_end":207,"column_start":63,"column_end":73},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4452},"to":{"krate":21,"index":211}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":233143,"byte_end":233153,"line_start":215,"line_end":215,"column_start":63,"column_end":73},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4452},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":234548,"byte_end":234561,"line_start":253,"line_end":253,"column_start":27,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":459},"to":{"krate":0,"index":435}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":235179,"byte_end":235190,"line_start":275,"line_end":275,"column_start":30,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":466},"to":{"krate":0,"index":440}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/bounded_vec.rs","byte_start":235776,"byte_end":235793,"line_start":299,"line_end":299,"column_start":41,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":475},"to":{"krate":0,"index":447}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":256370,"byte_end":256388,"line_start":105,"line_end":105,"column_start":16,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":257200,"byte_end":257201,"line_start":139,"line_end":139,"column_start":41,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":1720}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/map.rs","byte_start":258772,"byte_end":258773,"line_start":197,"line_end":197,"column_start":86,"column_end":87},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":1669}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":269965,"byte_end":269966,"line_start":127,"line_end":127,"column_start":61,"column_end":62},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/double_map.rs","byte_start":275806,"byte_end":275807,"line_start":338,"line_end":338,"column_start":52,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":814},"to":{"krate":0,"index":1729}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/generator/value.rs","byte_start":284033,"byte_end":284034,"line_start":56,"line_end":56,"column_start":69,"column_end":70},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":876},"to":{"krate":0,"index":1642}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":287342,"byte_end":287357,"line_start":35,"line_end":35,"column_start":9,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":288412,"byte_end":288427,"line_start":61,"line_end":61,"column_start":38,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":939},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":289341,"byte_end":289359,"line_start":96,"line_end":96,"column_start":40,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/migration.rs","byte_start":290484,"byte_end":290502,"line_start":123,"line_end":123,"column_start":6,"column_end":24},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":307993,"byte_end":308005,"line_start":42,"line_end":42,"column_start":2,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":308675,"byte_end":308687,"line_start":65,"line_end":65,"column_start":2,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":309360,"byte_end":309372,"line_start":84,"line_end":84,"column_start":41,"column_end":53},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/value.rs","byte_start":313664,"byte_end":313676,"line_start":203,"line_end":203,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":1128}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":318647,"byte_end":318657,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1197},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":319463,"byte_end":319473,"line_start":78,"line_end":78,"column_start":2,"column_end":12},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1197},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320045,"byte_end":320055,"line_start":96,"line_end":96,"column_start":2,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":320904,"byte_end":320914,"line_start":124,"line_end":124,"column_start":2,"column_end":12},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":326827,"byte_end":326837,"line_start":287,"line_end":287,"column_start":2,"column_end":12},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/map.rs","byte_start":328493,"byte_end":328503,"line_start":331,"line_end":331,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1197},"to":{"krate":0,"index":1308}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":336631,"byte_end":336647,"line_start":57,"line_end":57,"column_start":2,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":720}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":337572,"byte_end":337588,"line_start":87,"line_end":87,"column_start":2,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":338277,"byte_end":338293,"line_start":107,"line_end":107,"column_start":2,"column_end":18},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":339383,"byte_end":339399,"line_start":151,"line_end":151,"column_start":2,"column_end":18},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":347217,"byte_end":347233,"line_start":380,"line_end":380,"column_start":2,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/double_map.rs","byte_start":349978,"byte_end":349994,"line_start":444,"line_end":444,"column_start":6,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":1533}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":305039,"byte_end":305050,"line_start":60,"line_end":60,"column_start":66,"column_end":77},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1581},"to":{"krate":0,"index":1574}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":305557,"byte_end":305567,"line_start":80,"line_end":80,"column_start":57,"column_end":67},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":1574}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":306172,"byte_end":306185,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1599},"to":{"krate":189,"index":85}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":306350,"byte_end":306363,"line_start":107,"line_end":107,"column_start":66,"column_end":79},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1599},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/types/mod.rs","byte_start":306448,"byte_end":306461,"line_start":108,"line_end":108,"column_start":66,"column_end":79},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1599},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":185847,"byte_end":185868,"line_start":56,"line_end":56,"column_start":16,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":194634,"byte_end":194644,"line_start":307,"line_end":307,"column_start":60,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":1669},"to":{"krate":0,"index":1720}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":195633,"byte_end":195649,"line_start":331,"line_end":331,"column_start":4,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":1744},"to":{"krate":0,"index":1729}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202540,"byte_end":202554,"line_start":527,"line_end":527,"column_start":9,"column_end":23},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":202742,"byte_end":202756,"line_start":535,"line_end":535,"column_start":22,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204498,"byte_end":204521,"line_start":598,"line_end":598,"column_start":9,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":204712,"byte_end":204735,"line_start":606,"line_end":606,"column_start":25,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":205431,"byte_end":205454,"line_start":629,"line_end":629,"column_start":44,"column_end":67},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":206245,"byte_end":206268,"line_start":654,"line_end":654,"column_start":22,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1829},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210124,"byte_end":210130,"line_start":786,"line_end":786,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":1883},"to":{"krate":0,"index":1869}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210437,"byte_end":210443,"line_start":793,"line_end":793,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1883},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":210453,"byte_end":210465,"line_start":793,"line_end":793,"column_start":57,"column_end":69},"kind":"SuperTrait","from":{"krate":21,"index":211},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211255,"byte_end":211258,"line_start":817,"line_end":817,"column_start":29,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":1883}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211296,"byte_end":211302,"line_start":818,"line_end":818,"column_start":32,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":190,"index":2714},"to":{"krate":0,"index":1883}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211362,"byte_end":211372,"line_start":819,"line_end":819,"column_start":51,"column_end":61},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4452},"to":{"krate":0,"index":1883}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211422,"byte_end":211425,"line_start":822,"line_end":822,"column_start":38,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":1869}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211472,"byte_end":211475,"line_start":823,"line_end":823,"column_start":41,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/storage/mod.rs","byte_start":211789,"byte_end":211795,"line_start":828,"line_end":828,"column_start":56,"column_end":62},"kind":{"Impl":{"id":64}},"from":{"krate":190,"index":2714},"to":{"krate":0,"index":1869}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358503,"byte_end":358508,"line_start":25,"line_end":25,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":358789,"byte_end":358790,"line_start":35,"line_end":35,"column_start":29,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1933},"to":{"krate":0,"index":1920}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359657,"byte_end":359670,"line_start":67,"line_end":67,"column_start":36,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":1945},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":359898,"byte_end":359906,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1951},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360106,"byte_end":360114,"line_start":83,"line_end":83,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1951},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360262,"byte_end":360274,"line_start":91,"line_end":91,"column_start":24,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1959},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360551,"byte_end":360563,"line_start":102,"line_end":102,"column_start":34,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1959},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":360820,"byte_end":360836,"line_start":114,"line_end":114,"column_start":24,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1967},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361120,"byte_end":361136,"line_start":125,"line_end":125,"column_start":34,"column_end":50},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1967},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361369,"byte_end":361379,"line_start":137,"line_end":137,"column_start":24,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1975},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361638,"byte_end":361648,"line_start":147,"line_end":147,"column_start":24,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1983},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":361902,"byte_end":361909,"line_start":157,"line_end":157,"column_start":24,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1991},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/hash.rs","byte_start":362158,"byte_end":362165,"line_start":167,"line_end":167,"column_start":24,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1999},"to":{"krate":0,"index":1945}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":445489,"byte_end":445496,"line_start":32,"line_end":32,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":2360},"to":{"krate":0,"index":2209}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":450318,"byte_end":450325,"line_start":148,"line_end":148,"column_start":34,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2360},"to":{"krate":0,"index":2221}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454523,"byte_end":454539,"line_start":262,"line_end":262,"column_start":6,"column_end":22},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2229},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":454959,"byte_end":454975,"line_start":273,"line_end":273,"column_start":6,"column_end":22},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2238},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/balanced.rs","byte_start":456563,"byte_end":456564,"line_start":316,"line_end":316,"column_start":67,"column_end":68},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2261},"to":{"krate":0,"index":2209}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460113,"byte_end":460122,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2296},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460352,"byte_end":460361,"line_start":67,"line_end":67,"column_start":15,"column_end":24},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2296},"to":{"krate":0,"index":3382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460646,"byte_end":460655,"line_start":78,"line_end":78,"column_start":15,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2296},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":460825,"byte_end":460834,"line_start":88,"line_end":88,"column_start":3,"column_end":12},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible/imbalance.rs","byte_start":461064,"byte_end":461073,"line_start":98,"line_end":98,"column_start":21,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2296},"to":{"krate":0,"index":2910}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":434329,"byte_end":434336,"line_start":57,"line_end":57,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":2360},"to":{"krate":0,"index":2369}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436563,"byte_end":436570,"line_start":102,"line_end":102,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":2360},"to":{"krate":0,"index":2375}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":436882,"byte_end":436889,"line_start":113,"line_end":113,"column_start":35,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":2360},"to":{"krate":0,"index":2378}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437243,"byte_end":437254,"line_start":122,"line_end":122,"column_start":34,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2378},"to":{"krate":0,"index":2382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":437268,"byte_end":437276,"line_start":122,"line_end":122,"column_start":59,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2375},"to":{"krate":0,"index":2382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438582,"byte_end":438590,"line_start":156,"line_end":156,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":2209},"to":{"krate":0,"index":2387}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":438604,"byte_end":438614,"line_start":156,"line_end":156,"column_start":58,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":2382},"to":{"krate":0,"index":2387}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439136,"byte_end":439137,"line_start":170,"line_end":170,"column_start":31,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2392},"to":{"krate":0,"index":2387}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":439873,"byte_end":439879,"line_start":196,"line_end":196,"column_start":26,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":2360}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":440927,"byte_end":440933,"line_start":222,"line_end":222,"column_start":25,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":2369}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":441412,"byte_end":441418,"line_start":235,"line_end":235,"column_start":27,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":2375}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":441817,"byte_end":441823,"line_start":247,"line_end":247,"column_start":30,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":2378}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":442262,"byte_end":442268,"line_start":260,"line_end":260,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":2382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungible.rs","byte_start":443086,"byte_end":443092,"line_start":291,"line_end":291,"column_start":29,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":2221}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":473106,"byte_end":473113,"line_start":32,"line_end":32,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":2646},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":478497,"byte_end":478504,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2646},"to":{"krate":0,"index":2509}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":482980,"byte_end":482996,"line_start":277,"line_end":277,"column_start":6,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":2589}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":483459,"byte_end":483475,"line_start":288,"line_end":288,"column_start":6,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2526},"to":{"krate":0,"index":2589}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/balanced.rs","byte_start":485222,"byte_end":485223,"line_start":335,"line_end":335,"column_start":67,"column_end":68},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2549},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":488870,"byte_end":488879,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2593},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489143,"byte_end":489152,"line_start":69,"line_end":69,"column_start":15,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2593},"to":{"krate":0,"index":3382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles/imbalance.rs","byte_start":489447,"byte_end":489456,"line_start":81,"line_end":81,"column_start":3,"column_end":12},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":465388,"byte_end":465395,"line_start":64,"line_end":64,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":2646},"to":{"krate":0,"index":2656}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":468729,"byte_end":468736,"line_start":132,"line_end":132,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":2646},"to":{"krate":0,"index":2662}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469092,"byte_end":469099,"line_start":144,"line_end":144,"column_start":35,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":2646},"to":{"krate":0,"index":2665}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469512,"byte_end":469523,"line_start":153,"line_end":153,"column_start":34,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2665},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":469537,"byte_end":469545,"line_start":153,"line_end":153,"column_start":59,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2662},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470880,"byte_end":470888,"line_start":186,"line_end":186,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":2497},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":470902,"byte_end":470912,"line_start":186,"line_end":186,"column_start":58,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":2669},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/fungibles.rs","byte_start":471427,"byte_end":471428,"line_start":200,"line_end":200,"column_start":31,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/reservable.rs","byte_start":500788,"byte_end":500796,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":2776},"to":{"krate":0,"index":2726}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/currency/lockable.rs","byte_start":504685,"byte_end":504693,"line_start":30,"line_end":30,"column_start":40,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2776},"to":{"krate":0,"index":2752}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/split_two_ways.rs","byte_start":515278,"byte_end":515290,"line_start":42,"line_end":42,"column_start":23,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2834},"to":{"krate":0,"index":2891}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance/signed_imbalance.rs","byte_start":517062,"byte_end":517077,"line_start":38,"line_end":38,"column_start":3,"column_end":18},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509846,"byte_end":509851,"line_start":61,"line_end":61,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":2910}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509854,"byte_end":509861,"line_start":61,"line_end":61,"column_start":39,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":3382},"to":{"krate":0,"index":2910}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/imbalance.rs","byte_start":509864,"byte_end":509871,"line_start":61,"line_end":61,"column_start":49,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":2910}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":522270,"byte_end":522289,"line_start":52,"line_end":52,"column_start":21,"column_end":40},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":523805,"byte_end":523823,"line_start":91,"line_end":91,"column_start":6,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":525540,"byte_end":525555,"line_start":143,"line_end":143,"column_start":6,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526142,"byte_end":526151,"line_start":163,"line_end":163,"column_start":20,"column_end":29},"kind":"SuperTrait","from":{"krate":21,"index":227},"to":{"krate":0,"index":2961}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526154,"byte_end":526158,"line_start":163,"line_end":163,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":2961}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526161,"byte_end":526168,"line_start":163,"line_end":163,"column_start":39,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":2961}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526171,"byte_end":526173,"line_start":163,"line_end":163,"column_start":49,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":2961}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526176,"byte_end":526185,"line_start":163,"line_end":163,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":2961}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526254,"byte_end":526255,"line_start":164,"line_end":164,"column_start":66,"column_end":67},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2963},"to":{"krate":0,"index":2961}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526370,"byte_end":526390,"line_start":167,"line_end":167,"column_start":20,"column_end":40},"kind":"SuperTrait","from":{"krate":192,"index":222},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526393,"byte_end":526402,"line_start":167,"line_end":167,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":21,"index":227},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526405,"byte_end":526409,"line_start":167,"line_end":167,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526412,"byte_end":526419,"line_start":167,"line_end":167,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/tokens/misc.rs","byte_start":526494,"byte_end":526495,"line_start":168,"line_end":168,"column_start":72,"column_end":73},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2966},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":527596,"byte_end":527599,"line_start":30,"line_end":30,"column_start":25,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3037},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529369,"byte_end":529379,"line_start":95,"line_end":95,"column_start":57,"column_end":67},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3050},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529609,"byte_end":529616,"line_start":101,"line_end":101,"column_start":52,"column_end":59},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3058},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/members.rs","byte_start":529747,"byte_end":529754,"line_start":104,"line_end":104,"column_start":71,"column_end":78},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3058},"to":{"krate":0,"index":3045}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":534775,"byte_end":534787,"line_start":45,"line_end":45,"column_start":54,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":3156},"to":{"krate":0,"index":3162}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/validation.rs","byte_start":535837,"byte_end":535860,"line_start":75,"line_end":75,"column_start":43,"column_end":66},"kind":"SuperTrait","from":{"krate":191,"index":245},"to":{"krate":0,"index":3180}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":543412,"byte_end":543418,"line_start":33,"line_end":33,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":3265},"to":{"krate":0,"index":3271}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544262,"byte_end":544278,"line_start":57,"line_end":57,"column_start":28,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544563,"byte_end":544579,"line_start":66,"line_end":66,"column_start":37,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3279},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544655,"byte_end":544671,"line_start":72,"line_end":72,"column_start":28,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":544909,"byte_end":544925,"line_start":80,"line_end":80,"column_start":37,"column_end":53},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545156,"byte_end":545161,"line_start":89,"line_end":89,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3307}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545164,"byte_end":545168,"line_start":89,"line_end":89,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":3307}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/filter.rs","byte_start":545171,"byte_end":545175,"line_start":89,"line_end":89,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":3307}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":551796,"byte_end":551797,"line_start":30,"line_end":30,"column_start":40,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3369},"to":{"krate":0,"index":3366}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552293,"byte_end":552303,"line_start":50,"line_end":50,"column_start":29,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3377},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":552457,"byte_end":552462,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553080,"byte_end":553091,"line_start":74,"line_end":74,"column_start":24,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3384},"to":{"krate":0,"index":3382}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":553232,"byte_end":553243,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555448,"byte_end":555452,"line_start":168,"line_end":168,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2756},"to":{"krate":0,"index":3418}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555458,"byte_end":555462,"line_start":168,"line_end":168,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":3418}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":555726,"byte_end":555727,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3425},"to":{"krate":0,"index":3418}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559734,"byte_end":559743,"line_start":301,"line_end":301,"column_start":46,"column_end":55},"kind":"SuperTrait","from":{"krate":190,"index":1537},"to":{"krate":0,"index":3444}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":559898,"byte_end":559904,"line_start":307,"line_end":307,"column_start":58,"column_end":64},"kind":{"Impl":{"id":125}},"from":{"krate":190,"index":3345},"to":{"krate":0,"index":3444}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/misc.rs","byte_start":560090,"byte_end":560108,"line_start":316,"line_end":316,"column_start":26,"column_end":44},"kind":{"Impl":{"id":126}},"from":{"krate":190,"index":2180},"to":{"krate":0,"index":3444}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/stored_map.rs","byte_start":563881,"byte_end":563895,"line_start":88,"line_end":88,"column_start":23,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3544},"to":{"krate":0,"index":3524}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":571043,"byte_end":571056,"line_start":91,"line_end":91,"column_start":6,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/metadata.rs","byte_start":572576,"byte_end":572589,"line_start":140,"line_end":140,"column_start":34,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7497},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584568,"byte_end":584575,"line_start":285,"line_end":285,"column_start":34,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":3682}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/hooks.rs","byte_start":584578,"byte_end":584603,"line_start":285,"line_end":285,"column_start":44,"column_end":69},"kind":"SuperTrait","from":{"krate":190,"index":3601},"to":{"krate":0,"index":3682}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/dispatch.rs","byte_start":595701,"byte_end":595706,"line_start":54,"line_end":54,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3794}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599348,"byte_end":599366,"line_start":56,"line_end":56,"column_start":6,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":599489,"byte_end":599507,"line_start":62,"line_end":62,"column_start":31,"column_end":49},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":3832}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/traits/voting.rs","byte_start":600057,"byte_end":600081,"line_start":80,"line_end":80,"column_start":85,"column_end":109},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3843},"to":{"krate":0,"index":3832}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":608248,"byte_end":608252,"line_start":207,"line_end":207,"column_start":18,"column_end":22},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10890},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609707,"byte_end":609720,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10965},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":609773,"byte_end":609786,"line_start":246,"line_end":246,"column_start":6,"column_end":19},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":610527,"byte_end":610540,"line_start":269,"line_end":269,"column_start":35,"column_end":48},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10965},"to":{"krate":0,"index":3957}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":612802,"byte_end":612818,"line_start":333,"line_end":333,"column_start":6,"column_end":22},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":11024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614117,"byte_end":614133,"line_start":371,"line_end":371,"column_start":39,"column_end":55},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":11024},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614319,"byte_end":614335,"line_start":381,"line_end":381,"column_start":21,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":11024},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614459,"byte_end":614475,"line_start":390,"line_end":390,"column_start":31,"column_end":47},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":11024},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614616,"byte_end":614632,"line_start":399,"line_end":399,"column_start":19,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":11024},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":614776,"byte_end":614792,"line_start":408,"line_end":408,"column_start":40,"column_end":56},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":11024},"to":{"krate":190,"index":1671}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615644,"byte_end":615645,"line_start":437,"line_end":437,"column_start":34,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3999},"to":{"krate":0,"index":3996}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":615955,"byte_end":615961,"line_start":451,"line_end":451,"column_start":26,"column_end":32},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3925},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":616057,"byte_end":616063,"line_start":457,"line_end":457,"column_start":33,"column_end":39},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3925},"to":{"krate":0,"index":3944}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":616173,"byte_end":616179,"line_start":463,"line_end":463,"column_start":24,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3925},"to":{"krate":0,"index":3947}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618118,"byte_end":618128,"line_start":537,"line_end":537,"column_start":40,"column_end":50},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618297,"byte_end":618307,"line_start":545,"line_end":545,"column_start":44,"column_end":54},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618526,"byte_end":618536,"line_start":555,"line_end":555,"column_start":47,"column_end":57},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":3944}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618742,"byte_end":618752,"line_start":563,"line_end":563,"column_start":51,"column_end":61},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":3944}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":618974,"byte_end":618984,"line_start":573,"line_end":573,"column_start":38,"column_end":48},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":3947}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619143,"byte_end":619153,"line_start":581,"line_end":581,"column_start":42,"column_end":52},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":3947}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619365,"byte_end":619383,"line_start":591,"line_end":591,"column_start":6,"column_end":24},"kind":{"Impl":{"id":181}},"from":{"krate":190,"index":2180},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619655,"byte_end":619671,"line_start":603,"line_end":603,"column_start":6,"column_end":22},"kind":{"Impl":{"id":182}},"from":{"krate":190,"index":2291},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":619955,"byte_end":619961,"line_start":614,"line_end":614,"column_start":76,"column_end":82},"kind":{"Impl":{"id":183}},"from":{"krate":190,"index":3345},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":620390,"byte_end":620405,"line_start":632,"line_end":632,"column_start":6,"column_end":21},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":11052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":623443,"byte_end":623454,"line_start":717,"line_end":717,"column_start":35,"column_end":46},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4105},"to":{"krate":0,"index":4100}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624069,"byte_end":624085,"line_start":743,"line_end":743,"column_start":9,"column_end":25},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":11103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":624942,"byte_end":624958,"line_start":772,"line_end":772,"column_start":16,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":11103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/weights.rs","byte_start":625159,"byte_end":625175,"line_start":781,"line_end":781,"column_start":6,"column_end":22},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":11103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/lib.rs","byte_start":2590,"byte_end":2598,"line_start":98,"line_end":98,"column_start":17,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":11377},"to":{"krate":60,"index":2298}}]}