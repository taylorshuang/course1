{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic","program":"/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_arithmetic","--edition=2018","/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=11ea52dbc4671016","-C","extra-filename=-11ea52dbc4671016","--out-dir","/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","-L","dependency=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","--extern","integer_sqrt=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libinteger_sqrt-2a9d80b74b49f64b.rmeta","--extern","num_traits=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libnum_traits-36945435b346d9c6.rmeta","--extern","codec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libparity_scale_codec-82cf01292b2737e4.rmeta","--extern","serde=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libserde-176d00028d140c10.rmeta","--extern","sp_debug_derive=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_debug_derive-1ca7a46ee5b8e436.so","--extern","sp_std=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_std-418d35f07a66cda9.rmeta","--extern","static_assertions=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libstatic_assertions-140fe15ab40ccc28.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_arithmetic-11ea52dbc4671016.rmeta"},"prelude":{"crate_id":{"name":"sp_arithmetic","disambiguator":[12366176412486720700,16434090749860582712]},"crate_root":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src","external_crates":[{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","num":19,"id":{"name":"num_traits","disambiguator":[468258127332996008,10301193667755463888]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","num":20,"id":{"name":"sp_std","disambiguator":[2682330704443012759,7066719197896240899]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":21,"id":{"name":"parity_scale_codec","disambiguator":[9863673375670885385,13575924348645702016]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":22,"id":{"name":"parity_scale_codec_derive","disambiguator":[12287734400278992213,9757486750001437063]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":23,"id":{"name":"arrayvec","disambiguator":[10892931398947536880,12549142608372466002]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":24,"id":{"name":"byte_slice_cast","disambiguator":[709702439622045722,10712509937866309499]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":25,"id":{"name":"serde","disambiguator":[1013328755442281475,12414158929771731165]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":26,"id":{"name":"serde_derive","disambiguator":[18017531714661946146,12785885005030363355]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","num":27,"id":{"name":"integer_sqrt","disambiguator":[4828971386122269704,12979638080760466369]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","num":28,"id":{"name":"sp_debug_derive","disambiguator":[3324317708669829777,10747756365752449359]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","num":29,"id":{"name":"static_assertions","disambiguator":[2800172271264622283,16868211187352620724]}}],"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":686,"byte_end":15651,"line_start":18,"line_end":514,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":27,"index":4},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42496,"byte_end":42513,"line_start":22,"line_end":22,"column_start":23,"column_end":40},"alias_span":null,"name":"IntegerSquareRoot","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":497},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42538,"byte_end":42542,"line_start":24,"line_end":24,"column_start":2,"column_end":6},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":507},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42544,"byte_end":42547,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":230},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42549,"byte_end":42556,"line_start":24,"line_end":24,"column_start":13,"column_end":20},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":596},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42558,"byte_end":42568,"line_start":24,"line_end":24,"column_start":22,"column_end":32},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":599},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42570,"byte_end":42580,"line_start":24,"line_end":24,"column_start":34,"column_end":44},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":601},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42582,"byte_end":42592,"line_start":24,"line_end":24,"column_start":46,"column_end":56},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":603},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42594,"byte_end":42604,"line_start":24,"line_end":24,"column_start":58,"column_end":68},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":608},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42606,"byte_end":42616,"line_start":24,"line_end":24,"column_start":70,"column_end":80},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":610},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42619,"byte_end":42629,"line_start":25,"line_end":25,"column_start":2,"column_end":12},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":613},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42631,"byte_end":42641,"line_start":25,"line_end":25,"column_start":14,"column_end":24},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":818},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42643,"byte_end":42654,"line_start":25,"line_end":25,"column_start":26,"column_end":37},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":898},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42656,"byte_end":42662,"line_start":25,"line_end":25,"column_start":39,"column_end":45},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":19,"index":919},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42664,"byte_end":42672,"line_start":25,"line_end":25,"column_start":47,"column_end":55},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1235,"byte_end":1251,"line_start":43,"line_end":43,"column_start":23,"column_end":39},"alias_span":null,"name":"FixedPointNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1253,"byte_end":1270,"line_start":43,"line_end":43,"column_start":41,"column_end":58},"alias_span":null,"name":"FixedPointOperand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1449},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1272,"byte_end":1280,"line_start":43,"line_end":43,"column_start":60,"column_end":68},"alias_span":null,"name":"FixedI64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1282,"byte_end":1291,"line_start":43,"line_end":43,"column_start":70,"column_end":79},"alias_span":null,"name":"FixedI128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1689},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1293,"byte_end":1302,"line_start":43,"line_end":43,"column_start":81,"column_end":90},"alias_span":null,"name":"FixedU128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1326,"byte_end":1334,"line_start":44,"line_end":44,"column_start":22,"column_end":30},"alias_span":null,"name":"PerThing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1336,"byte_end":1343,"line_start":44,"line_end":44,"column_start":32,"column_end":39},"alias_span":null,"name":"InnerOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1345,"byte_end":1352,"line_start":44,"line_end":44,"column_start":41,"column_end":48},"alias_span":null,"name":"UpperOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1354,"byte_end":1361,"line_start":44,"line_end":44,"column_start":50,"column_end":57},"alias_span":null,"name":"Percent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1363,"byte_end":1369,"line_start":44,"line_end":44,"column_start":59,"column_end":65},"alias_span":null,"name":"PerU16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1084},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1371,"byte_end":1378,"line_start":44,"line_end":44,"column_start":67,"column_end":74},"alias_span":null,"name":"Permill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1380,"byte_end":1387,"line_start":44,"line_end":44,"column_start":76,"column_end":83},"alias_span":null,"name":"Perbill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1389,"byte_end":1400,"line_start":44,"line_end":44,"column_start":85,"column_end":96},"alias_span":null,"name":"Perquintill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1742},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1422,"byte_end":1433,"line_start":45,"line_end":45,"column_start":20,"column_end":31},"alias_span":null,"name":"Rational128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1731},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1435,"byte_end":1451,"line_start":45,"line_end":45,"column_start":33,"column_end":49},"alias_span":null,"name":"RationalInfinite","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":686,"byte_end":15651,"line_start":18,"line_end":514,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":95},{"krate":0,"index":121},{"krate":0,"index":261},{"krate":0,"index":373},{"krate":0,"index":539},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":695},{"krate":0,"index":700}],"decl_id":null,"docs":" Minimal fixed point arithmetic primitives and types for runtime.\n","sig":null,"attributes":[{"value":"/ Minimal fixed point arithmetic primitives and types for runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":686,"byte_end":754,"line_start":18,"line_end":18,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"biguint","qualname":"::biguint","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":707},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":37},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":91},{"krate":0,"index":93}],"decl_id":null,"docs":" Infinite precision unsigned integer for substrate runtime.\n","sig":null,"attributes":[{"value":"/ Infinite precision unsigned integer for substrate runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":16338,"byte_end":16400,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":16789,"byte_end":16795,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Single","qualname":"::biguint::Single","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Representation of a single limb.\n","sig":null,"attributes":[{"value":"/ Representation of a single limb.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":16743,"byte_end":16779,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":16845,"byte_end":16851,"line_start":30,"line_end":30,"column_start":10,"column_end":16},"name":"Double","qualname":"::biguint::Double","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Representation of two limbs.\n","sig":null,"attributes":[{"value":"/ Representation of two limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":16803,"byte_end":16835,"line_start":29,"line_end":29,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17293,"byte_end":17298,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"split","qualname":"::biguint::split","value":"pub fn split(Double) -> (Single, Single)","parent":null,"children":[],"decl_id":null,"docs":" Splits a [`Double`] limb number into a tuple of two [`Single`] limb numbers.\n","sig":null,"attributes":[{"value":"/ Splits a [`Double`] limb number into a tuple of two [`Single`] limb numbers.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17205,"byte_end":17285,"line_start":40,"line_end":40,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17513,"byte_end":17523,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"mul_single","qualname":"::biguint::mul_single","value":"pub fn mul_single(Single, Single) -> Double","parent":null,"children":[],"decl_id":null,"docs":" Assumed as a given primitive.","sig":null,"attributes":[{"value":"/ Assumed as a given primitive.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17402,"byte_end":17435,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17436,"byte_end":17439,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Multiplication of two singles, which at most yields 1 double.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17440,"byte_end":17505,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17791,"byte_end":17801,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"add_single","qualname":"::biguint::add_single","value":"pub fn add_single(Single, Single) -> (Single, Single)","parent":null,"children":[],"decl_id":null,"docs":" Assumed as a given primitive.","sig":null,"attributes":[{"value":"/ Assumed as a given primitive.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17622,"byte_end":17655,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17656,"byte_end":17659,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Addition of two singles, which at most takes a single limb of result and a carry,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17660,"byte_end":17745,"line_start":58,"line_end":58,"column_start":1,"column_end":86}},{"value":"/ returned as a tuple respectively.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":17746,"byte_end":17783,"line_start":59,"line_end":59,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18422,"byte_end":18429,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"BigUint","qualname":"::biguint::BigUint","value":"BigUint {  }","parent":null,"children":[{"krate":0,"index":711}],"decl_id":null,"docs":" Simple wrapper around an infinitely large integer, represented as limbs of [`Single`].\n","sig":null,"attributes":[{"value":"/ Simple wrapper around an infinitely large integer, represented as limbs of [`Single`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18294,"byte_end":18384,"line_start":80,"line_end":80,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18722,"byte_end":18735,"line_start":92,"line_end":92,"column_start":9,"column_end":22},"name":"with_capacity","qualname":"<BigUint>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance with `size` limbs. This prevents any number with zero limbs to be\n created.","sig":null,"attributes":[{"value":"/ Create a new instance with `size` limbs. This prevents any number with zero limbs to be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18543,"byte_end":18634,"line_start":88,"line_end":88,"column_start":2,"column_end":93}},{"value":"/ created.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18636,"byte_end":18648,"line_start":89,"line_end":89,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18650,"byte_end":18653,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ The behavior of the type is undefined with zero limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18655,"byte_end":18713,"line_start":91,"line_end":91,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18916,"byte_end":18926,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"name":"from_limbs","qualname":"<BigUint>::from_limbs","value":"pub fn from_limbs(&[Single]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raw constructor from custom limbs. If `limbs` is empty, `Zero::zero()` implementation is\n used.\n","sig":null,"attributes":[{"value":"/ Raw constructor from custom limbs. If `limbs` is empty, `Zero::zero()` implementation is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18804,"byte_end":18896,"line_start":96,"line_end":96,"column_start":2,"column_end":94}},{"value":"/ used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18898,"byte_end":18907,"line_start":97,"line_end":97,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19080,"byte_end":19083,"line_start":107,"line_end":107,"column_start":9,"column_end":12},"name":"len","qualname":"<BigUint>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of limbs.\n","sig":null,"attributes":[{"value":"/ Number of limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19051,"byte_end":19071,"line_start":106,"line_end":106,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19277,"byte_end":19280,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"get","qualname":"<BigUint>::get","value":"pub fn get(&Self, usize) -> Single","parent":null,"children":[],"decl_id":null,"docs":" A naive getter for limb at `index`. Note that the order is lsb -> msb.","sig":null,"attributes":[{"value":"/ A naive getter for limb at `index`. Note that the order is lsb -> msb.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19124,"byte_end":19198,"line_start":109,"line_end":109,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19200,"byte_end":19203,"line_start":110,"line_end":110,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19205,"byte_end":19220,"line_start":111,"line_end":111,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19222,"byte_end":19225,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ This panics if index is out of range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19227,"byte_end":19268,"line_start":113,"line_end":113,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19440,"byte_end":19451,"line_start":119,"line_end":119,"column_start":9,"column_end":20},"name":"checked_get","qualname":"<BigUint>::checked_get","value":"pub fn checked_get(&Self, usize) -> Option<Single>","parent":null,"children":[],"decl_id":null,"docs":" A naive getter for limb at `index`. Note that the order is lsb -> msb.\n","sig":null,"attributes":[{"value":"/ A naive getter for limb at `index`. Note that the order is lsb -> msb.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19357,"byte_end":19431,"line_start":118,"line_end":118,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19752,"byte_end":19755,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"name":"set","qualname":"<BigUint>::set","value":"pub fn set(&mut Self, usize, Single)","parent":null,"children":[],"decl_id":null,"docs":" A naive setter for limb at `index`. Note that the order is lsb -> msb.","sig":null,"attributes":[{"value":"/ A naive setter for limb at `index`. Note that the order is lsb -> msb.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19599,"byte_end":19673,"line_start":125,"line_end":125,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19675,"byte_end":19678,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19680,"byte_end":19695,"line_start":127,"line_end":127,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19697,"byte_end":19700,"line_start":128,"line_end":128,"column_start":2,"column_end":5}},{"value":"/ This panics if index is out of range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19702,"byte_end":19743,"line_start":129,"line_end":129,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20057,"byte_end":20060,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"name":"lsb","qualname":"<BigUint>::lsb","value":"pub fn lsb(&Self) -> Single","parent":null,"children":[],"decl_id":null,"docs":" returns the least significant limb of the number.","sig":null,"attributes":[{"value":"/ returns the least significant limb of the number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19874,"byte_end":19927,"line_start":135,"line_end":135,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19929,"byte_end":19932,"line_start":136,"line_end":136,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19934,"byte_end":19949,"line_start":137,"line_end":137,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19951,"byte_end":19954,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ While the constructor of the type prevents this, this can panic if `self` has no digits.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":19956,"byte_end":20048,"line_start":139,"line_end":139,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20297,"byte_end":20300,"line_start":149,"line_end":149,"column_start":9,"column_end":12},"name":"msb","qualname":"<BigUint>::msb","value":"pub fn msb(&Self) -> Single","parent":null,"children":[],"decl_id":null,"docs":" returns the most significant limb of the number.","sig":null,"attributes":[{"value":"/ returns the most significant limb of the number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20115,"byte_end":20167,"line_start":144,"line_end":144,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20169,"byte_end":20172,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20174,"byte_end":20189,"line_start":146,"line_end":146,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20191,"byte_end":20194,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ While the constructor of the type prevents this, this can panic if `self` has no digits.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20196,"byte_end":20288,"line_start":148,"line_end":148,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20434,"byte_end":20440,"line_start":154,"line_end":154,"column_start":9,"column_end":15},"name":"lstrip","qualname":"<BigUint>::lstrip","value":"pub fn lstrip(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Strips zeros from the left side (the most significant limbs) of `self`, if any.\n","sig":null,"attributes":[{"value":"/ Strips zeros from the left side (the most significant limbs) of `self`, if any.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20342,"byte_end":20425,"line_start":153,"line_end":153,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21014,"byte_end":21018,"line_start":168,"line_end":168,"column_start":9,"column_end":13},"name":"lpad","qualname":"<BigUint>::lpad","value":"pub fn lpad(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Zero-pad `self` from left to reach `size` limbs. Will not make any difference if `self`\n is already bigger than `size` limbs.\n","sig":null,"attributes":[{"value":"/ Zero-pad `self` from left to reach `size` limbs. Will not make any difference if `self`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20872,"byte_end":20963,"line_start":166,"line_end":166,"column_start":2,"column_end":93}},{"value":"/ is already bigger than `size` limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":20965,"byte_end":21005,"line_start":167,"line_end":167,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21696,"byte_end":21699,"line_start":185,"line_end":185,"column_start":9,"column_end":12},"name":"add","qualname":"<BigUint>::add","value":"pub fn add(Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds `self` with `other`. self and other do not have to have any particular size. Given\n that the `n = max{size(self), size(other)}`, it will produce a number with `n + 1`\n limbs.","sig":null,"attributes":[{"value":"/ Adds `self` with `other`. self and other do not have to have any particular size. Given","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21259,"byte_end":21350,"line_start":177,"line_end":177,"column_start":2,"column_end":93}},{"value":"/ that the `n = max{size(self), size(other)}`, it will produce a number with `n + 1`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21352,"byte_end":21438,"line_start":178,"line_end":178,"column_start":2,"column_end":88}},{"value":"/ limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21440,"byte_end":21450,"line_start":179,"line_end":179,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21452,"byte_end":21455,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ This function does not strip the output and returns the original allocated `n + 1`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21457,"byte_end":21543,"line_start":181,"line_end":181,"column_start":2,"column_end":88}},{"value":"/ limbs. The caller may strip the output if desired.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21545,"byte_end":21599,"line_start":182,"line_end":182,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21601,"byte_end":21604,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":21606,"byte_end":21687,"line_start":184,"line_end":184,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22513,"byte_end":22516,"line_start":209,"line_end":209,"column_start":9,"column_end":12},"name":"sub","qualname":"<BigUint>::sub","value":"pub fn sub(Self, &Self) -> Result<Self, Self>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts `other` from `self`. self and other do not have to have any particular size.\n Given that the `n = max{size(self), size(other)}`, it will produce a number of size `n`.","sig":null,"attributes":[{"value":"/ Subtracts `other` from `self`. self and other do not have to have any particular size.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22157,"byte_end":22247,"line_start":203,"line_end":203,"column_start":2,"column_end":92}},{"value":"/ Given that the `n = max{size(self), size(other)}`, it will produce a number of size `n`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22249,"byte_end":22341,"line_start":204,"line_end":204,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22343,"byte_end":22346,"line_start":205,"line_end":205,"column_start":2,"column_end":5}},{"value":"/ If `other` is bigger than `self`, `Err(B - borrow)` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22348,"byte_end":22416,"line_start":206,"line_end":206,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22418,"byte_end":22421,"line_start":207,"line_end":207,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":22423,"byte_end":22504,"line_start":208,"line_end":208,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23798,"byte_end":23801,"line_start":253,"line_end":253,"column_start":9,"column_end":12},"name":"mul","qualname":"<BigUint>::mul","value":"pub fn mul(Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies n-limb number `self` with m-limb number `other`.","sig":null,"attributes":[{"value":"/ Multiplies n-limb number `self` with m-limb number `other`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23426,"byte_end":23489,"line_start":245,"line_end":245,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23491,"byte_end":23494,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ The resulting number will always have `n + m` limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23496,"byte_end":23552,"line_start":247,"line_end":247,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23554,"byte_end":23557,"line_start":248,"line_end":248,"column_start":2,"column_end":5}},{"value":"/ This function does not strip the output and returns the original allocated `n + m`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23559,"byte_end":23645,"line_start":249,"line_end":249,"column_start":2,"column_end":88}},{"value":"/ limbs. The caller may strip the output if desired.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23647,"byte_end":23701,"line_start":250,"line_end":250,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23703,"byte_end":23706,"line_start":251,"line_end":251,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":23708,"byte_end":23789,"line_start":252,"line_end":252,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":24688,"byte_end":24696,"line_start":284,"line_end":284,"column_start":9,"column_end":17},"name":"div_unit","qualname":"<BigUint>::div_unit","value":"pub fn div_unit(Self, Single) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides `self` by a single limb `other`. This can be used in cases where the original\n division cannot work due to the divisor (`other`) being just one limb.","sig":null,"attributes":[{"value":"/ Divides `self` by a single limb `other`. This can be used in cases where the original","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":24469,"byte_end":24558,"line_start":280,"line_end":280,"column_start":2,"column_end":91}},{"value":"/ division cannot work due to the divisor (`other`) being just one limb.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":24560,"byte_end":24634,"line_start":281,"line_end":281,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":24636,"byte_end":24639,"line_start":282,"line_end":282,"column_start":2,"column_end":5}},{"value":"/ Invariant: `other` cannot be zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":24641,"byte_end":24679,"line_start":283,"line_end":283,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25824,"byte_end":25827,"line_start":312,"line_end":312,"column_start":9,"column_end":12},"name":"div","qualname":"<BigUint>::div","value":"pub fn div(Self, &Self, bool) -> Option<(Self, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Divides an `n + m` limb self by a `n` limb `other`. The result is a `m + 1` limb\n quotient and a `n` limb remainder, if enabled by passing `true` in `rem` argument, both\n in the form of an option's `Ok`.","sig":null,"attributes":[{"value":"/ Divides an `n + m` limb self by a `n` limb `other`. The result is a `m + 1` limb","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25116,"byte_end":25200,"line_start":299,"line_end":299,"column_start":2,"column_end":86}},{"value":"/ quotient and a `n` limb remainder, if enabled by passing `true` in `rem` argument, both","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25202,"byte_end":25293,"line_start":300,"line_end":300,"column_start":2,"column_end":93}},{"value":"/ in the form of an option's `Ok`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25295,"byte_end":25331,"line_start":301,"line_end":301,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25333,"byte_end":25336,"line_start":302,"line_end":302,"column_start":2,"column_end":5}},{"value":"/ - requires `other` to be stripped and have no leading zeros.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25338,"byte_end":25402,"line_start":303,"line_end":303,"column_start":2,"column_end":66}},{"value":"/ - requires `self` to be stripped and have no leading zeros.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25404,"byte_end":25467,"line_start":304,"line_end":304,"column_start":2,"column_end":65}},{"value":"/ - requires `other` to have at least two limbs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25469,"byte_end":25519,"line_start":305,"line_end":305,"column_start":2,"column_end":52}},{"value":"/ - requires `self` to have a greater length compared to `other`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25521,"byte_end":25588,"line_start":306,"line_end":306,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25590,"byte_end":25593,"line_start":307,"line_end":307,"column_start":2,"column_end":5}},{"value":"/ All arguments are examined without being stripped for the above conditions. If any of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25595,"byte_end":25684,"line_start":308,"line_end":308,"column_start":2,"column_end":91}},{"value":"/ the above fails, `None` is returned.`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25686,"byte_end":25727,"line_start":309,"line_end":309,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25729,"byte_end":25732,"line_start":310,"line_end":310,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":25734,"byte_end":25815,"line_start":311,"line_end":311,"column_start":2,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helpers_128bit","qualname":"::helpers_128bit","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" Some helper functions to work with 128bit numbers. Note that the functionality provided here is\n only sensible to use with 128bit numbers because for smaller sizes, you can always rely on\n assumptions of a bigger type (u128) being available, or simply create a per-thing and use the\n multiplication implementation provided there.\n","sig":null,"attributes":[{"value":"/ Some helper functions to work with 128bit numbers. Note that the functionality provided here is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":38480,"byte_end":38579,"line_start":18,"line_end":18,"column_start":1,"column_end":100}},{"value":"/ only sensible to use with 128bit numbers because for smaller sizes, you can always rely on","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":38580,"byte_end":38674,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ assumptions of a bigger type (u128) being available, or simply create a per-thing and use the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":38675,"byte_end":38772,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ multiplication implementation provided there.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":38773,"byte_end":38822,"line_start":21,"line_end":21,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":38988,"byte_end":38991,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"gcd","qualname":"::helpers_128bit::gcd","value":"pub fn gcd(u128, u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Helper gcd function used in Rational128 implementation.\n","sig":null,"attributes":[{"value":"/ Helper gcd function used in Rational128 implementation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":38921,"byte_end":38980,"line_start":27,"line_end":27,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39388,"byte_end":39393,"line_start":43,"line_end":43,"column_start":8,"column_end":13},"name":"split","qualname":"::helpers_128bit::split","value":"pub fn split(u128) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" split a u128 into two u64 limbs\n","sig":null,"attributes":[{"value":"/ split a u128 into two u64 limbs","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39345,"byte_end":39380,"line_start":42,"line_end":42,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39530,"byte_end":39541,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"to_big_uint","qualname":"::helpers_128bit::to_big_uint","value":"pub fn to_big_uint(u128) -> biguint::BigUint","parent":null,"children":[],"decl_id":null,"docs":" Convert a u128 to a u32 based biguint.\n","sig":null,"attributes":[{"value":"/ Convert a u128 to a u32 based biguint.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39480,"byte_end":39522,"line_start":49,"line_end":49,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":40059,"byte_end":40079,"line_start":65,"line_end":65,"column_start":8,"column_end":28},"name":"multiply_by_rational","qualname":"::helpers_128bit::multiply_by_rational","value":"pub fn multiply_by_rational(u128, u128, u128) -> Result<u128, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Safely and accurately compute `a * b / c`. The approach is:\n   - Simply try `a * b / c`.\n   - Else, convert them both into big numbers and re-try. `Err` is returned if the result\n     cannot be safely casted back to u128.","sig":null,"attributes":[{"value":"/ Safely and accurately compute `a * b / c`. The approach is:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39760,"byte_end":39823,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/   - Simply try `a * b / c`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39824,"byte_end":39855,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/   - Else, convert them both into big numbers and re-try. `Err` is returned if the result","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39856,"byte_end":39948,"line_start":61,"line_end":61,"column_start":1,"column_end":93}},{"value":"/     cannot be safely casted back to u128.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39949,"byte_end":39994,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39995,"byte_end":39998,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Invariant: c must be greater than or equal to 1.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/helpers_128bit.rs","byte_start":39999,"byte_end":40051,"line_start":64,"line_end":64,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":121},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":241},{"krate":0,"index":246},{"krate":0,"index":254},{"krate":0,"index":259}],"decl_id":null,"docs":" Primitive traits for the runtime arithmetic.\n","sig":null,"attributes":[{"value":"/ Primitive traits for the runtime arithmetic.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42352,"byte_end":42400,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":216},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42888,"byte_end":42902,"line_start":33,"line_end":33,"column_start":11,"column_end":25},"name":"BaseArithmetic","qualname":"::traits::BaseArithmetic","value":"BaseArithmetic: From<u8> + Zero + One + IntegerSquareRoot + Add<Self, Output = Self> +\nAddAssign<Self> + Sub<Self, Output = Self> + SubAssign<Self> + Mul<Self,\nOutput = Self> + MulAssign<Self> + Div<Self, Output = Self> +\nDivAssign<Self> + Rem<Self, Output = Self> + RemAssign<Self> + Shl<u32, Output\n= Self> + Shr<u32, Output = Self> + CheckedShl + CheckedShr + CheckedAdd +\nCheckedSub + CheckedMul + CheckedDiv + Saturating + PartialOrd<Self> + Ord +\nBounded + HasCompact + Sized + TryFrom<u8> + TryInto<u8> + TryFrom<u16> +\nTryInto<u16> + TryFrom<u32> + TryInto<u32> + TryFrom<u64> + TryInto<u64> +\nTryFrom<u128> + TryInto<u128> + TryFrom<usize> + TryInto<usize> +\nUniqueSaturatedFrom<u8> + UniqueSaturatedInto<u8> + UniqueSaturatedFrom<u16> +\nUniqueSaturatedInto<u16> + UniqueSaturatedFrom<u32> +\nUniqueSaturatedInto<u32> + UniqueSaturatedFrom<u64> +\nUniqueSaturatedInto<u64> + UniqueSaturatedFrom<u128> +\nUniqueSaturatedInto<u128>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for arithmetic type operations, regardless of any limitation on size.\n","sig":null,"attributes":[{"value":"/ A meta trait for arithmetic type operations, regardless of any limitation on size.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42791,"byte_end":42877,"line_start":32,"line_end":32,"column_start":1,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":219},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45118,"byte_end":45130,"line_start":78,"line_end":78,"column_start":11,"column_end":23},"name":"AtLeast32Bit","qualname":"::traits::AtLeast32Bit","value":"AtLeast32Bit: BaseArithmetic + From<u16> + From<u32>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for arithmetic.","sig":null,"attributes":[{"value":"/ A meta trait for arithmetic.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":44817,"byte_end":44849,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":44850,"byte_end":44853,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Arithmetic types do all the usual stuff you'd expect numbers to do. They are guaranteed to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":44854,"byte_end":44948,"line_start":75,"line_end":75,"column_start":1,"column_end":95}},{"value":"/ be able to represent at least `u32` values without loss, hence the trait implies `From<u32>`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":44949,"byte_end":45045,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/ and smaller integers. All other conversions are fallible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45046,"byte_end":45107,"line_start":77,"line_end":77,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45350,"byte_end":45370,"line_start":83,"line_end":83,"column_start":11,"column_end":31},"name":"AtLeast32BitUnsigned","qualname":"::traits::AtLeast32BitUnsigned","value":"AtLeast32BitUnsigned: AtLeast32Bit + Unsigned","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for arithmetic.  Same as [`AtLeast32Bit `], but also bounded to be unsigned.\n","sig":null,"attributes":[{"value":"/ A meta trait for arithmetic.  Same as [`AtLeast32Bit `], but also bounded to be unsigned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45246,"byte_end":45339,"line_start":82,"line_end":82,"column_start":1,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45612,"byte_end":45631,"line_start":89,"line_end":89,"column_start":11,"column_end":30},"name":"UniqueSaturatedFrom","qualname":"::traits::UniqueSaturatedFrom","value":"UniqueSaturatedFrom<T: Sized>: Sized","parent":null,"children":[{"krate":0,"index":227}],"decl_id":null,"docs":" Just like `From` except that if the source value is too big to fit into the destination type\n then it'll saturate the destination.\n","sig":null,"attributes":[{"value":"/ Just like `From` except that if the source value is too big to fit into the destination type","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45464,"byte_end":45560,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ then it'll saturate the destination.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45561,"byte_end":45601,"line_start":88,"line_end":88,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45727,"byte_end":45748,"line_start":91,"line_end":91,"column_start":5,"column_end":26},"name":"unique_saturated_from","qualname":"::traits::UniqueSaturatedFrom::unique_saturated_from","value":"pub fn unique_saturated_from(T) -> Self","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45652,"byte_end":45722,"line_start":90,"line_end":90,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":228},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45915,"byte_end":45934,"line_start":96,"line_end":96,"column_start":11,"column_end":30},"name":"UniqueSaturatedInto","qualname":"::traits::UniqueSaturatedInto","value":"UniqueSaturatedInto<T: Sized>: Sized","parent":null,"children":[{"krate":0,"index":230}],"decl_id":null,"docs":" Just like `Into` except that if the source value is too big to fit into the destination type\n then it'll saturate the destination.\n","sig":null,"attributes":[{"value":"/ Just like `Into` except that if the source value is too big to fit into the destination type","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45767,"byte_end":45863,"line_start":94,"line_end":94,"column_start":1,"column_end":97}},{"value":"/ then it'll saturate the destination.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45864,"byte_end":45904,"line_start":95,"line_end":95,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46014,"byte_end":46035,"line_start":98,"line_end":98,"column_start":5,"column_end":26},"name":"unique_saturated_into","qualname":"::traits::UniqueSaturatedInto::unique_saturated_into","value":"pub fn unique_saturated_into(Self) -> T","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Consume self to return an equivalent value of `T`.\n","sig":null,"attributes":[{"value":"/ Consume self to return an equivalent value of `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45955,"byte_end":46009,"line_start":97,"line_end":97,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":241},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46527,"byte_end":46537,"line_start":114,"line_end":114,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::traits::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" Saturating arithmetic operations, returning maximum or minimum values instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating arithmetic operations, returning maximum or minimum values instead of overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46419,"byte_end":46516,"line_start":113,"line_end":113,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46654,"byte_end":46668,"line_start":117,"line_end":117,"column_start":5,"column_end":19},"name":"saturating_add","qualname":"::traits::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Saturating addition. Compute `self + rhs`, saturating at the numeric bounds instead of\n overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition. Compute `self + rhs`, saturating at the numeric bounds instead of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46541,"byte_end":46631,"line_start":115,"line_end":115,"column_start":2,"column_end":92}},{"value":"/ overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46633,"byte_end":46649,"line_start":116,"line_end":116,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46813,"byte_end":46827,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"saturating_sub","qualname":"::traits::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Saturating subtraction. Compute `self - rhs`, saturating at the numeric bounds instead of\n overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction. Compute `self - rhs`, saturating at the numeric bounds instead of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46697,"byte_end":46790,"line_start":119,"line_end":119,"column_start":2,"column_end":95}},{"value":"/ overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46792,"byte_end":46808,"line_start":120,"line_end":120,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46969,"byte_end":46983,"line_start":125,"line_end":125,"column_start":5,"column_end":19},"name":"saturating_mul","qualname":"::traits::Saturating::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Saturating multiply. Compute `self * rhs`, saturating at the numeric bounds instead of\n overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating multiply. Compute `self * rhs`, saturating at the numeric bounds instead of","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46856,"byte_end":46946,"line_start":123,"line_end":123,"column_start":2,"column_end":92}},{"value":"/ overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46948,"byte_end":46964,"line_start":124,"line_end":124,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":47134,"byte_end":47148,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"saturating_pow","qualname":"::traits::Saturating::saturating_pow","value":"pub fn saturating_pow(Self, usize) -> Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Saturating exponentiation. Compute `self.pow(exp)`, saturating at the numeric bounds\n instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating exponentiation. Compute `self.pow(exp)`, saturating at the numeric bounds","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":47012,"byte_end":47100,"line_start":127,"line_end":127,"column_start":2,"column_end":90}},{"value":"/ instead of overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":47102,"byte_end":47129,"line_start":128,"line_end":128,"column_start":2,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":254},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48149,"byte_end":48168,"line_start":168,"line_end":168,"column_start":11,"column_end":30},"name":"SaturatedConversion","qualname":"::traits::SaturatedConversion","value":"SaturatedConversion","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" Convenience type to work around the highly unergonomic syntax needed\n to invoke the functions of overloaded generic traits, in this case\n `SaturatedFrom` and `SaturatedInto`.\n","sig":null,"attributes":[{"value":"/ Convenience type to work around the highly unergonomic syntax needed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":47954,"byte_end":48026,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/ to invoke the functions of overloaded generic traits, in this case","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48027,"byte_end":48097,"line_start":166,"line_end":166,"column_start":1,"column_end":71}},{"value":"/ `SaturatedFrom` and `SaturatedInto`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48098,"byte_end":48138,"line_start":167,"line_end":167,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48450,"byte_end":48464,"line_start":174,"line_end":174,"column_start":5,"column_end":19},"name":"saturated_from","qualname":"::traits::SaturatedConversion::saturated_from","value":"pub fn saturated_from<T>(T) -> Self where Self: UniqueSaturatedFrom<T>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Self`.","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48172,"byte_end":48242,"line_start":169,"line_end":169,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48244,"byte_end":48247,"line_start":170,"line_end":170,"column_start":2,"column_end":5}},{"value":"/ This just uses `UniqueSaturatedFrom` internally but with this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48249,"byte_end":48314,"line_start":171,"line_end":171,"column_start":2,"column_end":67}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48316,"byte_end":48387,"line_start":172,"line_end":172,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48389,"byte_end":48445,"line_start":173,"line_end":173,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48847,"byte_end":48861,"line_start":183,"line_end":183,"column_start":5,"column_end":19},"name":"saturated_into","qualname":"::traits::SaturatedConversion::saturated_into","value":"pub fn saturated_into<T>(Self) -> T where Self: UniqueSaturatedInto<T>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Consume self to return an equivalent value of `T`.","sig":null,"attributes":[{"value":"/ Consume self to return an equivalent value of `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48585,"byte_end":48639,"line_start":178,"line_end":178,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48641,"byte_end":48644,"line_start":179,"line_end":179,"column_start":2,"column_end":5}},{"value":"/ This just uses `UniqueSaturatedInto` internally but with this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48646,"byte_end":48711,"line_start":180,"line_end":180,"column_start":2,"column_end":67}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48713,"byte_end":48784,"line_start":181,"line_end":181,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":48786,"byte_end":48842,"line_start":182,"line_end":182,"column_start":2,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"per_things","qualname":"::per_things","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":355},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":801},{"krate":0,"index":807},{"krate":0,"index":728},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":746},{"krate":0,"index":770},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":796},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":930},{"krate":0,"index":936},{"krate":0,"index":857},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":875},{"krate":0,"index":899},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":925},{"krate":0,"index":855},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1059},{"krate":0,"index":1065},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":1004},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":984},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1188},{"krate":0,"index":1194},{"krate":0,"index":1115},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1133},{"krate":0,"index":1157},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1113},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1317},{"krate":0,"index":1323},{"krate":0,"index":1244},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1262},{"krate":0,"index":1286},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":322},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50104,"byte_end":50111,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"InnerOf","qualname":"::per_things::InnerOf","value":"<P as PerThing>::Inner","parent":null,"children":[],"decl_id":null,"docs":" Get the inner type of a `PerThing`.\n","sig":null,"attributes":[{"value":"/ Get the inner type of a `PerThing`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50055,"byte_end":50094,"line_start":30,"line_end":30,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":324},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50191,"byte_end":50198,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"name":"UpperOf","qualname":"::per_things::UpperOf","value":"<P as PerThing>::Upper","parent":null,"children":[],"decl_id":null,"docs":" Get the upper type of a `PerThing`.\n","sig":null,"attributes":[{"value":"/ Get the upper type of a `PerThing`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50142,"byte_end":50181,"line_start":33,"line_end":33,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50349,"byte_end":50357,"line_start":38,"line_end":38,"column_start":11,"column_end":19},"name":"PerThing","qualname":"::per_things::PerThing","value":"PerThing: Sized + Saturating + Copy + Default + Eq + PartialEq + Ord + PartialOrd +\nBounded + fmt::Debug + ops::Div<Output = Self> + ops::Mul<Output = Self> +\nPow<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353}],"decl_id":null,"docs":" Something that implements a fixed point ration with an arbitrary granularity `X`, as _parts per\n `X`_.\n","sig":null,"attributes":[{"value":"/ Something that implements a fixed point ration with an arbitrary granularity `X`, as _parts per","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50229,"byte_end":50328,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ `X`_.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50329,"byte_end":50338,"line_start":37,"line_end":37,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":327},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50588,"byte_end":50593,"line_start":43,"line_end":43,"column_start":7,"column_end":12},"name":"Inner","qualname":"::per_things::PerThing::Inner","value":"type Inner: BaseArithmetic + Unsigned + Copy + Into<u128> + fmt::Debug;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The data type used to build this per-thingy.\n","sig":null,"attributes":[{"value":"/ The data type used to build this per-thingy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50533,"byte_end":50581,"line_start":42,"line_end":42,"column_start":2,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50797,"byte_end":50802,"line_start":47,"line_end":47,"column_start":7,"column_end":12},"name":"Upper","qualname":"::per_things::PerThing::Upper","value":"type Upper: BaseArithmetic\n\t\t+ Copy\n\t\t+ From<Self::Inner>\n\t\t+ TryInto<Self::Inner>\n\t\t+ UniqueSaturatedInto<Self::Inner>\n\t\t+ Unsigned\n\t\t+ fmt::Debug;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" A data type larger than `Self::Inner`, used to avoid overflow in some computations.\n It must be able to compute `ACCURACY^2`.\n","sig":null,"attributes":[{"value":"/ A data type larger than `Self::Inner`, used to avoid overflow in some computations.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50657,"byte_end":50744,"line_start":45,"line_end":45,"column_start":2,"column_end":89}},{"value":"/ It must be able to compute `ACCURACY^2`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50746,"byte_end":50790,"line_start":46,"line_end":46,"column_start":2,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":329},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50981,"byte_end":50989,"line_start":56,"line_end":56,"column_start":8,"column_end":16},"name":"ACCURACY","qualname":"::per_things::PerThing::ACCURACY","value":"Self::Inner","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The accuracy of this type.\n","sig":null,"attributes":[{"value":"/ The accuracy of this type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50943,"byte_end":50973,"line_start":55,"line_end":55,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51051,"byte_end":51055,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"zero","qualname":"::per_things::PerThing::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Equivalent to `Self::from_parts(0)`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Self::from_parts(0)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51006,"byte_end":51046,"line_start":58,"line_end":58,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51152,"byte_end":51159,"line_start":62,"line_end":62,"column_start":5,"column_end":12},"name":"is_zero","qualname":"::per_things::PerThing::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Return `true` if this is nothing.\n","sig":null,"attributes":[{"value":"/ Return `true` if this is nothing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51110,"byte_end":51147,"line_start":61,"line_end":61,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51281,"byte_end":51284,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"one","qualname":"::per_things::PerThing::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Equivalent to `Self::from_parts(Self::ACCURACY)`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Self::from_parts(Self::ACCURACY)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51223,"byte_end":51276,"line_start":64,"line_end":64,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51372,"byte_end":51378,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"is_one","qualname":"::per_things::PerThing::is_one","value":"pub fn is_one(&Self) -> bool","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Return `true` if this is one.\n","sig":null,"attributes":[{"value":"/ Return `true` if this is one.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51334,"byte_end":51367,"line_start":67,"line_end":67,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51603,"byte_end":51615,"line_start":72,"line_end":72,"column_start":5,"column_end":17},"name":"from_percent","qualname":"::per_things::PerThing::from_percent","value":"pub fn from_percent(Self::Inner) -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Build this type from a percent. Equivalent to `Self::from_parts(x * Self::ACCURACY / 100)`\n but more accurate and can cope with potential type overflows.\n","sig":null,"attributes":[{"value":"/ Build this type from a percent. Equivalent to `Self::from_parts(x * Self::ACCURACY / 100)`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51437,"byte_end":51531,"line_start":70,"line_end":70,"column_start":2,"column_end":96}},{"value":"/ but more accurate and can cope with potential type overflows.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51533,"byte_end":51598,"line_start":71,"line_end":71,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51837,"byte_end":51843,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"square","qualname":"::per_things::PerThing::square","value":"pub fn square(Self) -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Return the product of multiplication of this value by itself.\n","sig":null,"attributes":[{"value":"/ Return the product of multiplication of this value by itself.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":51767,"byte_end":51832,"line_start":78,"line_end":78,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52096,"byte_end":52109,"line_start":86,"line_end":86,"column_start":5,"column_end":18},"name":"left_from_one","qualname":"::per_things::PerThing::left_from_one","value":"pub fn left_from_one(Self) -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Return the part left when `self` is saturating-subtracted from `Self::one()`.\n","sig":null,"attributes":[{"value":"/ Return the part left when `self` is saturating-subtracted from `Self::one()`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52010,"byte_end":52091,"line_start":85,"line_end":85,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52682,"byte_end":52691,"line_start":105,"line_end":105,"column_start":5,"column_end":14},"name":"mul_floor","qualname":"::per_things::PerThing::mul_floor","value":"pub fn mul_floor<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Unsigned,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Multiplication that always rounds down to a whole number. The standard `Mul` rounds to the\n nearest whole number.","sig":null,"attributes":[{"value":"/ Multiplication that always rounds down to a whole number. The standard `Mul` rounds to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52166,"byte_end":52260,"line_start":90,"line_end":90,"column_start":2,"column_end":96}},{"value":"/ nearest whole number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52262,"byte_end":52287,"line_start":91,"line_end":91,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52289,"byte_end":52292,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52294,"byte_end":52305,"line_start":93,"line_end":93,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52307,"byte_end":52352,"line_start":94,"line_end":94,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52354,"byte_end":52372,"line_start":95,"line_end":95,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52374,"byte_end":52397,"line_start":96,"line_end":96,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(34) * 10u64, 3);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52399,"byte_end":52452,"line_start":97,"line_end":97,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(Percent::from_percent(36) * 10u64, 4);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52454,"byte_end":52507,"line_start":98,"line_end":98,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52509,"byte_end":52512,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ // round down","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52514,"byte_end":52531,"line_start":100,"line_end":100,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(Percent::from_percent(34).mul_floor(10u64), 3);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52533,"byte_end":52595,"line_start":101,"line_end":101,"column_start":2,"column_end":64}},{"value":"/ assert_eq!(Percent::from_percent(36).mul_floor(10u64), 3);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52597,"byte_end":52659,"line_start":102,"line_end":102,"column_start":2,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52661,"byte_end":52668,"line_start":103,"line_end":103,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52670,"byte_end":52677,"line_start":104,"line_end":104,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53500,"byte_end":53508,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"mul_ceil","qualname":"::per_things::PerThing::mul_ceil","value":"pub fn mul_ceil<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Unsigned,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Multiplication that always rounds the result up to a whole number. The standard `Mul`\n rounds to the nearest whole number.","sig":null,"attributes":[{"value":"/ Multiplication that always rounds the result up to a whole number. The standard `Mul`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":52979,"byte_end":53068,"line_start":114,"line_end":114,"column_start":2,"column_end":91}},{"value":"/ rounds to the nearest whole number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53070,"byte_end":53109,"line_start":115,"line_end":115,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53111,"byte_end":53114,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53116,"byte_end":53127,"line_start":117,"line_end":117,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53129,"byte_end":53174,"line_start":118,"line_end":118,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53176,"byte_end":53194,"line_start":119,"line_end":119,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53196,"byte_end":53219,"line_start":120,"line_end":120,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(34) * 10u64, 3);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53221,"byte_end":53274,"line_start":121,"line_end":121,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(Percent::from_percent(36) * 10u64, 4);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53276,"byte_end":53329,"line_start":122,"line_end":122,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53331,"byte_end":53334,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ // round up","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53336,"byte_end":53351,"line_start":124,"line_end":124,"column_start":2,"column_end":17}},{"value":"/ assert_eq!(Percent::from_percent(34).mul_ceil(10u64), 4);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53353,"byte_end":53414,"line_start":125,"line_end":125,"column_start":2,"column_end":63}},{"value":"/ assert_eq!(Percent::from_percent(36).mul_ceil(10u64), 4);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53416,"byte_end":53477,"line_start":126,"line_end":126,"column_start":2,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53479,"byte_end":53486,"line_start":127,"line_end":127,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53488,"byte_end":53495,"line_start":128,"line_end":128,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54155,"byte_end":54180,"line_start":147,"line_end":147,"column_start":5,"column_end":30},"name":"saturating_reciprocal_mul","qualname":"::per_things::PerThing::saturating_reciprocal_mul","value":"pub fn saturating_reciprocal_mul<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Saturating +\nUnsigned, Self::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Saturating multiplication by the reciprocal of `self`.\tThe result is rounded to the\n nearest whole number and saturates at the numeric bounds instead of overflowing.","sig":null,"attributes":[{"value":"/ Saturating multiplication by the reciprocal of `self`.\tThe result is rounded to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53793,"byte_end":53880,"line_start":138,"line_end":138,"column_start":2,"column_end":89}},{"value":"/ nearest whole number and saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53882,"byte_end":53966,"line_start":139,"line_end":139,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53968,"byte_end":53971,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53973,"byte_end":53984,"line_start":141,"line_end":141,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":53986,"byte_end":54031,"line_start":142,"line_end":142,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54033,"byte_end":54051,"line_start":143,"line_end":143,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(Percent::from_percent(50).saturating_reciprocal_mul(10u64), 20);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54053,"byte_end":54132,"line_start":144,"line_end":144,"column_start":2,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54134,"byte_end":54141,"line_start":145,"line_end":145,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54143,"byte_end":54150,"line_start":146,"line_end":146,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54992,"byte_end":55023,"line_start":169,"line_end":169,"column_start":5,"column_end":36},"name":"saturating_reciprocal_mul_floor","qualname":"::per_things::PerThing::saturating_reciprocal_mul_floor","value":"pub fn saturating_reciprocal_mul_floor<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Saturating +\nUnsigned, Self::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Saturating multiplication by the reciprocal of `self`.\tThe result is rounded down to the\n nearest whole number and saturates at the numeric bounds instead of overflowing.","sig":null,"attributes":[{"value":"/ Saturating multiplication by the reciprocal of `self`.\tThe result is rounded down to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54494,"byte_end":54586,"line_start":157,"line_end":157,"column_start":2,"column_end":94}},{"value":"/ nearest whole number and saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54588,"byte_end":54672,"line_start":158,"line_end":158,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54674,"byte_end":54677,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54679,"byte_end":54690,"line_start":160,"line_end":160,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54692,"byte_end":54737,"line_start":161,"line_end":161,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54739,"byte_end":54757,"line_start":162,"line_end":162,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54759,"byte_end":54782,"line_start":163,"line_end":163,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(60).saturating_reciprocal_mul(10u64), 17);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54784,"byte_end":54863,"line_start":164,"line_end":164,"column_start":2,"column_end":81}},{"value":"/ // round down","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54865,"byte_end":54882,"line_start":165,"line_end":165,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(Percent::from_percent(60).saturating_reciprocal_mul_floor(10u64), 16);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54884,"byte_end":54969,"line_start":166,"line_end":166,"column_start":2,"column_end":87}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54971,"byte_end":54978,"line_start":167,"line_end":167,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":54980,"byte_end":54987,"line_start":168,"line_end":168,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55827,"byte_end":55857,"line_start":191,"line_end":191,"column_start":5,"column_end":35},"name":"saturating_reciprocal_mul_ceil","qualname":"::per_things::PerThing::saturating_reciprocal_mul_ceil","value":"pub fn saturating_reciprocal_mul_ceil<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Saturating +\nUnsigned, Self::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Saturating multiplication by the reciprocal of `self`.\tThe result is rounded up to the\n nearest whole number and saturates at the numeric bounds instead of overflowing.","sig":null,"attributes":[{"value":"/ Saturating multiplication by the reciprocal of `self`.\tThe result is rounded up to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55334,"byte_end":55424,"line_start":179,"line_end":179,"column_start":2,"column_end":92}},{"value":"/ nearest whole number and saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55426,"byte_end":55510,"line_start":180,"line_end":180,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55512,"byte_end":55515,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55517,"byte_end":55528,"line_start":182,"line_end":182,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55530,"byte_end":55575,"line_start":183,"line_end":183,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55577,"byte_end":55595,"line_start":184,"line_end":184,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55597,"byte_end":55620,"line_start":185,"line_end":185,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(61).saturating_reciprocal_mul(10u64), 16);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55622,"byte_end":55701,"line_start":186,"line_end":186,"column_start":2,"column_end":81}},{"value":"/ // round up","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55703,"byte_end":55718,"line_start":187,"line_end":187,"column_start":2,"column_end":17}},{"value":"/ assert_eq!(Percent::from_percent(61).saturating_reciprocal_mul_ceil(10u64), 17);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55720,"byte_end":55804,"line_start":188,"line_end":188,"column_start":2,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55806,"byte_end":55813,"line_start":189,"line_end":189,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":55815,"byte_end":55822,"line_start":190,"line_end":190,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56229,"byte_end":56240,"line_start":202,"line_end":202,"column_start":5,"column_end":16},"name":"deconstruct","qualname":"::per_things::PerThing::deconstruct","value":"pub fn deconstruct(Self) -> Self::Inner","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Consume self and return the number of parts per thing.\n","sig":null,"attributes":[{"value":"/ Consume self and return the number of parts per thing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56166,"byte_end":56224,"line_start":201,"line_end":201,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56323,"byte_end":56333,"line_start":205,"line_end":205,"column_start":5,"column_end":15},"name":"from_parts","qualname":"::per_things::PerThing::from_parts","value":"pub fn from_parts(Self::Inner) -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Build this type from a number of parts per thing.\n","sig":null,"attributes":[{"value":"/ Build this type from a number of parts per thing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56265,"byte_end":56318,"line_start":204,"line_end":204,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56431,"byte_end":56441,"line_start":209,"line_end":209,"column_start":5,"column_end":15},"name":"from_float","qualname":"::per_things::PerThing::from_float","value":"pub fn from_float(f64) -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Converts a fraction into `Self`.\n","sig":null,"attributes":[{"value":"/ Converts a fraction into `Self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56365,"byte_end":56401,"line_start":207,"line_end":207,"column_start":2,"column_end":38}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56403,"byte_end":56426,"line_start":208,"line_end":208,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56564,"byte_end":56577,"line_start":214,"line_end":214,"column_start":5,"column_end":18},"name":"from_fraction","qualname":"::per_things::PerThing::from_fraction","value":"pub fn from_fraction(f64) -> Self","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Same as `Self::from_float`.\n","sig":null,"attributes":[{"value":"/ Same as `Self::from_float`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56461,"byte_end":56492,"line_start":211,"line_end":211,"column_start":2,"column_end":33}},{"value":"deprecated = \"Use from_float instead\"","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56494,"byte_end":56534,"line_start":212,"line_end":212,"column_start":2,"column_end":42}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56536,"byte_end":56559,"line_start":213,"line_end":213,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57274,"byte_end":57287,"line_start":234,"line_end":234,"column_start":5,"column_end":18},"name":"from_rational","qualname":"::per_things::PerThing::from_rational","value":"pub fn from_rational<N>(N, N) -> Self where N: Clone + Ord +\nTryInto<Self::Inner> + TryInto<Self::Upper> + ops::Div<N, Output = N> +\nops::Rem<N, Output = N> + ops::Add<N, Output = N> + Unsigned,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Approximate the fraction `p/q` into a per-thing fraction. This will never overflow.","sig":null,"attributes":[{"value":"/ Approximate the fraction `p/q` into a per-thing fraction. This will never overflow.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56620,"byte_end":56707,"line_start":216,"line_end":216,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56709,"byte_end":56712,"line_start":217,"line_end":217,"column_start":2,"column_end":5}},{"value":"/ The computation of this approximation is performed in the generic type `N`. Given","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56714,"byte_end":56799,"line_start":218,"line_end":218,"column_start":2,"column_end":87}},{"value":"/ `M` as the data type that can hold the maximum value of this per-thing (e.g. u32 for","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56801,"byte_end":56889,"line_start":219,"line_end":219,"column_start":2,"column_end":90}},{"value":"/ perbill), this can only work if `N == M` or `N: From<M> + TryInto<M>`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56891,"byte_end":56965,"line_start":220,"line_end":220,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56967,"byte_end":56970,"line_start":221,"line_end":221,"column_start":2,"column_end":5}},{"value":"/ Note that this always rounds _down_, i.e.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":56972,"byte_end":57017,"line_start":222,"line_end":222,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57019,"byte_end":57022,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57024,"byte_end":57035,"line_start":224,"line_end":224,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57037,"byte_end":57082,"line_start":225,"line_end":225,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57084,"byte_end":57102,"line_start":226,"line_end":226,"column_start":2,"column_end":20}},{"value":"/ // 989/100 is technically closer to 99%.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57104,"byte_end":57148,"line_start":227,"line_end":227,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57150,"byte_end":57165,"line_start":228,"line_end":228,"column_start":2,"column_end":17}},{"value":"/ \t\tPercent::from_rational(989u64, 1000),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57167,"byte_end":57210,"line_start":229,"line_end":229,"column_start":2,"column_end":45}},{"value":"/ \t\tPercent::from_parts(98),","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57212,"byte_end":57242,"line_start":230,"line_end":230,"column_start":2,"column_end":32}},{"value":"/ \t);","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57244,"byte_end":57251,"line_start":231,"line_end":231,"column_start":2,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57253,"byte_end":57260,"line_start":232,"line_end":232,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57262,"byte_end":57269,"line_start":233,"line_end":233,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57578,"byte_end":57605,"line_start":242,"line_end":242,"column_start":5,"column_end":32},"name":"from_rational_approximation","qualname":"::per_things::PerThing::from_rational_approximation","value":"pub fn from_rational_approximation<N>(N, N) -> Self where N: Clone + Ord +\nTryInto<Self::Inner> + TryInto<Self::Upper> + ops::Div<N, Output = N> +\nops::Rem<N, Output = N> + ops::Add<N, Output = N> + Unsigned + Zero + One,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Same as `Self::from_rational`.\n","sig":null,"attributes":[{"value":"/ Same as `Self::from_rational`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57494,"byte_end":57528,"line_start":240,"line_end":240,"column_start":2,"column_end":36}},{"value":"deprecated = \"Use from_rational instead\"","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":57530,"byte_end":57573,"line_start":241,"line_end":241,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":89304,"byte_end":89311,"line_start":1333,"line_end":1333,"column_start":2,"column_end":9},"name":"Percent","qualname":"::per_things::Percent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61176,"byte_end":61241,"line_start":351,"line_end":351,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61244,"byte_end":61247,"line_start":352,"line_end":352,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":89424,"byte_end":89430,"line_start":1342,"line_end":1342,"column_start":2,"column_end":8},"name":"PerU16","qualname":"::per_things::PerU16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61176,"byte_end":61241,"line_start":351,"line_end":351,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61244,"byte_end":61247,"line_start":352,"line_end":352,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":89574,"byte_end":89581,"line_start":1352,"line_end":1352,"column_start":2,"column_end":9},"name":"Permill","qualname":"::per_things::Permill","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61176,"byte_end":61241,"line_start":351,"line_end":351,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61244,"byte_end":61247,"line_start":352,"line_end":352,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":89732,"byte_end":89739,"line_start":1362,"line_end":1362,"column_start":2,"column_end":9},"name":"Perbill","qualname":"::per_things::Perbill","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61176,"byte_end":61241,"line_start":351,"line_end":351,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61244,"byte_end":61247,"line_start":352,"line_end":352,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":89894,"byte_end":89905,"line_start":1372,"line_end":1372,"column_start":2,"column_end":13},"name":"Perquintill","qualname":"::per_things::Perquintill","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61176,"byte_end":61241,"line_start":351,"line_end":351,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":61244,"byte_end":61247,"line_start":352,"line_end":352,"column_start":3,"column_end":6}}]},{"kind":"Mod","id":{"krate":0,"index":373},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fixed_point","qualname":"::fixed_point","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":1449},{"krate":0,"index":1452},{"krate":0,"index":1462},{"krate":0,"index":1467},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1383},{"krate":0,"index":1387},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1406},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1582},{"krate":0,"index":1587},{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1497},{"krate":0,"index":1503},{"krate":0,"index":1507},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1702},{"krate":0,"index":1707},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1617},{"krate":0,"index":1623},{"krate":0,"index":1627},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1679},{"krate":0,"index":1682}],"decl_id":null,"docs":" Decimal Fixed Point implementations for Substrate runtime.\n","sig":null,"attributes":[{"value":"/ Decimal Fixed Point implementations for Substrate runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":90727,"byte_end":90789,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":469},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91339,"byte_end":91356,"line_start":34,"line_end":34,"column_start":11,"column_end":28},"name":"FixedPointOperand","qualname":"::fixed_point::FixedPointOperand","value":"FixedPointOperand: Copy + Clone + Bounded + Zero + Saturating + PartialOrd +\nUniqueSaturatedInto<u128> + TryFrom<u128> + CheckedNeg","parent":null,"children":[],"decl_id":null,"docs":" Integer types that can be used to interact with `FixedPointNumber` implementations.\n","sig":null,"attributes":[{"value":"/ Integer types that can be used to interact with `FixedPointNumber` implementations.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91241,"byte_end":91328,"line_start":33,"line_end":33,"column_start":1,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":480},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92177,"byte_end":92193,"line_start":55,"line_end":55,"column_start":11,"column_end":27},"name":"FixedPointNumber","qualname":"::fixed_point::FixedPointNumber","value":"FixedPointNumber: Sized + Copy + Default + Debug + Saturating + Bounded + Eq + PartialEq + Ord +\nPartialOrd + CheckedSub + CheckedAdd + CheckedMul + CheckedDiv + Add + Sub +\nDiv + Mul + Zero + One","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"decl_id":null,"docs":" Something that implements a decimal fixed point number.","sig":null,"attributes":[{"value":"/ Something that implements a decimal fixed point number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91817,"byte_end":91876,"line_start":48,"line_end":48,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91877,"byte_end":91880,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The precision is given by `Self::DIV`, i.e. `1 / DIV` can be represented.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91881,"byte_end":91958,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91959,"byte_end":91962,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Each type can store numbers from `Self::Inner::min_value() / Self::DIV`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91963,"byte_end":92038,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ to `Self::Inner::max_value() / Self::DIV`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92039,"byte_end":92085,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ This is also referred to as the _accuracy_ of the type in the documentation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92086,"byte_end":92166,"line_start":54,"line_end":54,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":481},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92451,"byte_end":92456,"line_start":63,"line_end":63,"column_start":7,"column_end":12},"name":"Inner","qualname":"::fixed_point::FixedPointNumber::Inner","value":"type Inner: Debug + One + CheckedMul + CheckedDiv + FixedPointOperand;","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" The underlying data type used for this fixed point number.\n","sig":null,"attributes":[{"value":"/ The underlying data type used for this fixed point number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92382,"byte_end":92444,"line_start":62,"line_end":62,"column_start":2,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":482},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92606,"byte_end":92609,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"DIV","qualname":"::fixed_point::FixedPointNumber::DIV","value":"Self::Inner","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Precision of this fixed point implementation. It should be a power of `10`.\n","sig":null,"attributes":[{"value":"/ Precision of this fixed point implementation. It should be a power of `10`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92519,"byte_end":92598,"line_start":65,"line_end":65,"column_start":2,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":483},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92700,"byte_end":92706,"line_start":69,"line_end":69,"column_start":8,"column_end":14},"name":"SIGNED","qualname":"::fixed_point::FixedPointNumber::SIGNED","value":"bool","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Indicates if this fixed point implementation is signed or not.\n","sig":null,"attributes":[{"value":"/ Indicates if this fixed point implementation is signed or not.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92626,"byte_end":92692,"line_start":68,"line_end":68,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92770,"byte_end":92778,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"accuracy","qualname":"::fixed_point::FixedPointNumber::accuracy","value":"pub fn accuracy() -> Self::Inner","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Precision of this fixed point implementation.\n","sig":null,"attributes":[{"value":"/ Precision of this fixed point implementation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92716,"byte_end":92765,"line_start":71,"line_end":71,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92864,"byte_end":92874,"line_start":77,"line_end":77,"column_start":5,"column_end":15},"name":"from_inner","qualname":"::fixed_point::FixedPointNumber::from_inner","value":"pub fn from_inner(Self::Inner) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Builds this type from an integer number.\n","sig":null,"attributes":[{"value":"/ Builds this type from an integer number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92815,"byte_end":92859,"line_start":76,"line_end":76,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92961,"byte_end":92971,"line_start":80,"line_end":80,"column_start":5,"column_end":15},"name":"into_inner","qualname":"::fixed_point::FixedPointNumber::into_inner","value":"pub fn into_inner(Self) -> Self::Inner","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner raw value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner raw value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92904,"byte_end":92956,"line_start":79,"line_end":79,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93119,"byte_end":93142,"line_start":85,"line_end":85,"column_start":5,"column_end":28},"name":"saturating_from_integer","qualname":"::fixed_point::FixedPointNumber::saturating_from_integer","value":"pub fn saturating_from_integer<N: FixedPointOperand>(N) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Creates self from an integer number `int`.","sig":null,"attributes":[{"value":"/ Creates self from an integer number `int`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92996,"byte_end":93042,"line_start":82,"line_end":82,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93044,"byte_end":93047,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ Returns `Self::max` or `Self::min` if `int` exceeds accuracy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93049,"byte_end":93114,"line_start":84,"line_end":84,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93458,"byte_end":93478,"line_start":94,"line_end":94,"column_start":5,"column_end":25},"name":"checked_from_integer","qualname":"::fixed_point::FixedPointNumber::checked_from_integer","value":"pub fn checked_from_integer(Self::Inner) -> Option<Self>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Creates `self` from an integer number `int`.","sig":null,"attributes":[{"value":"/ Creates `self` from an integer number `int`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93353,"byte_end":93401,"line_start":91,"line_end":91,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93403,"byte_end":93406,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if `int` exceeds accuracy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93408,"byte_end":93453,"line_start":93,"line_end":93,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93730,"byte_end":93754,"line_start":101,"line_end":101,"column_start":5,"column_end":29},"name":"saturating_from_rational","qualname":"::fixed_point::FixedPointNumber::saturating_from_rational","value":"pub fn saturating_from_rational<N: FixedPointOperand,\n                                D: FixedPointOperand>(N, D) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Creates `self` from a rational number. Equal to `n / d`.","sig":null,"attributes":[{"value":"/ Creates `self` from a rational number. Equal to `n / d`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93572,"byte_end":93632,"line_start":98,"line_end":98,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93634,"byte_end":93637,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ Panics if `d = 0`. Returns `Self::max` or `Self::min` if `n / d` exceeds accuracy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93639,"byte_end":93725,"line_start":100,"line_end":100,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94092,"byte_end":94113,"line_start":111,"line_end":111,"column_start":5,"column_end":26},"name":"checked_from_rational","qualname":"::fixed_point::FixedPointNumber::checked_from_rational","value":"pub fn checked_from_rational<N: FixedPointOperand, D: FixedPointOperand>(N, D)\n-> Option<Self>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Creates `self` from a rational number. Equal to `n / d`.","sig":null,"attributes":[{"value":"/ Creates `self` from a rational number. Equal to `n / d`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":93961,"byte_end":94021,"line_start":108,"line_end":108,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94023,"byte_end":94026,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if `d == 0` or `n / d` exceeds accuracy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94028,"byte_end":94087,"line_start":110,"line_end":110,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94630,"byte_end":94645,"line_start":128,"line_end":128,"column_start":5,"column_end":20},"name":"checked_mul_int","qualname":"::fixed_point::FixedPointNumber::checked_mul_int","value":"pub fn checked_mul_int<N: FixedPointOperand>(Self, N) -> Option<N>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Checked multiplication for integer type `N`. Equal to `self * n`.","sig":null,"attributes":[{"value":"/ Checked multiplication for integer type `N`. Equal to `self * n`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94496,"byte_end":94565,"line_start":125,"line_end":125,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94567,"byte_end":94570,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if the result does not fit in `N`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94572,"byte_end":94625,"line_start":127,"line_end":127,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95114,"byte_end":95132,"line_start":140,"line_end":140,"column_start":5,"column_end":23},"name":"saturating_mul_int","qualname":"::fixed_point::FixedPointNumber::saturating_mul_int","value":"pub fn saturating_mul_int<N: FixedPointOperand>(Self, N) -> N","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Saturating multiplication for integer type `N`. Equal to `self * n`.","sig":null,"attributes":[{"value":"/ Saturating multiplication for integer type `N`. Equal to `self * n`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":94963,"byte_end":95035,"line_start":137,"line_end":137,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95037,"byte_end":95040,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ Returns `N::min` or `N::max` if the result does not fit in `N`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95042,"byte_end":95109,"line_start":139,"line_end":139,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95395,"byte_end":95410,"line_start":147,"line_end":147,"column_start":5,"column_end":20},"name":"checked_div_int","qualname":"::fixed_point::FixedPointNumber::checked_div_int","value":"pub fn checked_div_int<N: FixedPointOperand>(Self, N) -> Option<N>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Checked division for integer type `N`. Equal to `self / d`.","sig":null,"attributes":[{"value":"/ Checked division for integer type `N`. Equal to `self / d`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95255,"byte_end":95318,"line_start":144,"line_end":144,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95320,"byte_end":95323,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if the result does not fit in `N` or `d == 0`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95325,"byte_end":95390,"line_start":146,"line_end":146,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95910,"byte_end":95928,"line_start":160,"line_end":160,"column_start":5,"column_end":23},"name":"saturating_div_int","qualname":"::fixed_point::FixedPointNumber::saturating_div_int","value":"pub fn saturating_div_int<N: FixedPointOperand>(Self, N) -> N","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Saturating division for integer type `N`. Equal to `self / d`.","sig":null,"attributes":[{"value":"/ Saturating division for integer type `N`. Equal to `self / d`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95745,"byte_end":95811,"line_start":157,"line_end":157,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95813,"byte_end":95816,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ Panics if `d == 0`. Returns `N::min` or `N::max` if the result does not fit in `N`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":95818,"byte_end":95905,"line_start":159,"line_end":159,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96324,"byte_end":96346,"line_start":171,"line_end":171,"column_start":5,"column_end":27},"name":"saturating_mul_acc_int","qualname":"::fixed_point::FixedPointNumber::saturating_mul_acc_int","value":"pub fn saturating_mul_acc_int<N: FixedPointOperand>(Self, N) -> N","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Saturating multiplication for integer type `N`, adding the result back.\n Equal to `self * n + n`.","sig":null,"attributes":[{"value":"/ Saturating multiplication for integer type `N`, adding the result back.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96116,"byte_end":96191,"line_start":167,"line_end":167,"column_start":2,"column_end":77}},{"value":"/ Equal to `self * n + n`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96193,"byte_end":96221,"line_start":168,"line_end":168,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96223,"byte_end":96226,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ Returns `N::min` or `N::max` if the multiplication or final result does not fit in `N`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96228,"byte_end":96319,"line_start":170,"line_end":170,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96665,"byte_end":96679,"line_start":182,"line_end":182,"column_start":5,"column_end":19},"name":"saturating_abs","qualname":"::fixed_point::FixedPointNumber::saturating_abs","value":"pub fn saturating_abs(Self) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Saturating absolute value.","sig":null,"attributes":[{"value":"/ Saturating absolute value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96576,"byte_end":96606,"line_start":179,"line_end":179,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96608,"byte_end":96611,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ Returns `Self::max` if `self == Self::min`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96613,"byte_end":96660,"line_start":181,"line_end":181,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96974,"byte_end":96984,"line_start":194,"line_end":194,"column_start":5,"column_end":15},"name":"reciprocal","qualname":"::fixed_point::FixedPointNumber::reciprocal","value":"pub fn reciprocal(Self) -> Option<Self>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Takes the reciprocal (inverse). Equal to `1 / self`.","sig":null,"attributes":[{"value":"/ Takes the reciprocal (inverse). Equal to `1 / self`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96873,"byte_end":96929,"line_start":191,"line_end":191,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96931,"byte_end":96934,"line_start":192,"line_end":192,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if `self = 0`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":96936,"byte_end":96969,"line_start":193,"line_end":193,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97084,"byte_end":97090,"line_start":199,"line_end":199,"column_start":5,"column_end":11},"name":"is_one","qualname":"::fixed_point::FixedPointNumber::is_one","value":"pub fn is_one(&Self) -> bool","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Checks if the number is one.\n","sig":null,"attributes":[{"value":"/ Checks if the number is one.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97047,"byte_end":97079,"line_start":198,"line_end":198,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97247,"byte_end":97258,"line_start":204,"line_end":204,"column_start":5,"column_end":16},"name":"is_positive","qualname":"::fixed_point::FixedPointNumber::is_positive","value":"pub fn is_positive(Self) -> bool","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive and `false` if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive and `false` if the number is zero or negative.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97155,"byte_end":97242,"line_start":203,"line_end":203,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97414,"byte_end":97425,"line_start":209,"line_end":209,"column_start":5,"column_end":16},"name":"is_negative","qualname":"::fixed_point::FixedPointNumber::is_negative","value":"pub fn is_negative(Self) -> bool","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative and `false` if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative and `false` if the number is zero or positive.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97322,"byte_end":97409,"line_start":208,"line_end":208,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97523,"byte_end":97528,"line_start":214,"line_end":214,"column_start":5,"column_end":10},"name":"trunc","qualname":"::fixed_point::FixedPointNumber::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns the integer part.\n","sig":null,"attributes":[{"value":"/ Returns the integer part.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97489,"byte_end":97518,"line_start":213,"line_end":213,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97954,"byte_end":97958,"line_start":226,"line_end":226,"column_start":5,"column_end":9},"name":"frac","qualname":"::fixed_point::FixedPointNumber::frac","value":"pub fn frac(Self) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns the fractional part.","sig":null,"attributes":[{"value":"/ Returns the fractional part.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97780,"byte_end":97812,"line_start":222,"line_end":222,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97814,"byte_end":97817,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ Note: the returned fraction will be non-negative for negative numbers,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97819,"byte_end":97893,"line_start":224,"line_end":224,"column_start":2,"column_end":76}},{"value":"/ except in the case where the integer part is zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":97895,"byte_end":97949,"line_start":225,"line_end":225,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98297,"byte_end":98301,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"ceil","qualname":"::fixed_point::FixedPointNumber::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98150,"byte_end":98217,"line_start":236,"line_end":236,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98219,"byte_end":98222,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ Saturates to `Self::max` (truncated) if the result does not fit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98224,"byte_end":98292,"line_start":238,"line_end":238,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98617,"byte_end":98622,"line_start":252,"line_end":252,"column_start":5,"column_end":10},"name":"floor","qualname":"::fixed_point::FixedPointNumber::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98474,"byte_end":98537,"line_start":249,"line_end":249,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98539,"byte_end":98542,"line_start":250,"line_end":250,"column_start":2,"column_end":5}},{"value":"/ Saturates to `Self::min` (truncated) if the result does not fit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98544,"byte_end":98612,"line_start":251,"line_end":251,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98931,"byte_end":98936,"line_start":263,"line_end":263,"column_start":5,"column_end":10},"name":"round","qualname":"::fixed_point::FixedPointNumber::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Returns the number rounded to the nearest integer. Rounds half-way cases away from 0.0.","sig":null,"attributes":[{"value":"/ Returns the number rounded to the nearest integer. Rounds half-way cases away from 0.0.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98745,"byte_end":98836,"line_start":260,"line_end":260,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98838,"byte_end":98841,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ Saturates to `Self::min` or `Self::max` (truncated) if the result does not fit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":98843,"byte_end":98926,"line_start":262,"line_end":262,"column_start":2,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":1449},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":140979,"byte_end":140987,"line_start":1594,"line_end":1594,"column_start":2,"column_end":10},"name":"FixedI64","qualname":"::fixed_point::FixedI64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point number representation in the range.","sig":null,"attributes":[{"value":"/ A fixed point number representation in the range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":100583,"byte_end":100636,"line_start":324,"line_end":324,"column_start":3,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":100639,"byte_end":100642,"line_start":325,"line_end":325,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1569},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":141146,"byte_end":141155,"line_start":1603,"line_end":1603,"column_start":2,"column_end":11},"name":"FixedI128","qualname":"::fixed_point::FixedI128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point number representation in the range.","sig":null,"attributes":[{"value":"/ A fixed point number representation in the range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":100583,"byte_end":100636,"line_start":324,"line_end":324,"column_start":3,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":100639,"byte_end":100642,"line_start":325,"line_end":325,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":141373,"byte_end":141382,"line_start":1613,"line_end":1613,"column_start":2,"column_end":11},"name":"FixedU128","qualname":"::fixed_point::FixedU128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point number representation in the range.","sig":null,"attributes":[{"value":"/ A fixed point number representation in the range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":100583,"byte_end":100636,"line_start":324,"line_end":324,"column_start":3,"column_end":56}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":100639,"byte_end":100642,"line_start":325,"line_end":325,"column_start":3,"column_end":6}}]},{"kind":"Mod","id":{"krate":0,"index":539},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rational","qualname":"::rational","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":1731},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":561},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":1742},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142637,"byte_end":142653,"line_start":28,"line_end":28,"column_start":12,"column_end":28},"name":"RationalInfinite","qualname":"::rational::RationalInfinite","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for any rational number with infinitely large numerator and denominator.","sig":null,"attributes":[{"value":"/ A wrapper for any rational number with infinitely large numerator and denominator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142385,"byte_end":142471,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142472,"byte_end":142475,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This type exists to facilitate `cmp` operation","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142476,"byte_end":142526,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ on values like `a/b < c/d` where `a, b, c, d` are all `BigUint`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142527,"byte_end":142595,"line_start":26,"line_end":26,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142743,"byte_end":142744,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"n","qualname":"<RationalInfinite>::n","value":"pub fn n(&Self) -> &BigUint","parent":null,"children":[],"decl_id":null,"docs":" Return the numerator reference.\n","sig":null,"attributes":[{"value":"/ Return the numerator reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142699,"byte_end":142734,"line_start":31,"line_end":31,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142827,"byte_end":142828,"line_start":37,"line_end":37,"column_start":9,"column_end":10},"name":"d","qualname":"<RationalInfinite>::d","value":"pub fn d(&Self) -> &BigUint","parent":null,"children":[],"decl_id":null,"docs":" Return the denominator reference.\n","sig":null,"attributes":[{"value":"/ Return the denominator reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142781,"byte_end":142818,"line_start":36,"line_end":36,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142901,"byte_end":142905,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"from","qualname":"<RationalInfinite>::from","value":"pub fn from(BigUint, BigUint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build from a raw `n/d`.\n","sig":null,"attributes":[{"value":"/ Build from a raw `n/d`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142865,"byte_end":142892,"line_start":41,"line_end":41,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142996,"byte_end":143000,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"zero","qualname":"<RationalInfinite>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero.\n","sig":null,"attributes":[{"value":"/ Zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142978,"byte_end":142987,"line_start":46,"line_end":46,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143075,"byte_end":143078,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"one","qualname":"<RationalInfinite>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" One.\n","sig":null,"attributes":[{"value":"/ One.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143058,"byte_end":143066,"line_start":51,"line_end":51,"column_start":2,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144032,"byte_end":144043,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"Rational128","qualname":"::rational::Rational128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for any rational number with a 128 bit numerator and denominator.\n","sig":null,"attributes":[{"value":"/ A wrapper for any rational number with a 128 bit numerator and denominator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143905,"byte_end":143984,"line_start":91,"line_end":91,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144493,"byte_end":144497,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"zero","qualname":"<Rational128>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero.\n","sig":null,"attributes":[{"value":"/ Zero.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144475,"byte_end":144484,"line_start":110,"line_end":110,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144544,"byte_end":144547,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"name":"one","qualname":"<Rational128>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" One\n","sig":null,"attributes":[{"value":"/ One","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144528,"byte_end":144535,"line_start":115,"line_end":115,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144611,"byte_end":144618,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"is_zero","qualname":"<Rational128>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If it is zero or not\n","sig":null,"attributes":[{"value":"/ If it is zero or not","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144578,"byte_end":144602,"line_start":120,"line_end":120,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144696,"byte_end":144700,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"from","qualname":"<Rational128>::from","value":"pub fn from(u128, u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build from a raw `n/d`.\n","sig":null,"attributes":[{"value":"/ Build from a raw `n/d`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144660,"byte_end":144687,"line_start":125,"line_end":125,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144838,"byte_end":144852,"line_start":131,"line_end":131,"column_start":9,"column_end":23},"name":"from_unchecked","qualname":"<Rational128>::from_unchecked","value":"pub fn from_unchecked(u128, u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build from a raw `n/d`. This could lead to / 0 if not properly handled.\n","sig":null,"attributes":[{"value":"/ Build from a raw `n/d`. This could lead to / 0 if not properly handled.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144754,"byte_end":144829,"line_start":130,"line_end":130,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144933,"byte_end":144934,"line_start":136,"line_end":136,"column_start":9,"column_end":10},"name":"n","qualname":"<Rational128>::n","value":"pub fn n(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return the numerator.\n","sig":null,"attributes":[{"value":"/ Return the numerator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144899,"byte_end":144924,"line_start":135,"line_end":135,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145002,"byte_end":145003,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"d","qualname":"<Rational128>::d","value":"pub fn d(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return the denominator.\n","sig":null,"attributes":[{"value":"/ Return the denominator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144966,"byte_end":144993,"line_start":140,"line_end":140,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145253,"byte_end":145259,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"to_den","qualname":"<Rational128>::to_den","value":"pub fn to_den(Self, u128) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` to a similar rational number where denominator is the given `den`.\n This only returns if the result is accurate. `Err` is returned if the result cannot be\n accurately calculated.\n","sig":null,"attributes":[{"value":"/ Convert `self` to a similar rational number where denominator is the given `den`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145035,"byte_end":145120,"line_start":145,"line_end":145,"column_start":2,"column_end":87}},{"value":"/ This only returns if the result is accurate. `Err` is returned if the result cannot be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145126,"byte_end":145216,"line_start":147,"line_end":147,"column_start":2,"column_end":92}},{"value":"/ accurately calculated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145218,"byte_end":145244,"line_start":148,"line_end":148,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145634,"byte_end":145637,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"name":"lcm","qualname":"<Rational128>::lcm","value":"pub fn lcm(&Self, &Self) -> Result<u128, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the least common divisor of `self` and `other`.","sig":null,"attributes":[{"value":"/ Get the least common divisor of `self` and `other`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145445,"byte_end":145500,"line_start":157,"line_end":157,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145502,"byte_end":145505,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ This only returns if the result is accurate. `Err` is returned if the result cannot be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145507,"byte_end":145597,"line_start":159,"line_end":159,"column_start":2,"column_end":92}},{"value":"/ accurately calculated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145599,"byte_end":145625,"line_start":160,"line_end":160,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146016,"byte_end":146035,"line_start":169,"line_end":169,"column_start":9,"column_end":28},"name":"lazy_saturating_add","qualname":"<Rational128>::lazy_saturating_add","value":"pub fn lazy_saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A saturating add that assumes `self` and `other` have the same denominator.\n","sig":null,"attributes":[{"value":"/ A saturating add that assumes `self` and `other` have the same denominator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":145928,"byte_end":146007,"line_start":168,"line_end":168,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146260,"byte_end":146279,"line_start":178,"line_end":178,"column_start":9,"column_end":28},"name":"lazy_saturating_sub","qualname":"<Rational128>::lazy_saturating_sub","value":"pub fn lazy_saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A saturating subtraction that assumes `self` and `other` have the same denominator.\n","sig":null,"attributes":[{"value":"/ A saturating subtraction that assumes `self` and `other` have the same denominator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146164,"byte_end":146251,"line_start":177,"line_end":177,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146583,"byte_end":146594,"line_start":189,"line_end":189,"column_start":9,"column_end":20},"name":"checked_add","qualname":"<Rational128>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Addition. Simply tries to unify the denominators and add the numerators.","sig":null,"attributes":[{"value":"/ Addition. Simply tries to unify the denominators and add the numerators.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146408,"byte_end":146484,"line_start":186,"line_end":186,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146486,"byte_end":146489,"line_start":187,"line_end":187,"column_start":2,"column_end":5}},{"value":"/ Overflow might happen during any of the steps. Error is returned in such cases.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":146491,"byte_end":146574,"line_start":188,"line_end":188,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147211,"byte_end":147222,"line_start":201,"line_end":201,"column_start":9,"column_end":20},"name":"checked_sub","qualname":"<Rational128>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Subtraction. Simply tries to unify the denominators and subtract the numerators.","sig":null,"attributes":[{"value":"/ Subtraction. Simply tries to unify the denominators and subtract the numerators.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147029,"byte_end":147113,"line_start":198,"line_end":198,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147115,"byte_end":147118,"line_start":199,"line_end":199,"column_start":2,"column_end":5}},{"value":"/ Overflow might happen during any of the steps. None is returned in such cases.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147120,"byte_end":147202,"line_start":200,"line_end":200,"column_start":2,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":685},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1856,"byte_end":1868,"line_start":56,"line_end":56,"column_start":11,"column_end":23},"name":"ThresholdOrd","qualname":"::ThresholdOrd","value":"ThresholdOrd<T>","parent":null,"children":[{"krate":0,"index":687}],"decl_id":null,"docs":" Trait for comparing two numbers with an threshold.","sig":null,"attributes":[{"value":"/ Trait for comparing two numbers with an threshold.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1599,"byte_end":1653,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1654,"byte_end":1657,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Returns:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1658,"byte_end":1670,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ - `Ordering::Greater` if `self` is greater than `other + threshold`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1671,"byte_end":1743,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ - `Ordering::Less` if `self` is less than `other - threshold`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1744,"byte_end":1810,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ - `Ordering::Equal` otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1811,"byte_end":1845,"line_start":55,"line_end":55,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1946,"byte_end":1950,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"tcmp","qualname":"::ThresholdOrd::tcmp","value":"pub fn tcmp(&Self, &T, T) -> Ordering","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Compare if `self` is `threshold` greater or less than `other`.\n","sig":null,"attributes":[{"value":"/ Compare if `self` is `threshold` greater or less than `other`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1875,"byte_end":1941,"line_start":57,"line_end":57,"column_start":2,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":691},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2955,"byte_end":2967,"line_start":93,"line_end":93,"column_start":11,"column_end":23},"name":"Normalizable","qualname":"::Normalizable","value":"Normalizable<T>","parent":null,"children":[{"krate":0,"index":693}],"decl_id":null,"docs":" A collection-like object that is made of values of type `T` and can normalize its individual\n values around a centric point.","sig":null,"attributes":[{"value":"/ A collection-like object that is made of values of type `T` and can normalize its individual","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2735,"byte_end":2831,"line_start":89,"line_end":89,"column_start":1,"column_end":97}},{"value":"/ values around a centric point.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2832,"byte_end":2866,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2867,"byte_end":2870,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Note that the order of items in the collection may affect the result.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2871,"byte_end":2944,"line_start":92,"line_end":92,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":3182,"byte_end":3191,"line_start":98,"line_end":98,"column_start":5,"column_end":14},"name":"normalize","qualname":"::Normalizable::normalize","value":"pub fn normalize(&Self, T) -> Result<Vec<T>, &'static str>","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" Normalize self around `targeted_sum`.","sig":null,"attributes":[{"value":"/ Normalize self around `targeted_sum`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2974,"byte_end":3015,"line_start":94,"line_end":94,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":3017,"byte_end":3020,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ Only returns `Ok` if the new sum of results is guaranteed to be equal to `targeted_sum`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":3022,"byte_end":3114,"line_start":96,"line_end":96,"column_start":2,"column_end":94}},{"value":"/ Else, returns an error explaining why it failed to do so.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":3116,"byte_end":3177,"line_start":97,"line_end":97,"column_start":2,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":700},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5882,"byte_end":5891,"line_start":159,"line_end":159,"column_start":8,"column_end":17},"name":"normalize","qualname":"::normalize","value":"pub fn normalize<T>(&[T], T) -> Result<Vec<T>, &'static str> where T: Clone +\nCopy + Ord + BaseArithmetic + Unsigned + Debug","parent":null,"children":[],"decl_id":null,"docs":" Normalize `input` so that the sum of all elements reaches `targeted_sum`.","sig":null,"attributes":[{"value":"/ Normalize `input` so that the sum of all elements reaches `targeted_sum`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4034,"byte_end":4111,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4112,"byte_end":4115,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This implementation is currently in a balanced position between being performant and accurate.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4116,"byte_end":4214,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4215,"byte_end":4218,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ 1. We prefer storing original indices, and sorting the `input` only once. This will save the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4219,"byte_end":4315,"line_start":134,"line_end":134,"column_start":1,"column_end":97}},{"value":"/    cost of sorting per round at the cost of a little bit of memory.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4316,"byte_end":4387,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ 2. The granularity of increment/decrements is determined by the number of elements in `input`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4388,"byte_end":4485,"line_start":136,"line_end":136,"column_start":1,"column_end":98}},{"value":"/    and their sum difference with `targeted_sum`, namely `diff = diff(sum(input), target_sum)`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4486,"byte_end":4584,"line_start":137,"line_end":137,"column_start":1,"column_end":99}},{"value":"/    This value is then distributed into `per_round = diff / input.len()` and `leftover = diff %","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4585,"byte_end":4683,"line_start":138,"line_end":138,"column_start":1,"column_end":99}},{"value":"/    round`. First, per_round is applied to all elements of input, and then we move to leftover,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4684,"byte_end":4782,"line_start":139,"line_end":139,"column_start":1,"column_end":99}},{"value":"/    in which case we add/subtract 1 by 1 until `leftover` is depleted.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4783,"byte_end":4856,"line_start":140,"line_end":140,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4857,"byte_end":4860,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ When the sum is less than the target, the above approach always holds. In this case, then each","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4861,"byte_end":4959,"line_start":142,"line_end":142,"column_start":1,"column_end":99}},{"value":"/ individual element is also less than target. Thus, by adding `per_round` to each item, neither","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":4960,"byte_end":5058,"line_start":143,"line_end":143,"column_start":1,"column_end":99}},{"value":"/ of them can overflow the numeric bound of `T`. In fact, neither of the can go beyond","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5059,"byte_end":5147,"line_start":144,"line_end":144,"column_start":1,"column_end":89}},{"value":"/ `target_sum`*.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5148,"byte_end":5166,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5167,"byte_end":5170,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ If sum is more than target, there is small twist. The subtraction of `per_round`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5171,"byte_end":5255,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ form each element might go below zero. In this case, we saturate and add the error to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5256,"byte_end":5349,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"/ `leftover` value. This ensures that the result will always stay accurate, yet it might cause the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5350,"byte_end":5450,"line_start":149,"line_end":149,"column_start":1,"column_end":101}},{"value":"/ execution to become increasingly slow, since leftovers are applied one by one.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5451,"byte_end":5533,"line_start":150,"line_end":150,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5534,"byte_end":5537,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All in all, the complicated case above is rare to happen in most use cases within this repo ,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5538,"byte_end":5635,"line_start":152,"line_end":152,"column_start":1,"column_end":98}},{"value":"/ hence we opt for it due to its simplicity.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5636,"byte_end":5682,"line_start":153,"line_end":153,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5683,"byte_end":5686,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ This function will return an error is if length of `input` cannot fit in `T`, or if `sum(input)`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5687,"byte_end":5787,"line_start":155,"line_end":155,"column_start":1,"column_end":101}},{"value":"/ cannot fit inside `T`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5788,"byte_end":5814,"line_start":156,"line_end":156,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5815,"byte_end":5818,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ * This proof is used in the implementation as well.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":5819,"byte_end":5874,"line_start":158,"line_end":158,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18532,"byte_end":18539,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29294,"byte_end":29301,"line_start":432,"line_end":432,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29663,"byte_end":29670,"line_start":450,"line_end":450,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29766,"byte_end":29773,"line_start":456,"line_end":456,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29791,"byte_end":29798,"line_start":458,"line_end":458,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30491,"byte_end":30498,"line_start":482,"line_end":482,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30608,"byte_end":30615,"line_start":488,"line_end":488,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30723,"byte_end":30730,"line_start":495,"line_end":495,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30860,"byte_end":30867,"line_start":502,"line_end":502,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30971,"byte_end":30978,"line_start":509,"line_end":509,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":31134,"byte_end":31141,"line_start":519,"line_end":519,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":32196,"byte_end":32203,"line_start":562,"line_end":562,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":32321,"byte_end":32328,"line_start":569,"line_end":569,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":44811,"byte_end":44812,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45240,"byte_end":45241,"line_start":80,"line_end":80,"column_start":66,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45458,"byte_end":45459,"line_start":85,"line_end":85,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46126,"byte_end":46127,"line_start":101,"line_end":101,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46311,"byte_end":46312,"line_start":107,"line_end":107,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":47283,"byte_end":47284,"line_start":132,"line_end":132,"column_start":105,"column_end":106},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":49021,"byte_end":49022,"line_start":187,"line_end":187,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":99398,"byte_end":99402,"line_start":281,"line_end":281,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142679,"byte_end":142695,"line_start":30,"line_end":30,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143156,"byte_end":143172,"line_start":57,"line_end":57,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143277,"byte_end":143293,"line_start":63,"line_end":63,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143687,"byte_end":143703,"line_start":79,"line_end":79,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143814,"byte_end":143830,"line_start":85,"line_end":85,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144110,"byte_end":144121,"line_start":96,"line_end":96,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144460,"byte_end":144471,"line_start":109,"line_end":109,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147681,"byte_end":147692,"line_start":212,"line_end":212,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147834,"byte_end":147845,"line_start":222,"line_end":222,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147925,"byte_end":147936,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":148041,"byte_end":148052,"line_start":234,"line_end":234,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":148557,"byte_end":148568,"line_start":252,"line_end":252,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2025,"byte_end":2026,"line_start":61,"line_end":61,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":3624,"byte_end":3627,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1104,"byte_end":1111,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1121,"byte_end":1135,"line_start":37,"line_end":37,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1145,"byte_end":1151,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":121}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1161,"byte_end":1171,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":261}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1181,"byte_end":1192,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":373}},{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":1202,"byte_end":1210,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":539}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":18532,"byte_end":18539,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29294,"byte_end":29301,"line_start":432,"line_end":432,"column_start":29,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29663,"byte_end":29670,"line_start":450,"line_end":450,"column_start":20,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29766,"byte_end":29773,"line_start":456,"line_end":456,"column_start":13,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":29791,"byte_end":29798,"line_start":458,"line_end":458,"column_start":14,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30491,"byte_end":30498,"line_start":482,"line_end":482,"column_start":21,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30608,"byte_end":30615,"line_start":488,"line_end":488,"column_start":19,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30723,"byte_end":30730,"line_start":495,"line_end":495,"column_start":19,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30860,"byte_end":30867,"line_start":502,"line_end":502,"column_start":19,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":30971,"byte_end":30978,"line_start":509,"line_end":509,"column_start":15,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":710},"to":{"krate":19,"index":497}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":31134,"byte_end":31141,"line_start":519,"line_end":519,"column_start":14,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":710},"to":{"krate":19,"index":507}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":32196,"byte_end":32203,"line_start":562,"line_end":562,"column_start":20,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/biguint.rs","byte_start":32321,"byte_end":32328,"line_start":569,"line_end":569,"column_start":21,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42905,"byte_end":42909,"line_start":34,"line_end":34,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42917,"byte_end":42921,"line_start":35,"line_end":35,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":19,"index":497},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42924,"byte_end":42927,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"kind":"SuperTrait","from":{"krate":19,"index":507},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42930,"byte_end":42947,"line_start":35,"line_end":35,"column_start":15,"column_end":32},"kind":"SuperTrait","from":{"krate":27,"index":4},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42951,"byte_end":42954,"line_start":36,"line_end":36,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42978,"byte_end":42987,"line_start":36,"line_end":36,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":42997,"byte_end":43000,"line_start":37,"line_end":37,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2925},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43024,"byte_end":43033,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2955},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43043,"byte_end":43046,"line_start":38,"line_end":38,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43070,"byte_end":43079,"line_start":38,"line_end":38,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2959},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43089,"byte_end":43092,"line_start":39,"line_end":39,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2935},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43116,"byte_end":43125,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2963},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43135,"byte_end":43138,"line_start":40,"line_end":40,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2941},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43162,"byte_end":43171,"line_start":40,"line_end":40,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2967},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43181,"byte_end":43184,"line_start":41,"line_end":41,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":2,"index":2991},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43207,"byte_end":43210,"line_start":41,"line_end":41,"column_start":28,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2997},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43234,"byte_end":43244,"line_start":42,"line_end":42,"column_start":2,"column_end":12},"kind":"SuperTrait","from":{"krate":19,"index":610},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43247,"byte_end":43257,"line_start":42,"line_end":42,"column_start":15,"column_end":25},"kind":"SuperTrait","from":{"krate":19,"index":613},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43260,"byte_end":43270,"line_start":42,"line_end":42,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":19,"index":596},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43273,"byte_end":43283,"line_start":42,"line_end":42,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":19,"index":599},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43286,"byte_end":43296,"line_start":42,"line_end":42,"column_start":54,"column_end":64},"kind":"SuperTrait","from":{"krate":19,"index":601},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43299,"byte_end":43309,"line_start":42,"line_end":42,"column_start":67,"column_end":77},"kind":"SuperTrait","from":{"krate":19,"index":603},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43312,"byte_end":43322,"line_start":42,"line_end":42,"column_start":80,"column_end":90},"kind":"SuperTrait","from":{"krate":0,"index":241},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43326,"byte_end":43336,"line_start":43,"line_end":43,"column_start":2,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2551},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43345,"byte_end":43348,"line_start":43,"line_end":43,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2540},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43351,"byte_end":43358,"line_start":43,"line_end":43,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":230},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43361,"byte_end":43371,"line_start":43,"line_end":43,"column_start":37,"column_end":47},"kind":"SuperTrait","from":{"krate":21,"index":623},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43374,"byte_end":43379,"line_start":43,"line_end":43,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43383,"byte_end":43390,"line_start":44,"line_end":44,"column_start":2,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43397,"byte_end":43404,"line_start":44,"line_end":44,"column_start":16,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43411,"byte_end":43418,"line_start":44,"line_end":44,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43426,"byte_end":43433,"line_start":44,"line_end":44,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43441,"byte_end":43448,"line_start":44,"line_end":44,"column_start":60,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43456,"byte_end":43463,"line_start":44,"line_end":44,"column_start":75,"column_end":82},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43472,"byte_end":43479,"line_start":45,"line_end":45,"column_start":2,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43487,"byte_end":43494,"line_start":45,"line_end":45,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43502,"byte_end":43509,"line_start":45,"line_end":45,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43518,"byte_end":43525,"line_start":45,"line_end":45,"column_start":48,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43534,"byte_end":43541,"line_start":45,"line_end":45,"column_start":64,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43551,"byte_end":43558,"line_start":45,"line_end":45,"column_start":81,"column_end":88},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43569,"byte_end":43588,"line_start":46,"line_end":46,"column_start":2,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":225},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43595,"byte_end":43614,"line_start":46,"line_end":46,"column_start":28,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43622,"byte_end":43641,"line_start":47,"line_end":47,"column_start":2,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":225},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43649,"byte_end":43668,"line_start":47,"line_end":47,"column_start":29,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43677,"byte_end":43696,"line_start":48,"line_end":48,"column_start":2,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":225},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43704,"byte_end":43723,"line_start":48,"line_end":48,"column_start":29,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43732,"byte_end":43751,"line_start":49,"line_end":49,"column_start":2,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":225},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43759,"byte_end":43778,"line_start":49,"line_end":49,"column_start":29,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43787,"byte_end":43806,"line_start":50,"line_end":50,"column_start":2,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":225},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":43815,"byte_end":43834,"line_start":50,"line_end":50,"column_start":30,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":44811,"byte_end":44812,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":218},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45132,"byte_end":45146,"line_start":78,"line_end":78,"column_start":25,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":216},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45149,"byte_end":45153,"line_start":78,"line_end":78,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45161,"byte_end":45165,"line_start":78,"line_end":78,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45240,"byte_end":45241,"line_start":80,"line_end":80,"column_start":66,"column_end":67},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":221},"to":{"krate":0,"index":219}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45372,"byte_end":45384,"line_start":83,"line_end":83,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":219},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45387,"byte_end":45395,"line_start":83,"line_end":83,"column_start":48,"column_end":56},"kind":"SuperTrait","from":{"krate":19,"index":919},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45458,"byte_end":45459,"line_start":85,"line_end":85,"column_start":59,"column_end":60},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":224},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45643,"byte_end":45648,"line_start":89,"line_end":89,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":45946,"byte_end":45951,"line_start":96,"line_end":96,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46126,"byte_end":46127,"line_start":101,"line_end":101,"column_start":76,"column_end":77},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":233},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":46311,"byte_end":46312,"line_start":107,"line_end":107,"column_start":76,"column_end":77},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":238},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":47283,"byte_end":47284,"line_start":132,"line_end":132,"column_start":105,"column_end":106},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":241}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/traits.rs","byte_start":49021,"byte_end":49022,"line_start":187,"line_end":187,"column_start":40,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50360,"byte_end":50365,"line_start":39,"line_end":39,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50368,"byte_end":50378,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":241},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50381,"byte_end":50385,"line_start":39,"line_end":39,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50388,"byte_end":50395,"line_start":39,"line_end":39,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50398,"byte_end":50400,"line_start":39,"line_end":39,"column_start":40,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50403,"byte_end":50412,"line_start":39,"line_end":39,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50415,"byte_end":50418,"line_start":39,"line_end":39,"column_start":57,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2540},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50421,"byte_end":50431,"line_start":39,"line_end":39,"column_start":63,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":2551},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50434,"byte_end":50441,"line_start":39,"line_end":39,"column_start":76,"column_end":83},"kind":"SuperTrait","from":{"krate":19,"index":230},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50449,"byte_end":50454,"line_start":39,"line_end":39,"column_start":91,"column_end":96},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50463,"byte_end":50466,"line_start":40,"line_end":40,"column_start":9,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2935},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50487,"byte_end":50490,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/per_things.rs","byte_start":50506,"byte_end":50509,"line_start":40,"line_end":40,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":19,"index":804},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91358,"byte_end":91362,"line_start":34,"line_end":34,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91365,"byte_end":91370,"line_start":34,"line_end":34,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91373,"byte_end":91380,"line_start":34,"line_end":34,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":19,"index":230},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91383,"byte_end":91387,"line_start":34,"line_end":34,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":19,"index":497},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91390,"byte_end":91400,"line_start":34,"line_end":34,"column_start":62,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":241},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91404,"byte_end":91414,"line_start":35,"line_end":35,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2551},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91417,"byte_end":91436,"line_start":35,"line_end":35,"column_start":17,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91445,"byte_end":91452,"line_start":35,"line_end":35,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2766},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":91461,"byte_end":91471,"line_start":35,"line_end":35,"column_start":61,"column_end":71},"kind":"SuperTrait","from":{"krate":19,"index":608},"to":{"krate":0,"index":469}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92196,"byte_end":92201,"line_start":56,"line_end":56,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92204,"byte_end":92208,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92211,"byte_end":92218,"line_start":56,"line_end":56,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92221,"byte_end":92226,"line_start":56,"line_end":56,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92230,"byte_end":92240,"line_start":57,"line_end":57,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":241},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92243,"byte_end":92250,"line_start":57,"line_end":57,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":19,"index":230},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92254,"byte_end":92256,"line_start":58,"line_end":58,"column_start":4,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92259,"byte_end":92268,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92271,"byte_end":92274,"line_start":58,"line_end":58,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2540},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92277,"byte_end":92287,"line_start":58,"line_end":58,"column_start":27,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2551},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92291,"byte_end":92301,"line_start":59,"line_end":59,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":19,"index":599},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92304,"byte_end":92314,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":19,"index":596},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92317,"byte_end":92327,"line_start":59,"line_end":59,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":19,"index":601},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92330,"byte_end":92340,"line_start":59,"line_end":59,"column_start":43,"column_end":53},"kind":"SuperTrait","from":{"krate":19,"index":603},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92344,"byte_end":92347,"line_start":60,"line_end":60,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92350,"byte_end":92353,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2925},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92356,"byte_end":92359,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2935},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92362,"byte_end":92365,"line_start":60,"line_end":60,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92368,"byte_end":92372,"line_start":60,"line_end":60,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":19,"index":497},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":92375,"byte_end":92378,"line_start":60,"line_end":60,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":19,"index":507},"to":{"krate":0,"index":480}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/fixed_point.rs","byte_start":99398,"byte_end":99402,"line_start":281,"line_end":281,"column_start":40,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":142679,"byte_end":142695,"line_start":30,"line_end":30,"column_start":6,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143156,"byte_end":143172,"line_start":57,"line_end":57,"column_start":21,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143277,"byte_end":143293,"line_start":63,"line_end":63,"column_start":14,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143687,"byte_end":143703,"line_start":79,"line_end":79,"column_start":20,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":143814,"byte_end":143830,"line_start":85,"line_end":85,"column_start":28,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144110,"byte_end":144121,"line_start":96,"line_end":96,"column_start":29,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":144460,"byte_end":144471,"line_start":109,"line_end":109,"column_start":6,"column_end":17},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147681,"byte_end":147692,"line_start":212,"line_end":212,"column_start":18,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1742},"to":{"krate":19,"index":230}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147834,"byte_end":147845,"line_start":222,"line_end":222,"column_start":33,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":147925,"byte_end":147936,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":148041,"byte_end":148052,"line_start":234,"line_end":234,"column_start":14,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/rational.rs","byte_start":148557,"byte_end":148568,"line_start":252,"line_end":252,"column_start":20,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":2025,"byte_end":2026,"line_start":61,"line_end":61,"column_start":29,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":689},"to":{"krate":0,"index":685}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/arithmetic/src/lib.rs","byte_start":3624,"byte_end":3627,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":691}}]}