{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine","program":"/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_state_machine","--edition=2018","/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"log\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rand\"","--cfg","feature=\"sp-panic-handler\"","--cfg","feature=\"std\"","--cfg","feature=\"thiserror\"","-C","metadata=a54908d4317e5cb8","-C","extra-filename=-a54908d4317e5cb8","--out-dir","/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","-L","dependency=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps","--extern","hash_db=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libhash_db-04266d03e2803293.rmeta","--extern","log=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/liblog-f8abb66ffc16068c.rmeta","--extern","num_traits=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libnum_traits-36945435b346d9c6.rmeta","--extern","codec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libparity_scale_codec-82cf01292b2737e4.rmeta","--extern","parking_lot=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libparking_lot-f63854fb8d837b5f.rmeta","--extern","rand=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/librand-b588fbd4111baf98.rmeta","--extern","smallvec=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsmallvec-1f20c4f5ff376b51.rmeta","--extern","sp_core=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_core-16e99f7ce2a5e73d.rmeta","--extern","sp_externalities=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_externalities-06351528f27d4a4a.rmeta","--extern","sp_panic_handler=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_panic_handler-0716ad554491e4c8.rmeta","--extern","sp_std=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_std-418d35f07a66cda9.rmeta","--extern","sp_trie=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_trie-391e323a8b8c271b.rmeta","--extern","thiserror=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libthiserror-b95217be69b81deb.rmeta","--extern","trie_db=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libtrie_db-4b4cdb6d0f3b2889.rmeta","--extern","trie_root=/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libtrie_root-79b7b97c24417cc8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/shuang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/shuang/project/course5/substrate-node-template-transfer-claim/pallets/template/target/rls/debug/deps/libsp_state_machine-a54908d4317e5cb8.rmeta"},"prelude":{"crate_id":{"name":"sp_state_machine","disambiguator":[11174963734054188837,13247643660873731905]},"crate_root":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src","external_crates":[{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":19,"id":{"name":"hash_db","disambiguator":[17133198868170704571,9276653769965525230]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":20,"id":{"name":"parity_scale_codec","disambiguator":[9863673375670885385,13575924348645702016]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":21,"id":{"name":"parity_scale_codec_derive","disambiguator":[12287734400278992213,9757486750001437063]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":22,"id":{"name":"arrayvec","disambiguator":[10892931398947536880,12549142608372466002]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":23,"id":{"name":"byte_slice_cast","disambiguator":[709702439622045722,10712509937866309499]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":24,"id":{"name":"serde","disambiguator":[1013328755442281475,12414158929771731165]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":25,"id":{"name":"serde_derive","disambiguator":[18017531714661946146,12785885005030363355]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":26,"id":{"name":"sp_core","disambiguator":[17465833503552520086,14486576551778803498]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":27,"id":{"name":"sp_runtime_interface","disambiguator":[1755915659432366746,16371364100008394244]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":28,"id":{"name":"sp_wasm_interface","disambiguator":[1333710280556752891,5822633513417739624]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":29,"id":{"name":"sp_std","disambiguator":[2682330704443012759,7066719197896240899]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":30,"id":{"name":"impl_trait_for_tuples","disambiguator":[117060539399528790,7764638478372359332]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":31,"id":{"name":"wasmi","disambiguator":[13589826167754890772,9239933373639075900]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":32,"id":{"name":"memory_units","disambiguator":[6195364841199565730,12036049212193333628]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":33,"id":{"name":"parity_wasm","disambiguator":[4160865230177925414,9613519101215907930]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":34,"id":{"name":"wasmi_validation","disambiguator":[3489260205587041387,4895180464374019527]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":35,"id":{"name":"num_rational","disambiguator":[5751089981592618285,6971262963064967597]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":36,"id":{"name":"num_bigint","disambiguator":[7115601650226780755,10679174397042849356]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":37,"id":{"name":"num_integer","disambiguator":[11647050115317718423,8118656174663800100]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build.rs","num":38,"id":{"name":"num_traits","disambiguator":[468258127332996008,10301193667755463888]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":39,"id":{"name":"libc","disambiguator":[14817762749095948147,11358055470431825968]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":40,"id":{"name":"sp_tracing","disambiguator":[17172114964806427549,5525253860101841043]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":41,"id":{"name":"tracing_core","disambiguator":[17412884218351998892,12851551301867950637]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":42,"id":{"name":"lazy_static","disambiguator":[13808990345214567022,8458474173850622234]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":43,"id":{"name":"tracing","disambiguator":[10411440744899187433,6603024184943082211]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":44,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":45,"id":{"name":"pin_project_lite","disambiguator":[990302580450785837,12633318721226934598]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":46,"id":{"name":"tracing_subscriber","disambiguator":[14430665297412802823,4985566841653032589]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":47,"id":{"name":"regex","disambiguator":[11790850479755752868,15823231302091808029]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":48,"id":{"name":"regex_syntax","disambiguator":[283791072225402269,18198010613972305146]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":49,"id":{"name":"aho_corasick","disambiguator":[8512872767130373619,14008354386057248474]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":50,"id":{"name":"memchr","disambiguator":[10965938807129842840,3881412707962956333]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":51,"id":{"name":"matchers","disambiguator":[8255961372920318437,12740628620887626896]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":52,"id":{"name":"regex_automata","disambiguator":[1320200042273339968,16373831564488978888]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":53,"id":{"name":"byteorder","disambiguator":[5572018000152704925,12716201805869705633]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":54,"id":{"name":"ansi_term","disambiguator":[13127847477166062082,5650376372185196485]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":55,"id":{"name":"tracing_log","disambiguator":[14290514781539487758,3196600907090575709]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/prune.rs","num":56,"id":{"name":"log","disambiguator":[1497614942449303687,18379385341275479390]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":57,"id":{"name":"serde_json","disambiguator":[6024639829599211841,17376114746246845812]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":58,"id":{"name":"itoa","disambiguator":[11245088896563774092,17202472579960509435]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":59,"id":{"name":"ryu","disambiguator":[11470782334523648659,8653981335039768051]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":60,"id":{"name":"tracing_serde","disambiguator":[9295691947455943722,3200594985159141884]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":61,"id":{"name":"sharded_slab","disambiguator":[14468346604908179086,4424391911497239624]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":62,"id":{"name":"thread_local","disambiguator":[6635237296722086754,1499244371394202430]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":63,"id":{"name":"once_cell","disambiguator":[11157995440888823552,13157792258295126306]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","num":64,"id":{"name":"parking_lot","disambiguator":[15677903307552072959,12242869384341018242]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":65,"id":{"name":"instant","disambiguator":[1050921259708134077,2956906816676224560]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":66,"id":{"name":"lock_api","disambiguator":[158843564838033861,45651071890610106]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":67,"id":{"name":"scopeguard","disambiguator":[2489176029422886084,9277911216960919523]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":68,"id":{"name":"parking_lot_core","disambiguator":[14305922968576712592,4316158812945800234]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","num":69,"id":{"name":"smallvec","disambiguator":[6137931805136025359,12093233173373222076]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":70,"id":{"name":"chrono","disambiguator":[482005194890796337,15366645184012618871]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":71,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[8005924609508096746,13757987672185805269]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":72,"id":{"name":"sp_externalities","disambiguator":[15488217131828809976,5884621008457039066]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":73,"id":{"name":"sp_storage","disambiguator":[15045020432205932827,9648620918583478302]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":74,"id":{"name":"sp_debug_derive","disambiguator":[3324317708669829777,10747756365752449359]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":75,"id":{"name":"ref_cast","disambiguator":[7271053519566363135,6171874901284624371]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":76,"id":{"name":"ref_cast_impl","disambiguator":[10163985489832889473,17738597847102963750]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":77,"id":{"name":"impl_serde","disambiguator":[8302623203868640053,1295238832359201906]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":78,"id":{"name":"environmental","disambiguator":[6347572879023193819,10576995237739164786]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":79,"id":{"name":"primitive_types","disambiguator":[8674084511203116323,18057188405653416080]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":80,"id":{"name":"fixed_hash","disambiguator":[13610794239381522249,7680950302475378929]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":81,"id":{"name":"static_assertions","disambiguator":[2800172271264622283,16868211187352620724]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":82,"id":{"name":"rustc_hex","disambiguator":[17441328496794956230,970388078387978999]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":83,"id":{"name":"rand","disambiguator":[1052035276626706867,5697506913480721013]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":84,"id":{"name":"rand_core","disambiguator":[7873266713166871070,3900550269098453307]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":85,"id":{"name":"getrandom","disambiguator":[9974383089918438446,9797316574049181606]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":86,"id":{"name":"uint","disambiguator":[13394015458781351245,16732330757324271756]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":87,"id":{"name":"hex","disambiguator":[1631317938896525150,12209530835525682059]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":88,"id":{"name":"crunchy","disambiguator":[17619218191002482289,2269427654497740388]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":89,"id":{"name":"impl_codec","disambiguator":[6817402374190563707,62431368395485845]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":90,"id":{"name":"sha2","disambiguator":[14361898895340719512,13735529485073163947]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":91,"id":{"name":"block_buffer","disambiguator":[3978303305993926390,8510109573664866771]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":92,"id":{"name":"generic_array","disambiguator":[14243802694031767939,1438805964005100436]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":93,"id":{"name":"typenum","disambiguator":[6578675967236591406,12581686752636525447]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":94,"id":{"name":"digest","disambiguator":[18429762179806425625,13221353243685484064]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":95,"id":{"name":"opaque_debug","disambiguator":[17895543252167649484,1529394115718377223]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":96,"id":{"name":"cpufeatures","disambiguator":[17918414462149825574,1327987606936023573]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":97,"id":{"name":"tiny_keccak","disambiguator":[13602009866564011787,2115782419145344347]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":98,"id":{"name":"rand","disambiguator":[10104458195138828070,14708897342035781846]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":99,"id":{"name":"rand_core","disambiguator":[8168600991406213666,7731094546320414973]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":100,"id":{"name":"getrandom","disambiguator":[6092044390307500327,7449311275759007257]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":101,"id":{"name":"rand_chacha","disambiguator":[14715815460365568280,12277819961177439939]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":102,"id":{"name":"ppv_lite86","disambiguator":[16342140534606003648,15606045994417953711]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":103,"id":{"name":"rand_pcg","disambiguator":[5342309791845251759,7542980990625891251]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":104,"id":{"name":"base58","disambiguator":[9948311484690109531,1185773021601369373]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":105,"id":{"name":"zeroize","disambiguator":[12827983992855849373,6048528860301093046]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":106,"id":{"name":"zeroize_derive","disambiguator":[8846451443595622030,18415566963249974393]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":107,"id":{"name":"secrecy","disambiguator":[6374937265427411378,13253474212058473441]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":108,"id":{"name":"ed25519_dalek","disambiguator":[11458631928805191845,2169459921409803996]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":109,"id":{"name":"ed25519","disambiguator":[14626764059776426807,10374049177595959085]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":110,"id":{"name":"signature","disambiguator":[4173135177510074979,9672590489054501700]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":111,"id":{"name":"curve25519_dalek","disambiguator":[7224955439218375084,14168854423555505824]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":112,"id":{"name":"subtle","disambiguator":[10119681378915675371,11153087873494906157]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":113,"id":{"name":"substrate_bip39","disambiguator":[3229070020819919595,14815767372285391109]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":114,"id":{"name":"sha2","disambiguator":[14265813088146361728,13867311408166017397]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":115,"id":{"name":"block_buffer","disambiguator":[1106799921965378791,15142214264326969534]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":116,"id":{"name":"block_padding","disambiguator":[5959993695349436658,9158637949195490439]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":117,"id":{"name":"byte_tools","disambiguator":[11080469669453245737,5986290842937788228]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":118,"id":{"name":"generic_array","disambiguator":[468521920810271379,6308368386225795697]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":119,"id":{"name":"fake_simd","disambiguator":[1972530413421215340,11624191712553872842]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":120,"id":{"name":"opaque_debug","disambiguator":[10008437937655825331,10026059429878192125]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":121,"id":{"name":"digest","disambiguator":[10123127812650022976,14361139477428131810]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":122,"id":{"name":"hmac","disambiguator":[3194947236956686664,7280873657306625950]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":123,"id":{"name":"crypto_mac","disambiguator":[17088905705163145708,9206190900112779750]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":124,"id":{"name":"subtle","disambiguator":[1610201410659375534,16281438285148157453]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":125,"id":{"name":"pbkdf2","disambiguator":[12661020769218030930,8553159140014899406]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":126,"id":{"name":"schnorrkel","disambiguator":[11032496182252516084,14207469927636100396]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":127,"id":{"name":"arrayref","disambiguator":[7182672989026383584,9381797795682384601]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":128,"id":{"name":"curve25519_dalek","disambiguator":[4310340147329237785,8440771998134417436]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":129,"id":{"name":"merlin","disambiguator":[18419285781239816797,4244201307574362490]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":130,"id":{"name":"keccak","disambiguator":[4166653274539750117,6108742692447987433]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":131,"id":{"name":"arrayvec","disambiguator":[15424034480939085771,729664177555154619]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":132,"id":{"name":"bip39","disambiguator":[16431490494461771690,810437311810588290]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","num":133,"id":{"name":"thiserror","disambiguator":[11826844310775633001,7232977664804698519]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":134,"id":{"name":"thiserror_impl","disambiguator":[15034830344643695346,3570421962437252377]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":135,"id":{"name":"rustc_hash","disambiguator":[14034990781480687947,7284321016188038421]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":136,"id":{"name":"anyhow","disambiguator":[3957825682152055074,8833221029693451282]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":137,"id":{"name":"unicode_normalization","disambiguator":[9172877048366789641,8862097905030873859]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":138,"id":{"name":"tinyvec","disambiguator":[13436341677049969168,16911514833766957755]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":139,"id":{"name":"tinyvec_macros","disambiguator":[16861904645501066133,8072044776194435868]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":140,"id":{"name":"hmac","disambiguator":[11365093315327904620,16203764683919995972]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":141,"id":{"name":"crypto_mac","disambiguator":[14780830138013675860,2226593884177290324]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":142,"id":{"name":"pbkdf2","disambiguator":[7686476682800005969,18209456446927920857]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":143,"id":{"name":"secp256k1","disambiguator":[13568872506563113999,12640127276620014770]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":144,"id":{"name":"hmac_drbg","disambiguator":[1663604535369504733,2333569057007048699]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":145,"id":{"name":"hash256_std_hasher","disambiguator":[9173114410465121650,11021809311462915349]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":146,"id":{"name":"parity_util_mem","disambiguator":[5296572423964858728,6427433724444266698]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":147,"id":{"name":"parity_util_mem_derive","disambiguator":[745585518166065290,4657381930045939952]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":148,"id":{"name":"hashbrown","disambiguator":[1409465637180905903,13960350635997306741]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":149,"id":{"name":"ahash","disambiguator":[8115782313198960911,1618164949964186540]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":150,"id":{"name":"dyn_clonable","disambiguator":[5978395754545217841,17042432683714324860]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":151,"id":{"name":"dyn_clone","disambiguator":[229060014869772319,1761035384001269300]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":152,"id":{"name":"dyn_clonable_impl","disambiguator":[13244785219391527467,3542801123337569641]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":153,"id":{"name":"blake2_rfc","disambiguator":[1571535678652171201,13942110578131448606]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":154,"id":{"name":"arrayvec","disambiguator":[8379684785787417792,527361484718232246]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":155,"id":{"name":"nodrop","disambiguator":[4757912953554896694,8642030366303686606]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":156,"id":{"name":"constant_time_eq","disambiguator":[9691593894436788728,10833859660961375188]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":157,"id":{"name":"twox_hash","disambiguator":[4214654636705520795,13722061997964221786]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":158,"id":{"name":"cfg_if","disambiguator":[16032648971317944029,3391597224278519551]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":159,"id":{"name":"futures","disambiguator":[8396710240088635480,14225192720137542329]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":160,"id":{"name":"futures_core","disambiguator":[1146831099891734046,1355076027306116781]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":161,"id":{"name":"futures_util","disambiguator":[13436632395791529984,12798848195123694721]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":162,"id":{"name":"pin_utils","disambiguator":[9212437317893473852,3409318353310669863]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":163,"id":{"name":"futures_macro","disambiguator":[12489104770257520816,14771837375143540983]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":164,"id":{"name":"futures_task","disambiguator":[12764784445193263657,6118880633058950338]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":165,"id":{"name":"futures_sink","disambiguator":[6393790124496786777,16242734385808978800]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":166,"id":{"name":"futures_channel","disambiguator":[172535194296577207,13520333266307135331]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":167,"id":{"name":"slab","disambiguator":[15082221935741963601,9737765728630811904]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":168,"id":{"name":"futures_io","disambiguator":[16668743713700835307,9196727856865856789]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":169,"id":{"name":"futures_executor","disambiguator":[15253163258453458409,10165982875376273183]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","num":170,"id":{"name":"num_cpus","disambiguator":[673221153316475616,14141541788652730693]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","num":171,"id":{"name":"sp_trie","disambiguator":[1045182311516083698,14648549408193115851]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","num":172,"id":{"name":"trie_db","disambiguator":[15887945843532262897,13261997196166292686]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","num":173,"id":{"name":"trie_root","disambiguator":[13115484494465907898,10092111208902148460]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","num":174,"id":{"name":"memory_db","disambiguator":[11466926832702196130,6165833531221435064]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":175,"id":{"name":"sp_panic_handler","disambiguator":[10083127503021557322,12990837717287795118]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":176,"id":{"name":"backtrace","disambiguator":[661002490634909096,9692025504576857177]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":177,"id":{"name":"rustc_demangle","disambiguator":[2499770586753271006,888685918063177590]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":178,"id":{"name":"addr2line","disambiguator":[4341677854237614482,17732111654398053666]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":179,"id":{"name":"gimli","disambiguator":[6539440397955681520,5544790458356978803]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":180,"id":{"name":"object","disambiguator":[15942519171338184044,728121135576459081]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":181,"id":{"name":"miniz_oxide","disambiguator":[7007881904853442861,1648100382242146301]}},{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","num":182,"id":{"name":"adler","disambiguator":[601693519152416884,13836920305963515529]}}],"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":44021,"line_start":18,"line_end":1577,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":1216,"byte_end":1217,"line_start":44,"line_end":44,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"create_proof_check_backend, ChangesTrieCacheAction, TrieMut, ChangesTrieState, DBValue, ChangesTrieBlockNumber, MemoryDB, StorageProof","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":1263,"byte_end":1264,"line_start":47,"line_end":47,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"InMemoryBackend, ChangesTrieTransaction","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":24},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":1304,"byte_end":1309,"line_start":49,"line_end":49,"column_start":15,"column_end":20},"alias_span":null,"name":"debug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":22},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":1311,"byte_end":1315,"line_start":49,"line_end":49,"column_start":22,"column_end":26},"alias_span":null,"name":"warn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":25},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":1317,"byte_end":1322,"line_start":49,"line_end":49,"column_start":28,"column_end":33},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":56,"index":21},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":1324,"byte_end":1329,"line_start":49,"line_end":49,"column_start":35,"column_end":40},"alias_span":null,"name":"log_error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3350},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2737,"byte_end":2753,"line_start":119,"line_end":119,"column_start":2,"column_end":18},"alias_span":null,"name":"OverlayedChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1795},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2755,"byte_end":2765,"line_start":119,"line_end":119,"column_start":20,"column_end":30},"alias_span":null,"name":"StorageKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1796},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2767,"byte_end":2779,"line_start":119,"line_end":119,"column_start":32,"column_end":44},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1797},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2782,"byte_end":2799,"line_start":120,"line_end":120,"column_start":2,"column_end":19},"alias_span":null,"name":"StorageCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1798},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2801,"byte_end":2823,"line_start":120,"line_end":120,"column_start":21,"column_end":43},"alias_span":null,"name":"ChildStorageCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2826,"byte_end":2840,"line_start":121,"line_end":121,"column_start":2,"column_end":16},"alias_span":null,"name":"StorageChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1820},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2842,"byte_end":2865,"line_start":121,"line_end":121,"column_start":18,"column_end":41},"alias_span":null,"name":"StorageTransactionCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1799},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2868,"byte_end":2893,"line_start":122,"line_end":122,"column_start":2,"column_end":27},"alias_span":null,"name":"OffchainChangesCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3325},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2896,"byte_end":2920,"line_start":123,"line_end":123,"column_start":2,"column_end":26},"alias_span":null,"name":"OffchainOverlayedChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3363},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2923,"byte_end":2937,"line_start":124,"line_end":124,"column_start":2,"column_end":16},"alias_span":null,"name":"IndexOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2966,"byte_end":2973,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2442},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3013,"byte_end":3031,"line_start":127,"line_end":127,"column_start":39,"column_end":57},"alias_span":null,"name":"TrieBackendStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2362},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3033,"byte_end":3040,"line_start":127,"line_end":127,"column_start":59,"column_end":66},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2220},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3072,"byte_end":3083,"line_start":128,"line_end":128,"column_start":30,"column_end":41},"alias_span":null,"name":"TrieBackend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3400},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3108,"byte_end":3117,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"UsageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3391},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3119,"byte_end":3128,"line_start":129,"line_end":129,"column_start":35,"column_end":44},"alias_span":null,"name":"UsageUnit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3130,"byte_end":3147,"line_start":129,"line_end":129,"column_start":46,"column_end":63},"alias_span":null,"name":"StateMachineStats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1045},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3166,"byte_end":3171,"line_start":130,"line_end":130,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3226},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3173,"byte_end":3187,"line_start":130,"line_end":130,"column_start":24,"column_end":38},"alias_span":null,"name":"ExecutionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":3210,"byte_end":3213,"line_start":131,"line_end":131,"column_start":21,"column_end":24},"alias_span":null,"name":"Ext","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":44021,"line_start":18,"line_end":1577,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":166},{"krate":0,"index":251},{"krate":0,"index":1041},{"krate":0,"index":1048},{"krate":0,"index":1272},{"krate":0,"index":1426},{"krate":0,"index":1570},{"krate":0,"index":1956},{"krate":0,"index":2145},{"krate":0,"index":2272},{"krate":0,"index":2478},{"krate":0,"index":2497},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2784}],"decl_id":null,"docs":" Substrate state machine implementation.\n","sig":null,"attributes":[{"value":"/ Substrate state machine implementation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":731,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":109},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":159}],"decl_id":null,"docs":" State machine backends. These manage the code and storage of contracts.\n","sig":null,"attributes":[{"value":"/ State machine backends. These manage the code and storage of contracts.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":44709,"byte_end":44784,"line_start":18,"line_end":18,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45322,"byte_end":45329,"line_start":38,"line_end":38,"column_start":11,"column_end":18},"name":"Backend","qualname":"::backend::Backend","value":"Backend<H: Hasher>: sp_std::fmt::Debug","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" A state backend is used to read state data and can have changes committed\n to it.","sig":null,"attributes":[{"value":"/ A state backend is used to read state data and can have changes committed","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45161,"byte_end":45238,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ to it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45239,"byte_end":45249,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45250,"byte_end":45253,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The clone operation (if implemented) should be cheap.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45254,"byte_end":45311,"line_start":37,"line_end":37,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":55},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45424,"byte_end":45429,"line_start":40,"line_end":40,"column_start":7,"column_end":12},"name":"Error","qualname":"::backend::Backend::Error","value":"type Error: super::Error;","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" An error type when fetching data is not possible.\n","sig":null,"attributes":[{"value":"/ An error type when fetching data is not possible.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45364,"byte_end":45417,"line_start":39,"line_end":39,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":56},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45501,"byte_end":45512,"line_start":43,"line_end":43,"column_start":7,"column_end":18},"name":"Transaction","qualname":"::backend::Backend::Transaction","value":"type Transaction: Consolidate + Default + Send;","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Storage changes to be applied if committing\n","sig":null,"attributes":[{"value":"/ Storage changes to be applied if committing","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45447,"byte_end":45494,"line_start":42,"line_end":42,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45586,"byte_end":45604,"line_start":46,"line_end":46,"column_start":7,"column_end":25},"name":"TrieBackendStorage","qualname":"::backend::Backend::TrieBackendStorage","value":"type TrieBackendStorage: TrieBackendStorage<H>;","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Type of trie backend storage.\n","sig":null,"attributes":[{"value":"/ Type of trie backend storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45546,"byte_end":45579,"line_start":45,"line_end":45,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45697,"byte_end":45704,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"storage","qualname":"::backend::Backend::storage","value":"pub fn storage(&Self, &[u8]) -> Result<Option<StorageValue>, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get keyed storage or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed storage or None if there is nothing associated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45631,"byte_end":45692,"line_start":48,"line_end":48,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45849,"byte_end":45861,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"storage_hash","qualname":"::backend::Backend::storage_hash","value":"pub fn storage_hash(&Self, &[u8]) -> Result<Option<H::Out>, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get keyed storage value hash or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed storage value hash or None if there is nothing associated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45772,"byte_end":45844,"line_start":51,"line_end":51,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46051,"byte_end":46064,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"child_storage","qualname":"::backend::Backend::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8])\n-> Result<Option<StorageValue>, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get keyed child storage or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed child storage or None if there is nothing associated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45979,"byte_end":46046,"line_start":56,"line_end":56,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46249,"byte_end":46267,"line_start":64,"line_end":64,"column_start":5,"column_end":23},"name":"child_storage_hash","qualname":"::backend::Backend::child_storage_hash","value":"pub fn child_storage_hash(&Self, &ChildInfo, &[u8])\n-> Result<Option<H::Out>, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get child keyed storage value hash or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get child keyed storage value hash or None if there is nothing associated.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46166,"byte_end":46244,"line_start":63,"line_end":63,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46478,"byte_end":46492,"line_start":73,"line_end":73,"column_start":5,"column_end":19},"name":"exists_storage","qualname":"::backend::Backend::exists_storage","value":"pub fn exists_storage(&Self, &[u8]) -> Result<bool, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" true if a key exists in storage.\n","sig":null,"attributes":[{"value":"/ true if a key exists in storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46437,"byte_end":46473,"line_start":72,"line_end":72,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46630,"byte_end":46650,"line_start":78,"line_end":78,"column_start":5,"column_end":25},"name":"exists_child_storage","qualname":"::backend::Backend::exists_child_storage","value":"pub fn exists_child_storage(&Self, &ChildInfo, &[u8])\n-> Result<bool, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" true if a key exists in child storage.\n","sig":null,"attributes":[{"value":"/ true if a key exists in child storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46583,"byte_end":46625,"line_start":77,"line_end":77,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46887,"byte_end":46903,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"name":"next_storage_key","qualname":"::backend::Backend::next_storage_key","value":"pub fn next_storage_key(&Self, &[u8])\n-> Result<Option<StorageKey>, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Return the next key in storage in lexicographic order or `None` if there is no value.\n","sig":null,"attributes":[{"value":"/ Return the next key in storage in lexicographic order or `None` if there is no value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46793,"byte_end":46882,"line_start":86,"line_end":86,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47069,"byte_end":47091,"line_start":90,"line_end":90,"column_start":5,"column_end":27},"name":"next_child_storage_key","qualname":"::backend::Backend::next_child_storage_key","value":"pub fn next_child_storage_key(&Self, &ChildInfo, &[u8])\n-> Result<Option<StorageKey>, Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Return the next key in child storage in lexicographic order or `None` if there is no value.\n","sig":null,"attributes":[{"value":"/ Return the next key in child storage in lexicographic order or `None` if there is no value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":46969,"byte_end":47064,"line_start":89,"line_end":89,"column_start":2,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47320,"byte_end":47345,"line_start":98,"line_end":98,"column_start":5,"column_end":30},"name":"apply_to_child_keys_while","qualname":"::backend::Backend::apply_to_child_keys_while","value":"pub fn apply_to_child_keys_while<F: FnMut(&[u8]) ->\n                                 bool>(&Self, &ChildInfo, F)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Retrieve all entries keys of child storage and call `f` for each of those keys.\n Aborts as soon as `f` returns false.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of child storage and call `f` for each of those keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47190,"byte_end":47273,"line_start":96,"line_end":96,"column_start":2,"column_end":85}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47275,"byte_end":47315,"line_start":97,"line_end":97,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47531,"byte_end":47551,"line_start":106,"line_end":106,"column_start":5,"column_end":25},"name":"for_keys_with_prefix","qualname":"::backend::Backend::for_keys_with_prefix","value":"pub fn for_keys_with_prefix<F: FnMut(&[u8]) -> ()>(&Self, &[u8], F)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Retrieve all entries keys which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys which start with the given prefix and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47421,"byte_end":47488,"line_start":104,"line_end":104,"column_start":2,"column_end":69}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47490,"byte_end":47526,"line_start":105,"line_end":105,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47788,"byte_end":47814,"line_start":112,"line_end":112,"column_start":5,"column_end":31},"name":"for_key_values_with_prefix","qualname":"::backend::Backend::for_key_values_with_prefix","value":"pub fn for_key_values_with_prefix<F: FnMut(&[u8], &[u8]) ->\n                                  ()>(&Self, &[u8], F)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Retrieve all entries keys and values of which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys and values of which start with the given prefix and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47664,"byte_end":47745,"line_start":110,"line_end":110,"column_start":2,"column_end":83}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47747,"byte_end":47783,"line_start":111,"line_end":111,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47987,"byte_end":48013,"line_start":117,"line_end":117,"column_start":5,"column_end":31},"name":"for_child_keys_with_prefix","qualname":"::backend::Backend::for_child_keys_with_prefix","value":"pub fn for_child_keys_with_prefix<F: FnMut(&[u8]) ->\n                                  ()>(&Self, &ChildInfo, &[u8], F)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Retrieve all child entries keys which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all child entries keys which start with the given prefix and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47871,"byte_end":47944,"line_start":115,"line_end":115,"column_start":2,"column_end":75}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":47946,"byte_end":47982,"line_start":116,"line_end":116,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48301,"byte_end":48313,"line_start":127,"line_end":127,"column_start":5,"column_end":17},"name":"storage_root","qualname":"::backend::Backend::storage_root","value":"pub fn storage_root<'a,\n                    impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item\n                    =\n                    (&'a [u8],\n                     Option<&'a [u8]>)>>(&Self,\n                                         impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)\n-> (H::Out, Self::Transaction) where H::Out: Ord","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Calculate the storage root, with given delta over what is already stored in\n the backend, and produce a \"transaction\" that can be used to commit.\n Does not include child storage updates.\n","sig":null,"attributes":[{"value":"/ Calculate the storage root, with given delta over what is already stored in","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48098,"byte_end":48177,"line_start":124,"line_end":124,"column_start":2,"column_end":81}},{"value":"/ the backend, and produce a \"transaction\" that can be used to commit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48179,"byte_end":48251,"line_start":125,"line_end":125,"column_start":2,"column_end":74}},{"value":"/ Does not include child storage updates.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48253,"byte_end":48296,"line_start":126,"line_end":126,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48690,"byte_end":48708,"line_start":135,"line_end":135,"column_start":5,"column_end":23},"name":"child_storage_root","qualname":"::backend::Backend::child_storage_root","value":"pub fn child_storage_root<'a,\n                          impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item\n                          =\n                          (&'a [u8],\n                           Option<&'a [u8]>)>>(&Self, &ChildInfo,\n                                               impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)\n-> (H::Out, bool, Self::Transaction) where H::Out: Ord","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Calculate the child storage root, with given delta over what is already stored in\n the backend, and produce a \"transaction\" that can be used to commit. The second argument\n is true if child storage root equals default storage root.\n","sig":null,"attributes":[{"value":"/ Calculate the child storage root, with given delta over what is already stored in","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48442,"byte_end":48527,"line_start":132,"line_end":132,"column_start":2,"column_end":87}},{"value":"/ the backend, and produce a \"transaction\" that can be used to commit. The second argument","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48529,"byte_end":48621,"line_start":133,"line_end":133,"column_start":2,"column_end":94}},{"value":"/ is true if child storage root equals default storage root.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48623,"byte_end":48685,"line_start":134,"line_end":134,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48913,"byte_end":48918,"line_start":142,"line_end":142,"column_start":5,"column_end":10},"name":"pairs","qualname":"::backend::Backend::pairs","value":"pub fn pairs(&Self) -> Vec<(StorageKey, StorageValue)>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get all key/value pairs into a Vec.\n","sig":null,"attributes":[{"value":"/ Get all key/value pairs into a Vec.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48869,"byte_end":48908,"line_start":141,"line_end":141,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49003,"byte_end":49007,"line_start":145,"line_end":145,"column_start":5,"column_end":9},"name":"keys","qualname":"::backend::Backend::keys","value":"pub fn keys(&Self, &[u8]) -> Vec<StorageKey>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get all keys with given prefix\n","sig":null,"attributes":[{"value":"/ Get all keys with given prefix","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":48964,"byte_end":48998,"line_start":144,"line_end":144,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49209,"byte_end":49219,"line_start":152,"line_end":152,"column_start":5,"column_end":15},"name":"child_keys","qualname":"::backend::Backend::child_keys","value":"pub fn child_keys(&Self, &ChildInfo, &[u8]) -> Vec<StorageKey>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get all keys of child storage with given prefix\n","sig":null,"attributes":[{"value":"/ Get all keys of child storage with given prefix","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49153,"byte_end":49204,"line_start":151,"line_end":151,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49456,"byte_end":49471,"line_start":163,"line_end":163,"column_start":5,"column_end":20},"name":"as_trie_backend","qualname":"::backend::Backend::as_trie_backend","value":"pub fn as_trie_backend(&mut Self)\n-> Option<&TrieBackend<Self::TrieBackendStorage, H>>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Try convert into trie backend.\n","sig":null,"attributes":[{"value":"/ Try convert into trie backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49417,"byte_end":49451,"line_start":162,"line_end":162,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49749,"byte_end":49766,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"full_storage_root","qualname":"::backend::Backend::full_storage_root","value":"pub fn full_storage_root<'a,\n                         impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item\n                         = (&'a [u8], Option<&'a [u8]>)>,\n                         impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item\n                         = (&'a [u8], Option<&'a [u8]>)>,\n                         impl Iterator<Item =\n              (&'a ChildInfo,\n               impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>: Iterator<Item\n                         =\n                         (&'a ChildInfo,\n                          impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>>(&Self,\n                                                                                impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>,\n                                                                                impl Iterator<Item =\n              (&'a ChildInfo,\n               impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>)\n-> (H::Out, Self::Transaction) where H::Out: Ord + Encode","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Calculate the storage root, with given delta over what is already stored\n in the backend, and produce a \"transaction\" that can be used to commit.\n Does include child storage updates.\n","sig":null,"attributes":[{"value":"/ Calculate the storage root, with given delta over what is already stored","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49550,"byte_end":49626,"line_start":167,"line_end":167,"column_start":2,"column_end":78}},{"value":"/ in the backend, and produce a \"transaction\" that can be used to commit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49628,"byte_end":49703,"line_start":168,"line_end":168,"column_start":2,"column_end":77}},{"value":"/ Does include child storage updates.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":49705,"byte_end":49744,"line_start":169,"line_end":169,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":50931,"byte_end":50953,"line_start":207,"line_end":207,"column_start":5,"column_end":27},"name":"register_overlay_stats","qualname":"::backend::Backend::register_overlay_stats","value":"pub fn register_overlay_stats(&mut Self, &crate::stats::StateMachineStats)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Register stats from overlay of state machine.","sig":null,"attributes":[{"value":"/ Register stats from overlay of state machine.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":50833,"byte_end":50882,"line_start":204,"line_end":204,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":50884,"byte_end":50887,"line_start":205,"line_end":205,"column_start":2,"column_end":5}},{"value":"/ By default nothing is registered.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":50889,"byte_end":50926,"line_start":206,"line_end":206,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51197,"byte_end":51207,"line_start":213,"line_end":213,"column_start":5,"column_end":15},"name":"usage_info","qualname":"::backend::Backend::usage_info","value":"pub fn usage_info(&Self) -> UsageInfo","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Query backend usage statistics (i/o, memory)","sig":null,"attributes":[{"value":"/ Query backend usage statistics (i/o, memory)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51010,"byte_end":51058,"line_start":209,"line_end":209,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51060,"byte_end":51063,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ Not all implementations are expected to be able to do this. In the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51065,"byte_end":51135,"line_start":211,"line_end":211,"column_start":2,"column_end":72}},{"value":"/ case when they don't, empty statistics is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51137,"byte_end":51192,"line_start":212,"line_end":212,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51264,"byte_end":51268,"line_start":216,"line_end":216,"column_start":5,"column_end":9},"name":"wipe","qualname":"::backend::Backend::wipe","value":"pub fn wipe(&Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Wipe the state database.\n","sig":null,"attributes":[{"value":"/ Wipe the state database.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51231,"byte_end":51259,"line_start":215,"line_end":215,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51374,"byte_end":51380,"line_start":221,"line_end":221,"column_start":5,"column_end":11},"name":"commit","qualname":"::backend::Backend::commit","value":"pub fn commit(&Self, H::Out, Self::Transaction, StorageCollection,\n              ChildStorageCollection) -> Result<(), Self::Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Commit given transaction to storage.\n","sig":null,"attributes":[{"value":"/ Commit given transaction to storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51329,"byte_end":51369,"line_start":220,"line_end":220,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51580,"byte_end":51596,"line_start":232,"line_end":232,"column_start":5,"column_end":21},"name":"read_write_count","qualname":"::backend::Backend::read_write_count","value":"pub fn read_write_count(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get the read/write count of the db\n","sig":null,"attributes":[{"value":"/ Get the read/write count of the db","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51537,"byte_end":51575,"line_start":231,"line_end":231,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51697,"byte_end":51719,"line_start":237,"line_end":237,"column_start":5,"column_end":27},"name":"reset_read_write_count","qualname":"::backend::Backend::reset_read_write_count","value":"pub fn reset_read_write_count(&Self)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get the read/write count of the db\n","sig":null,"attributes":[{"value":"/ Get the read/write count of the db","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51654,"byte_end":51692,"line_start":236,"line_end":236,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51808,"byte_end":51821,"line_start":242,"line_end":242,"column_start":5,"column_end":18},"name":"get_whitelist","qualname":"::backend::Backend::get_whitelist","value":"pub fn get_whitelist(&Self) -> Vec<TrackedStorageKey>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Get the whitelist for tracking db reads/writes\n","sig":null,"attributes":[{"value":"/ Get the whitelist for tracking db reads/writes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51753,"byte_end":51803,"line_start":241,"line_end":241,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51941,"byte_end":51954,"line_start":247,"line_end":247,"column_start":5,"column_end":18},"name":"set_whitelist","qualname":"::backend::Backend::set_whitelist","value":"pub fn set_whitelist(&Self, Vec<TrackedStorageKey>)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Update the whitelist for tracking db reads/writes\n","sig":null,"attributes":[{"value":"/ Update the whitelist for tracking db reads/writes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51883,"byte_end":51936,"line_start":246,"line_end":246,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":52022,"byte_end":52032,"line_start":250,"line_end":250,"column_start":5,"column_end":15},"name":"proof_size","qualname":"::backend::Backend::proof_size","value":"pub fn proof_size(&Self) -> Option<u32>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Estimate proof size\n","sig":null,"attributes":[{"value":"/ Estimate proof size","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":51994,"byte_end":52017,"line_start":249,"line_end":249,"column_start":2,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":137},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54118,"byte_end":54129,"line_start":336,"line_end":336,"column_start":11,"column_end":22},"name":"Consolidate","qualname":"::backend::Consolidate","value":"Consolidate","parent":null,"children":[{"krate":0,"index":138}],"decl_id":null,"docs":" Trait that allows consolidate two transactions together.\n","sig":null,"attributes":[{"value":"/ Trait that allows consolidate two transactions together.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54047,"byte_end":54107,"line_start":335,"line_end":335,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54180,"byte_end":54191,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"consolidate","qualname":"::backend::Consolidate::consolidate","value":"pub fn consolidate(&mut Self, Self)","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Consolidate two transactions into one.\n","sig":null,"attributes":[{"value":"/ Consolidate two transactions into one.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54133,"byte_end":54175,"line_start":337,"line_end":337,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55330,"byte_end":55348,"line_start":387,"line_end":387,"column_start":12,"column_end":30},"name":"BackendRuntimeCode","qualname":"::backend::BackendRuntimeCode","value":"BackendRuntimeCode {  }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" Wrapper to create a [`RuntimeCode`] from a type that implements [`Backend`].\n","sig":null,"attributes":[{"value":"/ Wrapper to create a [`RuntimeCode`] from a type that implements [`Backend`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55214,"byte_end":55294,"line_start":385,"line_end":385,"column_start":1,"column_end":81}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55295,"byte_end":55318,"line_start":386,"line_end":386,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55856,"byte_end":55859,"line_start":404,"line_end":404,"column_start":9,"column_end":12},"name":"new","qualname":"<BackendRuntimeCode>::new","value":"pub fn new(&'a B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55821,"byte_end":55847,"line_start":403,"line_end":403,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":56027,"byte_end":56039,"line_start":412,"line_end":412,"column_start":9,"column_end":21},"name":"runtime_code","qualname":"<BackendRuntimeCode>::runtime_code","value":"pub fn runtime_code(&Self) -> Result<RuntimeCode, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the [`RuntimeCode`] build from the wrapped `backend`.\n","sig":null,"attributes":[{"value":"/ Return the [`RuntimeCode`] build from the wrapped `backend`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55954,"byte_end":56018,"line_start":411,"line_end":411,"column_start":2,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57501,"byte_end":57511,"line_start":30,"line_end":30,"column_start":8,"column_end":18},"name":"new_in_mem","qualname":"::in_memory_backend::new_in_mem","value":"pub fn new_in_mem<H: Hasher>() -> TrieBackend<MemoryDB<H>, H> where\nH::Out: Codec + Ord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty instance of in-memory backend.\n","sig":null,"attributes":[{"value":"/ Create a new empty instance of in-memory backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57440,"byte_end":57493,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57798,"byte_end":57804,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"update","qualname":"<TrieBackend<MemoryDB<H>, H>>::update","value":"pub fn update<T: IntoIterator<Item =\n              (Option<ChildInfo>, StorageCollection)>>(&Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the state, with applied updates\n","sig":null,"attributes":[{"value":"/ Copy the state, with applied updates","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57749,"byte_end":57789,"line_start":42,"line_end":42,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":58026,"byte_end":58032,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"insert","qualname":"<TrieBackend<MemoryDB<H>, H>>::insert","value":"pub fn insert<T: IntoIterator<Item =\n              (Option<ChildInfo>, StorageCollection)>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Insert values into backend trie.\n","sig":null,"attributes":[{"value":"/ Insert values into backend trie.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57981,"byte_end":58017,"line_start":54,"line_end":54,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":58576,"byte_end":58590,"line_start":74,"line_end":74,"column_start":9,"column_end":23},"name":"update_backend","qualname":"<TrieBackend<MemoryDB<H>, H>>::update_backend","value":"pub fn update_backend(&Self, H::Out, MemoryDB<H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge trie nodes into this backend.\n","sig":null,"attributes":[{"value":"/ Merge trie nodes into this backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":58528,"byte_end":58567,"line_start":73,"line_end":73,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":58847,"byte_end":58864,"line_start":81,"line_end":81,"column_start":9,"column_end":26},"name":"apply_transaction","qualname":"<TrieBackend<MemoryDB<H>, H>>::apply_transaction","value":"pub fn apply_transaction(&mut Self, H::Out, MemoryDB<H>)","parent":null,"children":[],"decl_id":null,"docs":" Apply the given transaction to this backend and set the root to the given value.\n","sig":null,"attributes":[{"value":"/ Apply the given transaction to this backend and set the root to the given value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":58754,"byte_end":58838,"line_start":80,"line_end":80,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59061,"byte_end":59063,"line_start":87,"line_end":87,"column_start":9,"column_end":11},"name":"eq","qualname":"<TrieBackend<MemoryDB<H>, H>>::eq","value":"pub fn eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare with another in-memory backend.\n","sig":null,"attributes":[{"value":"/ Compare with another in-memory backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59009,"byte_end":59052,"line_start":86,"line_end":86,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107636,"byte_end":107646,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"BuildCache","qualname":"::changes_trie::build_cache::BuildCache","value":"BuildCache {  }","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" Changes trie build cache.","sig":null,"attributes":[{"value":"/ Changes trie build cache.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":106961,"byte_end":106990,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":106991,"byte_end":106994,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Helps to avoid read of changes tries from the database when digest trie","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":106995,"byte_end":107070,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ is built. It holds changed keys for every block (indexed by changes trie","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107071,"byte_end":107147,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ root) that could be referenced by future digest items. For digest entries","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107148,"byte_end":107225,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ it also holds keys covered by this digest. Entries for top level digests","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107226,"byte_end":107302,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are never created, because they'll never be used to build other digests.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107303,"byte_end":107379,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107380,"byte_end":107383,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Entries are pruned from the cache once digest block that is using this entry","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107384,"byte_end":107464,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ is inserted (because digest block will includes all keys from this entry).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107465,"byte_end":107543,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ When there's a fork, entries are pruned when first changes trie is inserted.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":107544,"byte_end":107624,"line_start":35,"line_end":35,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2984},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108381,"byte_end":108395,"line_start":50,"line_end":50,"column_start":2,"column_end":16},"name":"CacheBuildData","qualname":"::changes_trie::build_cache::CacheAction::CacheBuildData","value":"CacheAction::CacheBuildData(CachedBuildData<H, N>)","parent":{"krate":0,"index":2981},"children":[],"decl_id":null,"docs":" Cache data that has been collected when CT has been built.\n","sig":null,"attributes":[{"value":"/ Cache data that has been collected when CT has been built.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108317,"byte_end":108379,"line_start":49,"line_end":49,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2987},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108465,"byte_end":108470,"line_start":52,"line_end":52,"column_start":2,"column_end":7},"name":"Clear","qualname":"::changes_trie::build_cache::CacheAction::Clear","value":"CacheAction::Clear","parent":{"krate":0,"index":2981},"children":[],"decl_id":null,"docs":" Clear cache from all existing entries.\n","sig":null,"attributes":[{"value":"/ Clear cache from all existing entries.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108421,"byte_end":108463,"line_start":51,"line_end":51,"column_start":2,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":2981},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108296,"byte_end":108307,"line_start":48,"line_end":48,"column_start":10,"column_end":21},"name":"CacheAction","qualname":"::changes_trie::build_cache::CacheAction","value":"pub enum CacheAction<H, N> { CacheBuildData(CachedBuildData<H, N>), Clear, }","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2987}],"decl_id":null,"docs":" The action to perform when block-with-changes-trie is imported.\n","sig":null,"attributes":[{"value":"/ The action to perform when block-with-changes-trie is imported.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108191,"byte_end":108258,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3001},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108578,"byte_end":108593,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"CachedBuildData","qualname":"::changes_trie::build_cache::CachedBuildData","value":"CachedBuildData {  }","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007}],"decl_id":null,"docs":" The data that has been cached during changes trie building.\n","sig":null,"attributes":[{"value":"/ The data that has been cached during changes trie building.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":108475,"byte_end":108538,"line_start":55,"line_end":55,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109467,"byte_end":109470,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"name":"new","qualname":"<BuildCache<H, N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new changes trie build cache.\n","sig":null,"attributes":[{"value":"/ Create new changes trie build cache.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109418,"byte_end":109458,"line_start":85,"line_end":85,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109646,"byte_end":109649,"line_start":94,"line_end":94,"column_start":9,"column_end":12},"name":"get","qualname":"<BuildCache<H, N>>::get","value":"pub fn get(&Self, &H)\n-> Option<&HashMap<Option<PrefixedStorageKey>, HashSet<StorageKey>>>","parent":null,"children":[],"decl_id":null,"docs":" Get cached changed keys for changes trie with given root.\n","sig":null,"attributes":[{"value":"/ Get cached changed keys for changes trie with given root.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109576,"byte_end":109637,"line_start":93,"line_end":93,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109913,"byte_end":109930,"line_start":100,"line_end":100,"column_start":9,"column_end":26},"name":"with_changed_keys","qualname":"<BuildCache<H, N>>::with_changed_keys","value":"pub fn with_changed_keys(&Self, &H,\n                         &mut dyn\n                              FnMut(&HashMap<Option<PrefixedStorageKey>,\n                                             HashSet<StorageKey>>) -> ())\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Execute given functor with cached entry for given block.\n Returns true if the functor has been called and false otherwise.\n","sig":null,"attributes":[{"value":"/ Execute given functor with cached entry for given block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109774,"byte_end":109834,"line_start":98,"line_end":98,"column_start":2,"column_end":62}},{"value":"/ Returns true if the functor has been called and false otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109836,"byte_end":109904,"line_start":99,"line_end":99,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":110223,"byte_end":110230,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"perform","qualname":"<BuildCache<H, N>>::perform","value":"pub fn perform(&mut Self, CacheAction<H, N>)","parent":null,"children":[],"decl_id":null,"docs":" Insert data into cache.\n","sig":null,"attributes":[{"value":"/ Insert data into cache.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":110187,"byte_end":110214,"line_start":114,"line_end":114,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130013,"byte_end":130024,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"key_changes","qualname":"::changes_trie::changes_iterator::key_changes","value":"pub fn key_changes<'a, H: Hasher,\n                   Number: BlockNumber>(ConfigurationRange,\n                                        &'a dyn Storage<H, Number>, Number,\n                                        &'a AnchorBlockId<H::Out, Number>,\n                                        Number,\n                                        Option<&'a PrefixedStorageKey>,\n                                        &'a [u8])\n-> Result<DrilldownIterator, String>","parent":null,"children":[],"decl_id":null,"docs":" Return changes of given key at given blocks range.\n `max` is the number of best known block.\n Changes are returned in descending order (i.e. last block comes first).\n","sig":null,"attributes":[{"value":"/ Return changes of given key at given blocks range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129830,"byte_end":129884,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/ `max` is the number of best known block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129885,"byte_end":129929,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/ Changes are returned in descending order (i.e. last block comes first).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129930,"byte_end":130005,"line_start":38,"line_end":38,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130974,"byte_end":130991,"line_start":78,"line_end":78,"column_start":8,"column_end":25},"name":"key_changes_proof","qualname":"::changes_trie::changes_iterator::key_changes_proof","value":"pub fn key_changes_proof<'a, H: Hasher,\n                         Number: BlockNumber>(ConfigurationRange,\n                                              &dyn Storage<H, Number>, Number,\n                                              &AnchorBlockId<H::Out, Number>,\n                                              Number,\n                                              Option<&PrefixedStorageKey>,\n                                              &[u8])\n-> Result<Vec<Vec<u8>>, String> where H::Out: Codec","parent":null,"children":[],"decl_id":null,"docs":" Returns proof of changes of given key at given blocks range.\n `max` is the number of best known block.\n","sig":null,"attributes":[{"value":"/ Returns proof of changes of given key at given blocks range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130857,"byte_end":130921,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ `max` is the number of best known block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130922,"byte_end":130966,"line_start":77,"line_end":77,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":132184,"byte_end":132207,"line_start":125,"line_end":125,"column_start":8,"column_end":31},"name":"key_changes_proof_check","qualname":"::changes_trie::changes_iterator::key_changes_proof_check","value":"pub fn key_changes_proof_check<'a, H: Hasher,\n                               Number: BlockNumber>(ConfigurationRange,\n                                                    &dyn\n                                                     RootsStorage<H, Number>,\n                                                    Vec<Vec<u8>>, Number,\n                                                    &AnchorBlockId<H::Out,\n                                                                   Number>,\n                                                    Number,\n                                                    Option<&PrefixedStorageKey>,\n                                                    &[u8])\n-> Result<Vec<(Number, u32)>, String> where H::Out: Encode","parent":null,"children":[],"decl_id":null,"docs":" Check key changes proof and return changes of the key at given blocks range.\n `max` is the number of best known block.\n Changes are returned in descending order (i.e. last block comes first).\n","sig":null,"attributes":[{"value":"/ Check key changes proof and return changes of the key at given blocks range.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":131975,"byte_end":132055,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ `max` is the number of best known block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":132056,"byte_end":132100,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/ Changes are returned in descending order (i.e. last block comes first).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":132101,"byte_end":132176,"line_start":124,"line_end":124,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":542},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":132792,"byte_end":132823,"line_start":148,"line_end":148,"column_start":8,"column_end":39},"name":"key_changes_proof_check_with_db","qualname":"::changes_trie::changes_iterator::key_changes_proof_check_with_db","value":"pub fn key_changes_proof_check_with_db<'a, H: Hasher,\n                                       Number: BlockNumber>(ConfigurationRange,\n                                                            &dyn\n                                                             RootsStorage<H,\n                                                                          Number>,\n                                                            &InMemoryStorage<H,\n                                                                             Number>,\n                                                            Number,\n                                                            &AnchorBlockId<H::Out,\n                                                                           Number>,\n                                                            Number,\n                                                            Option<&PrefixedStorageKey>,\n                                                            &[u8])\n-> Result<Vec<(Number, u32)>, String> where H::Out: Encode","parent":null,"children":[],"decl_id":null,"docs":" Similar to the `key_changes_proof_check` function, but works with prepared proof storage.\n","sig":null,"attributes":[{"value":"/ Similar to the `key_changes_proof_check` function, but works with prepared proof storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":132691,"byte_end":132784,"line_start":147,"line_end":147,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":138055,"byte_end":138072,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"DrilldownIterator","qualname":"::changes_trie::changes_iterator::DrilldownIterator","value":"DrilldownIterator {  }","parent":null,"children":[{"krate":0,"index":584}],"decl_id":null,"docs":" Exploring drilldown operator.\n","sig":null,"attributes":[{"value":"/ Exploring drilldown operator.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":138010,"byte_end":138043,"line_start":311,"line_end":311,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":729},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/prune.rs","byte_start":156407,"byte_end":156412,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"prune","qualname":"::changes_trie::prune::prune","value":"pub fn prune<H: Hasher, Number: BlockNumber, F: FnMut(H::Out) ->\n             ()>(&dyn Storage<H, Number>, Number, Number,\n                 &AnchorBlockId<H::Out, Number>, F) where H::Out: Codec","parent":null,"children":[],"decl_id":null,"docs":" Prune obsolete changes tries. Pruning happens at the same block, where highest\n level digest is created. Pruning guarantees to save changes tries for last\n `min_blocks_to_keep` blocks. We only prune changes tries at `max_digest_interval`\n ranges.\n","sig":null,"attributes":[{"value":"/ Prune obsolete changes tries. Pruning happens at the same block, where highest","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/prune.rs","byte_start":156140,"byte_end":156222,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ level digest is created. Pruning guarantees to save changes tries for last","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/prune.rs","byte_start":156223,"byte_end":156301,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ `min_blocks_to_keep` blocks. We only prune changes tries at `max_digest_interval`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/prune.rs","byte_start":156302,"byte_end":156387,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ ranges.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/prune.rs","byte_start":156388,"byte_end":156399,"line_start":34,"line_end":34,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":162602,"byte_end":162617,"line_start":38,"line_end":38,"column_start":12,"column_end":27},"name":"InMemoryStorage","qualname":"::changes_trie::storage::InMemoryStorage","value":"InMemoryStorage {  }","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" In-memory implementation of changes trie storage.\n","sig":null,"attributes":[{"value":"/ In-memory implementation of changes trie storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":162537,"byte_end":162590,"line_start":37,"line_end":37,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163216,"byte_end":163223,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"with_db","qualname":"<InMemoryStorage<H, Number>>::with_db","value":"pub fn with_db(MemoryDB<H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates storage from given in-memory database.\n","sig":null,"attributes":[{"value":"/ Creates storage from given in-memory database.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163157,"byte_end":163207,"line_start":55,"line_end":55,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163435,"byte_end":163438,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"new","qualname":"<InMemoryStorage<H, Number>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates storage with empty database.\n","sig":null,"attributes":[{"value":"/ Creates storage with empty database.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163386,"byte_end":163426,"line_start":66,"line_end":66,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163538,"byte_end":163548,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"name":"with_proof","qualname":"<InMemoryStorage<H, Number>>::with_proof","value":"pub fn with_proof(Vec<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates storage with given proof.\n","sig":null,"attributes":[{"value":"/ Creates storage with given proof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163492,"byte_end":163529,"line_start":71,"line_end":71,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163791,"byte_end":163800,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"name":"cache_mut","qualname":"<InMemoryStorage<H, Number>>::cache_mut","value":"pub fn cache_mut(&mut Self) -> &mut BuildCache<H::Out, Number>","parent":null,"children":[],"decl_id":null,"docs":" Get mutable cache reference.\n","sig":null,"attributes":[{"value":"/ Get mutable cache reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163750,"byte_end":163782,"line_start":82,"line_end":82,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163922,"byte_end":163933,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"name":"with_blocks","qualname":"<InMemoryStorage<H, Number>>::with_blocks","value":"pub fn with_blocks(Vec<(Number, H::Out)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the storage with given blocks.\n","sig":null,"attributes":[{"value":"/ Create the storage with given blocks.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163872,"byte_end":163913,"line_start":87,"line_end":87,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":165784,"byte_end":165790,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"insert","qualname":"<InMemoryStorage<H, Number>>::insert","value":"pub fn insert(&Self, Number, H::Out, MemoryDB<H>)","parent":null,"children":[],"decl_id":null,"docs":" Insert changes trie for given block.\n","sig":null,"attributes":[{"value":"/ Insert changes trie for given block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":165735,"byte_end":165775,"line_start":158,"line_end":158,"column_start":2,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":981},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":65976,"byte_end":65987,"line_start":89,"line_end":89,"column_start":11,"column_end":22},"name":"BlockNumber","qualname":"::changes_trie::BlockNumber","value":"BlockNumber: Send + Sync + 'static + std::fmt::Display + Clone + From<u32> + TryInto<u32> +\nOne + Zero + PartialEq + Ord + std::hash::Hash + std::ops::Add<Self, Output =\nSelf> + ::std::ops::Sub<Self, Output = Self> + std::ops::Mul<Self, Output =\nSelf> + ::std::ops::Div<Self, Output = Self> + std::ops::Rem<Self, Output =\nSelf> + std::ops::AddAssign<Self> + num_traits::CheckedMul +\nnum_traits::CheckedSub + Decode + Encode","parent":null,"children":[],"decl_id":null,"docs":" Requirements for block number that can be used with changes tries.\n","sig":null,"attributes":[{"value":"/ Requirements for block number that can be used with changes tries.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":65895,"byte_end":65965,"line_start":88,"line_end":88,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3198},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66960,"byte_end":66973,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"AnchorBlockId","qualname":"::changes_trie::AnchorBlockId","value":"AnchorBlockId { hash, number }","parent":null,"children":[{"krate":0,"index":3201},{"krate":0,"index":3202}],"decl_id":null,"docs":" Block identifier that could be used to determine fork of this block.\n","sig":null,"attributes":[{"value":"/ Block identifier that could be used to determine fork of this block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66859,"byte_end":66931,"line_start":119,"line_end":119,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3201},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67050,"byte_end":67054,"line_start":123,"line_end":123,"column_start":6,"column_end":10},"name":"hash","qualname":"::changes_trie::AnchorBlockId::hash","value":"Hash","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Hash of this block.\n","sig":null,"attributes":[{"value":"/ Hash of this block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67021,"byte_end":67044,"line_start":122,"line_end":122,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3202},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67094,"byte_end":67100,"line_start":125,"line_end":125,"column_start":6,"column_end":12},"name":"number","qualname":"::changes_trie::AnchorBlockId::number","value":"Number","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":" Number of this block.\n","sig":null,"attributes":[{"value":"/ Number of this block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67063,"byte_end":67088,"line_start":124,"line_end":124,"column_start":2,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67163,"byte_end":67168,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"State","qualname":"::changes_trie::State","value":"State { config, zero, storage }","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990}],"decl_id":null,"docs":" Changes tries state at some block.\n","sig":null,"attributes":[{"value":"/ Changes tries state at some block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67113,"byte_end":67151,"line_start":128,"line_end":128,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67241,"byte_end":67247,"line_start":131,"line_end":131,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::State::config","value":"sp_core::ChangesTrieConfiguration","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Configuration that is active at given block.\n","sig":null,"attributes":[{"value":"/ Configuration that is active at given block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67187,"byte_end":67235,"line_start":130,"line_end":130,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67503,"byte_end":67507,"line_start":135,"line_end":135,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::State::zero","value":"Number","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Configuration activation block number. Zero if it is the first configuration on the chain,\n or number of the block that have emit NewConfiguration signal (thus activating configuration\n starting from the **next** block).\n","sig":null,"attributes":[{"value":"/ Configuration activation block number. Zero if it is the first configuration on the chain,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67265,"byte_end":67359,"line_start":132,"line_end":132,"column_start":2,"column_end":96}},{"value":"/ or number of the block that have emit NewConfiguration signal (thus activating configuration","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67361,"byte_end":67457,"line_start":133,"line_end":133,"column_start":2,"column_end":98}},{"value":"/ starting from the **next** block).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67459,"byte_end":67497,"line_start":134,"line_end":134,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":990},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67571,"byte_end":67578,"line_start":137,"line_end":137,"column_start":6,"column_end":13},"name":"storage","qualname":"::changes_trie::State::storage","value":"&'a (dyn changes_trie::Storage<H, Number> + 'a)","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Underlying changes tries storage reference.\n","sig":null,"attributes":[{"value":"/ Underlying changes tries storage reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67518,"byte_end":67565,"line_start":136,"line_end":136,"column_start":2,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":991},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67693,"byte_end":67705,"line_start":141,"line_end":141,"column_start":11,"column_end":23},"name":"RootsStorage","qualname":"::changes_trie::RootsStorage","value":"RootsStorage<H: Hasher, Number: BlockNumber>: Send + Sync","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"decl_id":null,"docs":" Changes trie storage. Provides access to trie roots and trie nodes.\n","sig":null,"attributes":[{"value":"/ Changes trie storage. Provides access to trie roots and trie nodes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67611,"byte_end":67682,"line_start":140,"line_end":140,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67801,"byte_end":67813,"line_start":143,"line_end":143,"column_start":5,"column_end":17},"name":"build_anchor","qualname":"::changes_trie::RootsStorage::build_anchor","value":"pub fn build_anchor(&Self, H::Out)\n-> Result<AnchorBlockId<H::Out, Number>, String>","parent":{"krate":0,"index":991},"children":[],"decl_id":null,"docs":" Resolve hash of the block into anchor.\n","sig":null,"attributes":[{"value":"/ Resolve hash of the block into anchor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67754,"byte_end":67796,"line_start":142,"line_end":142,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68053,"byte_end":68057,"line_start":146,"line_end":146,"column_start":5,"column_end":9},"name":"root","qualname":"::changes_trie::RootsStorage::root","value":"pub fn root(&Self, &AnchorBlockId<H::Out, Number>, Number)\n-> Result<Option<H::Out>, String>","parent":{"krate":0,"index":991},"children":[],"decl_id":null,"docs":" Get changes trie root for the block with given number which is an ancestor (or the block\n itself) of the anchor_block (i.e. anchor_block.number >= block).\n","sig":null,"attributes":[{"value":"/ Get changes trie root for the block with given number which is an ancestor (or the block","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67886,"byte_end":67978,"line_start":144,"line_end":144,"column_start":2,"column_end":94}},{"value":"/ itself) of the anchor_block (i.e. anchor_block.number >= block).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67980,"byte_end":68048,"line_start":145,"line_end":145,"column_start":2,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":996},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68240,"byte_end":68247,"line_start":150,"line_end":150,"column_start":11,"column_end":18},"name":"Storage","qualname":"::changes_trie::Storage","value":"Storage<H: Hasher, Number: BlockNumber>: RootsStorage<H, Number>","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001}],"decl_id":null,"docs":" Changes trie storage. Provides access to trie roots and trie nodes.\n","sig":null,"attributes":[{"value":"/ Changes trie storage. Provides access to trie roots and trie nodes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68158,"byte_end":68229,"line_start":149,"line_end":149,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68369,"byte_end":68385,"line_start":152,"line_end":152,"column_start":5,"column_end":21},"name":"as_roots_storage","qualname":"::changes_trie::Storage::as_roots_storage","value":"pub fn as_roots_storage(&Self) -> &dyn RootsStorage<H, Number>","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":" Casts from self reference to RootsStorage reference.\n","sig":null,"attributes":[{"value":"/ Casts from self reference to RootsStorage reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68308,"byte_end":68364,"line_start":151,"line_end":151,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68587,"byte_end":68611,"line_start":155,"line_end":155,"column_start":5,"column_end":29},"name":"with_cached_changed_keys","qualname":"::changes_trie::Storage::with_cached_changed_keys","value":"pub fn with_cached_changed_keys(&Self, &H::Out,\n                                &mut dyn\n                                     FnMut(&HashMap<Option<PrefixedStorageKey>,\n                                                    HashSet<StorageKey>>) ->\n                                     ()) -> bool","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":" Execute given functor with cached entry for given trie root.\n Returns true if the functor has been called (cache entry exists) and false otherwise.\n","sig":null,"attributes":[{"value":"/ Execute given functor with cached entry for given trie root.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68427,"byte_end":68491,"line_start":153,"line_end":153,"column_start":2,"column_end":66}},{"value":"/ Returns true if the functor has been called (cache entry exists) and false otherwise.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68493,"byte_end":68582,"line_start":154,"line_end":154,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68763,"byte_end":68766,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"get","qualname":"::changes_trie::Storage::get","value":"pub fn get(&Self, &H::Out, Prefix) -> Result<Option<DBValue>, String>","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":" Get a trie node.\n","sig":null,"attributes":[{"value":"/ Get a trie node.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68738,"byte_end":68758,"line_start":160,"line_end":160,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3207},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69445,"byte_end":69463,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"ConfigurationRange","qualname":"::changes_trie::ConfigurationRange","value":"ConfigurationRange { config, zero, end }","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212}],"decl_id":null,"docs":" Blocks range where configuration has been constant.\n","sig":null,"attributes":[{"value":"/ Blocks range where configuration has been constant.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69361,"byte_end":69416,"line_start":178,"line_end":178,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3210},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69505,"byte_end":69511,"line_start":182,"line_end":182,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::ConfigurationRange::config","value":"&'a sp_core::ChangesTrieConfiguration","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":" Active configuration.\n","sig":null,"attributes":[{"value":"/ Active configuration.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69474,"byte_end":69499,"line_start":181,"line_end":181,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3211},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69634,"byte_end":69638,"line_start":184,"line_end":184,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::ConfigurationRange::zero","value":"N","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":" Zero block of this configuration. The configuration is active starting from the next block.\n","sig":null,"attributes":[{"value":"/ Zero block of this configuration. The configuration is active starting from the next block.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69533,"byte_end":69628,"line_start":183,"line_end":183,"column_start":2,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":3212},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69744,"byte_end":69747,"line_start":186,"line_end":186,"column_start":6,"column_end":9},"name":"end","qualname":"::changes_trie::ConfigurationRange::end","value":"std::option::Option<N>","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":" End block of this configuration. It is the last block where configuration has been active.\n","sig":null,"attributes":[{"value":"/ End block of this configuration. It is the last block where configuration has been active.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69644,"byte_end":69738,"line_start":185,"line_end":185,"column_start":2,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69863,"byte_end":69866,"line_start":191,"line_end":191,"column_start":9,"column_end":12},"name":"new","qualname":"<State>::new","value":"pub fn new(Configuration, Number, &'a dyn Storage<H, Number>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create state with given config and storage.\n","sig":null,"attributes":[{"value":"/ Create state with given config and storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69807,"byte_end":69854,"line_start":190,"line_end":190,"column_start":2,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1025},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":70263,"byte_end":70277,"line_start":215,"line_end":215,"column_start":8,"column_end":22},"name":"disabled_state","qualname":"::changes_trie::disabled_state","value":"pub fn disabled_state<'a, H, Number>() -> Option<State>","parent":null,"children":[],"decl_id":null,"docs":" Create state where changes tries are disabled.\n","sig":null,"attributes":[{"value":"/ Create state where changes tries are disabled.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":70205,"byte_end":70255,"line_start":214,"line_end":214,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1045},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177700,"byte_end":177705,"line_start":25,"line_end":25,"column_start":11,"column_end":16},"name":"Error","qualname":"::error::Error","value":"Error: 'static + fmt::Debug + fmt::Display + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" State Machine Error bound.","sig":null,"attributes":[{"value":"/ State Machine Error bound.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177583,"byte_end":177613,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177614,"byte_end":177617,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This should reflect Wasm error type bound for future compatibility.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177618,"byte_end":177689,"line_start":24,"line_end":24,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3230},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178318,"byte_end":178325,"line_start":39,"line_end":39,"column_start":2,"column_end":9},"name":"Backend","qualname":"::error::ExecutionError::Backend","value":"ExecutionError::Backend(crate::DefaultError)","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Backend error {0:?}\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178286,"byte_end":178314,"line_start":38,"line_end":38,"column_start":30,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178430,"byte_end":178451,"line_start":42,"line_end":42,"column_start":2,"column_end":23},"name":"CodeEntryDoesNotExist","qualname":"::error::ExecutionError::CodeEntryDoesNotExist","value":"ExecutionError::CodeEntryDoesNotExist","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"`:code` entry does not exist in storage\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178378,"byte_end":178426,"line_start":41,"line_end":41,"column_start":30,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3235},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178520,"byte_end":178541,"line_start":45,"line_end":45,"column_start":2,"column_end":23},"name":"UnableToGenerateProof","qualname":"::error::ExecutionError::UnableToGenerateProof","value":"ExecutionError::UnableToGenerateProof","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to generate proof\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178483,"byte_end":178516,"line_start":44,"line_end":44,"column_start":30,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3237},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178609,"byte_end":178621,"line_start":48,"line_end":48,"column_start":2,"column_end":14},"name":"InvalidProof","qualname":"::error::ExecutionError::InvalidProof","value":"ExecutionError::InvalidProof","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid execution proof\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178573,"byte_end":178605,"line_start":47,"line_end":47,"column_start":30,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":3226},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178240,"byte_end":178254,"line_start":37,"line_end":37,"column_start":10,"column_end":24},"name":"ExecutionError","qualname":"::error::ExecutionError","value":"pub enum ExecutionError {\n    Backend(crate::DefaultError),\n    CodeEntryDoesNotExist,\n    UnableToGenerateProof,\n    InvalidProof,\n}","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237}],"decl_id":null,"docs":" Externalities Error.","sig":null,"attributes":[{"value":"/ Externalities Error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177836,"byte_end":177860,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177861,"byte_end":177864,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Externalities are not really allowed to have errors, since it's assumed that dependent code","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177865,"byte_end":177960,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ would not be executed unless externalities were available. This is included for completeness,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177961,"byte_end":178058,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ and as a transition away from the pre-existing framework.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178059,"byte_end":178120,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"allow(missing_docs)","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":178153,"byte_end":178175,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":181593,"byte_end":181596,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"Ext","qualname":"::ext::Ext","value":"Ext { id }","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"decl_id":null,"docs":" Wraps a read-only backend, call executor, and current overlayed changes.\n","sig":null,"attributes":[{"value":"/ Wraps a read-only backend, call executor, and current overlayed changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":181505,"byte_end":181581,"line_start":92,"line_end":92,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1174},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182118,"byte_end":182120,"line_start":109,"line_end":109,"column_start":6,"column_end":8},"name":"id","qualname":"::ext::Ext::id","value":"u16","parent":{"krate":0,"index":1165},"children":[],"decl_id":null,"docs":" Pseudo-unique id used for tracing.\n","sig":null,"attributes":[{"value":"/ Pseudo-unique id used for tracing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182074,"byte_end":182112,"line_start":108,"line_end":108,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182867,"byte_end":182870,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"name":"new","qualname":"<Ext>::new","value":"pub fn new(&'a mut OverlayedChanges,\n           &'a mut StorageTransactionCache<B::Transaction, H, N>, &'a B,\n           Option<ChangesTrieState>, Option<&'a mut Extensions>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ext` from overlayed changes and read-only backend\n","sig":null,"attributes":[{"value":"/ Create a new `Ext` from overlayed changes and read-only backend","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182766,"byte_end":182833,"line_start":140,"line_end":140,"column_start":2,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182835,"byte_end":182858,"line_start":141,"line_end":141,"column_start":2,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211339,"byte_end":211356,"line_start":47,"line_end":47,"column_start":12,"column_end":29},"name":"TestExternalities","qualname":"::testing::TestExternalities","value":"TestExternalities { backend, extensions }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"decl_id":null,"docs":" Simple HashMap-based Externalities impl.\n","sig":null,"attributes":[{"value":"/ Simple HashMap-based Externalities impl.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211283,"byte_end":211327,"line_start":46,"line_end":46,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1373},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211677,"byte_end":211684,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"name":"backend","qualname":"::testing::TestExternalities::backend","value":"trie_backend::TrieBackend<memory_db::MemoryDB<H, memory_db::HashKey<H>, std::vec::Vec<u8>, memory_db::malloc_size_of::NoopTracker<std::vec::Vec<u8>>>, H>","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Storage backend.\n","sig":null,"attributes":[{"value":"/ Storage backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211651,"byte_end":211671,"line_start":56,"line_end":56,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1376},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211841,"byte_end":211851,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"name":"extensions","qualname":"::testing::TestExternalities::extensions","value":"sp_externalities::Extensions","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Extensions.\n","sig":null,"attributes":[{"value":"/ Extensions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211820,"byte_end":211835,"line_start":60,"line_end":60,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212029,"byte_end":212032,"line_start":69,"line_end":69,"column_start":9,"column_end":12},"name":"ext","qualname":"<TestExternalities<H, N>>::ext","value":"pub fn ext(&mut Self) -> Ext<, H, N, InMemoryBackend<H>>","parent":null,"children":[],"decl_id":null,"docs":" Get externalities implementation.\n","sig":null,"attributes":[{"value":"/ Get externalities implementation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211983,"byte_end":212020,"line_start":68,"line_end":68,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212478,"byte_end":212481,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"new","qualname":"<TestExternalities<H, N>>::new","value":"pub fn new(Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with storage.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212407,"byte_end":212469,"line_start":86,"line_end":86,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212593,"byte_end":212602,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"name":"new_empty","qualname":"<TestExternalities<H, N>>::new_empty","value":"pub fn new_empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" New empty test externalities.\n","sig":null,"attributes":[{"value":"/ New empty test externalities.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212551,"byte_end":212584,"line_start":91,"line_end":91,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212747,"byte_end":212760,"line_start":97,"line_end":97,"column_start":9,"column_end":22},"name":"new_with_code","qualname":"<TestExternalities<H, N>>::new_with_code","value":"pub fn new_with_code(&[u8], Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with code and storage.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with code and storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":212667,"byte_end":212738,"line_start":96,"line_end":96,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":213746,"byte_end":213763,"line_start":126,"line_end":126,"column_start":9,"column_end":26},"name":"overlayed_changes","qualname":"<TestExternalities<H, N>>::overlayed_changes","value":"pub fn overlayed_changes(&Self) -> &OverlayedChanges","parent":null,"children":[],"decl_id":null,"docs":" Returns the overlayed changes.\n","sig":null,"attributes":[{"value":"/ Returns the overlayed changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":213703,"byte_end":213737,"line_start":125,"line_end":125,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":213887,"byte_end":213911,"line_start":131,"line_end":131,"column_start":9,"column_end":33},"name":"persist_offchain_overlay","qualname":"<TestExternalities<H, N>>::persist_offchain_overlay","value":"pub fn persist_offchain_overlay(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move offchain changes from overlay to the persistent store.\n","sig":null,"attributes":[{"value":"/ Move offchain changes from overlay to the persistent store.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":213815,"byte_end":213878,"line_start":130,"line_end":130,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214086,"byte_end":214097,"line_start":136,"line_end":136,"column_start":9,"column_end":20},"name":"offchain_db","qualname":"<TestExternalities<H, N>>::offchain_db","value":"pub fn offchain_db(&Self) -> TestPersistentOffchainDB","parent":null,"children":[],"decl_id":null,"docs":" A shared reference type around the offchain worker storage.\n","sig":null,"attributes":[{"value":"/ A shared reference type around the offchain worker storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214014,"byte_end":214077,"line_start":135,"line_end":135,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214209,"byte_end":214215,"line_start":141,"line_end":141,"column_start":9,"column_end":15},"name":"insert","qualname":"<TestExternalities<H, N>>::insert","value":"pub fn insert(&mut Self, StorageKey, StorageValue)","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value into backend\n","sig":null,"attributes":[{"value":"/ Insert key/value into backend","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214167,"byte_end":214200,"line_start":140,"line_end":140,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214384,"byte_end":214402,"line_start":146,"line_end":146,"column_start":9,"column_end":27},"name":"register_extension","qualname":"<TestExternalities<H, N>>::register_extension","value":"pub fn register_extension<E: Any + Extension>(&mut Self, E)","parent":null,"children":[],"decl_id":null,"docs":" Registers the given extension for this instance.\n","sig":null,"attributes":[{"value":"/ Registers the given extension for this instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214323,"byte_end":214375,"line_start":145,"line_end":145,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214541,"byte_end":214561,"line_start":151,"line_end":151,"column_start":9,"column_end":29},"name":"changes_trie_storage","qualname":"<TestExternalities<H, N>>::changes_trie_storage","value":"pub fn changes_trie_storage(&mut Self)\n-> &mut ChangesTrieInMemoryStorage<H, N>","parent":null,"children":[],"decl_id":null,"docs":" Get mutable reference to changes trie storage.\n","sig":null,"attributes":[{"value":"/ Get mutable reference to changes trie storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":214482,"byte_end":214532,"line_start":150,"line_end":150,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215419,"byte_end":215429,"line_start":182,"line_end":182,"column_start":9,"column_end":19},"name":"commit_all","qualname":"<TestExternalities<H, N>>::commit_all","value":"pub fn commit_all(&mut Self) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Commit all pending changes to the underlying backend.","sig":null,"attributes":[{"value":"/ Commit all pending changes to the underlying backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215271,"byte_end":215328,"line_start":177,"line_end":177,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215330,"byte_end":215333,"line_start":178,"line_end":178,"column_start":2,"column_end":5}},{"value":"/ # Panic","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215335,"byte_end":215346,"line_start":179,"line_end":179,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215348,"byte_end":215351,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ This will panic if there are still open transactions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215353,"byte_end":215410,"line_start":181,"line_end":181,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215843,"byte_end":215855,"line_start":197,"line_end":197,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<TestExternalities<H, N>>::execute_with","value":"pub fn execute_with<R, impl FnOnce() -> R: FnOnce() ->\n                    R>(&mut Self, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215716,"byte_end":215783,"line_start":194,"line_end":194,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215785,"byte_end":215788,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":215790,"byte_end":215834,"line_start":196,"line_end":196,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216189,"byte_end":216206,"line_start":206,"line_end":206,"column_start":9,"column_end":26},"name":"execute_with_safe","qualname":"<TestExternalities<H, N>>::execute_with_safe","value":"pub fn execute_with_safe<R, impl FnOnce() -> R + UnwindSafe: FnOnce() -> R +\n                         UnwindSafe>(&mut Self,\n                                     impl FnOnce() -> R + UnwindSafe)\n-> Result<R, String>","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216009,"byte_end":216076,"line_start":202,"line_end":202,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216078,"byte_end":216081,"line_start":203,"line_end":203,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure, if no panics occured.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216083,"byte_end":216149,"line_start":204,"line_end":204,"column_start":2,"column_end":68}},{"value":"/ Otherwise, returns `Err`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216151,"byte_end":216180,"line_start":205,"line_end":205,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3261},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":221875,"byte_end":221893,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"BasicExternalities","qualname":"::basic::BasicExternalities","value":"BasicExternalities {  }","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263}],"decl_id":null,"docs":" Simple Map-based Externalities impl.\n","sig":null,"attributes":[{"value":"/ Simple Map-based Externalities impl.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":221806,"byte_end":221846,"line_start":38,"line_end":38,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222026,"byte_end":222029,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"new","qualname":"<BasicExternalities>::new","value":"pub fn new(Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `BasicExternalities`\n","sig":null,"attributes":[{"value":"/ Create a new instance of `BasicExternalities`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":221968,"byte_end":222017,"line_start":46,"line_end":46,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222180,"byte_end":222189,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"new_empty","qualname":"<BasicExternalities>::new_empty","value":"pub fn new_empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" New basic externalities with empty storage.\n","sig":null,"attributes":[{"value":"/ New basic externalities with empty storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222124,"byte_end":222171,"line_start":51,"line_end":51,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222268,"byte_end":222274,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"name":"insert","qualname":"<BasicExternalities>::insert","value":"pub fn insert(&mut Self, StorageKey, StorageValue) -> Option<StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value\n","sig":null,"attributes":[{"value":"/ Insert key/value","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222239,"byte_end":222259,"line_start":56,"line_end":56,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222431,"byte_end":222444,"line_start":62,"line_end":62,"column_start":9,"column_end":22},"name":"into_storages","qualname":"<BasicExternalities>::into_storages","value":"pub fn into_storages(Self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" Consume self and returns inner storages\n","sig":null,"attributes":[{"value":"/ Consume self and returns inner storages","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222379,"byte_end":222422,"line_start":61,"line_end":61,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222667,"byte_end":222687,"line_start":69,"line_end":69,"column_start":9,"column_end":29},"name":"execute_with_storage","qualname":"<BasicExternalities>::execute_with_storage","value":"pub fn execute_with_storage<R, impl FnOnce() -> R: FnOnce() ->\n                            R>(&mut sp_core::storage::Storage,\n                               impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure `f` with the externalities set and initialized with `storage`.","sig":null,"attributes":[{"value":"/ Execute the given closure `f` with the externalities set and initialized with `storage`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222482,"byte_end":222574,"line_start":66,"line_end":66,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222576,"byte_end":222579,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the closure and updates `storage` with all changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":222581,"byte_end":222658,"line_start":68,"line_end":68,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223175,"byte_end":223187,"line_start":91,"line_end":91,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<BasicExternalities>::execute_with","value":"pub fn execute_with<R, impl FnOnce() -> R: FnOnce() ->\n                    R>(&mut Self, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223048,"byte_end":223115,"line_start":88,"line_end":88,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223117,"byte_end":223120,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223122,"byte_end":223166,"line_start":90,"line_end":90,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223336,"byte_end":223346,"line_start":96,"line_end":96,"column_start":9,"column_end":19},"name":"extensions","qualname":"<BasicExternalities>::extensions","value":"pub fn extensions(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" List of active extensions.\n","sig":null,"attributes":[{"value":"/ List of active extensions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223297,"byte_end":223327,"line_start":95,"line_end":95,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223442,"byte_end":223460,"line_start":101,"line_end":101,"column_start":9,"column_end":27},"name":"register_extension","qualname":"<BasicExternalities>::register_extension","value":"pub fn register_extension<impl Extension: Extension>(&mut Self,\n                                                     impl Extension)","parent":null,"children":[],"decl_id":null,"docs":" Register an extension.\n","sig":null,"attributes":[{"value":"/ Register an extension.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223407,"byte_end":223433,"line_start":100,"line_end":100,"column_start":2,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3266},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":270812,"byte_end":270829,"line_start":43,"line_end":43,"column_start":12,"column_end":29},"name":"NoOpenTransaction","qualname":"::overlayed_changes::changeset::NoOpenTransaction","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when trying to commit or rollback while no transaction is open or\n when the runtime is trying to close a transaction started by the client.\n","sig":null,"attributes":[{"value":"/ Error returned when trying to commit or rollback while no transaction is open or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":270585,"byte_end":270669,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ when the runtime is trying to close a transaction started by the client.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":270670,"byte_end":270746,"line_start":40,"line_end":40,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3270},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":270982,"byte_end":270998,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"AlreadyInRuntime","qualname":"::overlayed_changes::changeset::AlreadyInRuntime","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error when calling `enter_runtime` when already being in runtime execution mode.\n","sig":null,"attributes":[{"value":"/ Error when calling `enter_runtime` when already being in runtime execution mode.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":270832,"byte_end":270916,"line_start":45,"line_end":45,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":271145,"byte_end":271157,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"NotInRuntime","qualname":"::overlayed_changes::changeset::NotInRuntime","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error when calling `exit_runtime` when not being in runtime exection mdde.\n","sig":null,"attributes":[{"value":"/ Error when calling `exit_runtime` when not being in runtime exection mdde.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":271001,"byte_end":271079,"line_start":50,"line_end":50,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3301},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":271913,"byte_end":271927,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"OverlayedEntry","qualname":"::overlayed_changes::changeset::OverlayedEntry","value":"OverlayedEntry {  }","parent":null,"children":[{"krate":0,"index":3303}],"decl_id":null,"docs":" An overlay that contains all versions of a value for a specific key.\n","sig":null,"attributes":[{"value":"/ An overlay that contains all versions of a value for a specific key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":271768,"byte_end":271840,"line_start":74,"line_end":74,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3310},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":272599,"byte_end":272611,"line_start":99,"line_end":99,"column_start":12,"column_end":24},"name":"OverlayedMap","qualname":"::overlayed_changes::changeset::OverlayedMap","value":"OverlayedMap {  }","parent":null,"children":[{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316}],"decl_id":null,"docs":" Holds a set of changes with the ability modify them using nested transactions.\n","sig":null,"attributes":[{"value":"/ Holds a set of changes with the ability modify them using nested transactions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":272481,"byte_end":272563,"line_start":97,"line_end":97,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273784,"byte_end":273793,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"value_ref","qualname":"<OverlayedEntry<V>>::value_ref","value":"pub fn value_ref(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" The value as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ The value as seen by the current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273726,"byte_end":273775,"line_start":132,"line_end":132,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273938,"byte_end":273948,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"into_value","qualname":"<OverlayedEntry<V>>::into_value","value":"pub fn into_value(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" The value as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ The value as seen by the current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273880,"byte_end":273929,"line_start":137,"line_end":137,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":274106,"byte_end":274116,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"extrinsics","qualname":"<OverlayedEntry<V>>::extrinsics","value":"pub fn extrinsics(&Self) -> BTreeSet<u32>","parent":null,"children":[],"decl_id":null,"docs":" Unique list of extrinsic indices which modified the value.\n","sig":null,"attributes":[{"value":"/ Unique list of extrinsic indices which modified the value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":274035,"byte_end":274097,"line_start":142,"line_end":142,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275494,"byte_end":275499,"line_start":191,"line_end":191,"column_start":9,"column_end":14},"name":"value","qualname":"<OverlayedEntry<Option<StorageValue>>>::value","value":"pub fn value(&Self) -> Option<&StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" The value as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ The value as seen by the current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275436,"byte_end":275485,"line_start":190,"line_end":190,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276204,"byte_end":276215,"line_start":209,"line_end":209,"column_start":9,"column_end":20},"name":"spawn_child","qualname":"<OverlayedMap<K, V>>::spawn_child","value":"pub fn spawn_child(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new changeset at the same transaction state but without any contents.","sig":null,"attributes":[{"value":"/ Create a new changeset at the same transaction state but without any contents.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275947,"byte_end":276029,"line_start":205,"line_end":205,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276031,"byte_end":276034,"line_start":206,"line_end":206,"column_start":2,"column_end":5}},{"value":"/ This changeset might be created when there are already open transactions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276036,"byte_end":276113,"line_start":207,"line_end":207,"column_start":2,"column_end":79}},{"value":"/ We need to catch up here so that the child is at the same transaction depth.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276115,"byte_end":276195,"line_start":208,"line_end":208,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276556,"byte_end":276564,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<OverlayedMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if no changes at all are contained in the change set.\n","sig":null,"attributes":[{"value":"/ True if no changes at all are contained in the change set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276485,"byte_end":276547,"line_start":219,"line_end":219,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276694,"byte_end":276697,"line_start":225,"line_end":225,"column_start":9,"column_end":12},"name":"get","qualname":"<OverlayedMap<K, V>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&OverlayedEntry<V>> where\nK: sp_std::borrow::Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Get an optional reference to the value stored for the specified key.\n","sig":null,"attributes":[{"value":"/ Get an optional reference to the value stored for the specified key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276613,"byte_end":276685,"line_start":224,"line_end":224,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276968,"byte_end":276971,"line_start":236,"line_end":236,"column_start":9,"column_end":12},"name":"set","qualname":"<OverlayedMap<K, V>>::set","value":"pub fn set(&mut Self, K, V, Option<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Set a new value for the specified key.","sig":null,"attributes":[{"value":"/ Set a new value for the specified key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276841,"byte_end":276883,"line_start":233,"line_end":233,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276885,"byte_end":276888,"line_start":234,"line_end":234,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":276890,"byte_end":276959,"line_start":235,"line_end":235,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277260,"byte_end":277267,"line_start":247,"line_end":247,"column_start":9,"column_end":16},"name":"changes","qualname":"<OverlayedMap<K, V>>::changes","value":"pub fn changes(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a list of all changes as seen by current transaction.\n","sig":null,"attributes":[{"value":"/ Get a list of all changes as seen by current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277190,"byte_end":277251,"line_start":246,"line_end":246,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277449,"byte_end":277461,"line_start":253,"line_end":253,"column_start":9,"column_end":21},"name":"into_changes","qualname":"<OverlayedMap<K, V>>::into_changes","value":"pub fn into_changes(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a list of all changes as seen by current transaction, consumes\n the overlay.\n","sig":null,"attributes":[{"value":"/ Get a list of all changes as seen by current transaction, consumes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277352,"byte_end":277422,"line_start":251,"line_end":251,"column_start":2,"column_end":72}},{"value":"/ the overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277424,"byte_end":277440,"line_start":252,"line_end":252,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277705,"byte_end":277719,"line_start":261,"line_end":261,"column_start":9,"column_end":23},"name":"drain_commited","qualname":"<OverlayedMap<K, V>>::drain_commited","value":"pub fn drain_commited(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume this changeset and return all committed changes.","sig":null,"attributes":[{"value":"/ Consume this changeset and return all committed changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277548,"byte_end":277608,"line_start":257,"line_end":257,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277610,"byte_end":277613,"line_start":258,"line_end":258,"column_start":2,"column_end":5}},{"value":"/ Panics:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277615,"byte_end":277626,"line_start":259,"line_end":259,"column_start":2,"column_end":13}},{"value":"/ Panics if there are open transactions: `transaction_depth() > 0`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277628,"byte_end":277696,"line_start":260,"line_end":260,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278097,"byte_end":278114,"line_start":269,"line_end":269,"column_start":9,"column_end":26},"name":"transaction_depth","qualname":"<OverlayedMap<K, V>>::transaction_depth","value":"pub fn transaction_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current nesting depth of the transaction stack.","sig":null,"attributes":[{"value":"/ Returns the current nesting depth of the transaction stack.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277929,"byte_end":277992,"line_start":266,"line_end":266,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277994,"byte_end":277997,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ A value of zero means that no transaction is open and changes are committed on write.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":277999,"byte_end":278088,"line_start":268,"line_end":268,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278385,"byte_end":278398,"line_start":277,"line_end":277,"column_start":9,"column_end":22},"name":"enter_runtime","qualname":"<OverlayedMap<K, V>>::enter_runtime","value":"pub fn enter_runtime(&mut Self) -> Result<(), AlreadyInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this before transfering control to the runtime.","sig":null,"attributes":[{"value":"/ Call this before transfering control to the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278162,"byte_end":278218,"line_start":273,"line_end":273,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278220,"byte_end":278223,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ This protects all existing transactions from being removed by the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278225,"byte_end":278303,"line_start":275,"line_end":275,"column_start":2,"column_end":80}},{"value":"/ Calling this while already inside the runtime will return an error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278305,"byte_end":278376,"line_start":276,"line_end":276,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278867,"byte_end":278879,"line_start":290,"line_end":290,"column_start":9,"column_end":21},"name":"exit_runtime","qualname":"<OverlayedMap<K, V>>::exit_runtime","value":"pub fn exit_runtime(&mut Self) -> Result<(), NotInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this when control returns from the runtime.","sig":null,"attributes":[{"value":"/ Call this when control returns from the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278658,"byte_end":278710,"line_start":286,"line_end":286,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278712,"byte_end":278715,"line_start":287,"line_end":287,"column_start":2,"column_end":5}},{"value":"/ This commits all dangling transaction left open by the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278717,"byte_end":278784,"line_start":288,"line_end":288,"column_start":2,"column_end":69}},{"value":"/ Calling this while already outside the runtime will return an error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":278786,"byte_end":278858,"line_start":289,"line_end":289,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279838,"byte_end":279855,"line_start":315,"line_end":315,"column_start":9,"column_end":26},"name":"start_transaction","qualname":"<OverlayedMap<K, V>>::start_transaction","value":"pub fn start_transaction(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start a new nested transaction.","sig":null,"attributes":[{"value":"/ Start a new nested transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279446,"byte_end":279481,"line_start":308,"line_end":308,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279483,"byte_end":279486,"line_start":309,"line_end":309,"column_start":2,"column_end":5}},{"value":"/ This allows to either commit or roll back all changes that were made while this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279488,"byte_end":279571,"line_start":310,"line_end":310,"column_start":2,"column_end":85}},{"value":"/ transaction was open. Any transaction must be closed by either `commit_transaction`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279573,"byte_end":279660,"line_start":311,"line_end":311,"column_start":2,"column_end":89}},{"value":"/ or `rollback_transaction` before this overlay can be converted into storage changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279662,"byte_end":279750,"line_start":312,"line_end":312,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279752,"byte_end":279755,"line_start":313,"line_end":313,"column_start":2,"column_end":5}},{"value":"/ Changes made without any open transaction are committed immediately.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279757,"byte_end":279829,"line_start":314,"line_end":314,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280137,"byte_end":280157,"line_start":323,"line_end":323,"column_start":9,"column_end":29},"name":"rollback_transaction","qualname":"<OverlayedMap<K, V>>::rollback_transaction","value":"pub fn rollback_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Rollback the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Rollback the last transaction started by `start_transaction`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279918,"byte_end":279983,"line_start":319,"line_end":319,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279985,"byte_end":279988,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are discarded. Returns an error if","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":279990,"byte_end":280069,"line_start":321,"line_end":321,"column_start":2,"column_end":81}},{"value":"/ there is no open transaction that can be rolled back.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280071,"byte_end":280128,"line_start":322,"line_end":322,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280455,"byte_end":280473,"line_start":331,"line_end":331,"column_start":9,"column_end":27},"name":"commit_transaction","qualname":"<OverlayedMap<K, V>>::commit_transaction","value":"pub fn commit_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Commit the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Commit the last transaction started by `start_transaction`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280240,"byte_end":280303,"line_start":327,"line_end":327,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280305,"byte_end":280308,"line_start":328,"line_end":328,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are committed. Returns an error if","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280310,"byte_end":280389,"line_start":329,"line_end":329,"column_start":2,"column_end":81}},{"value":"/ there is no open transaction that can be committed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":280391,"byte_end":280446,"line_start":330,"line_end":330,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282668,"byte_end":282674,"line_start":392,"line_end":392,"column_start":9,"column_end":15},"name":"modify","qualname":"<OverlayedChangeSet>::modify","value":"pub fn modify<impl Fn() -> StorageValue: Fn() ->\n              StorageValue>(&mut Self, StorageKey, impl Fn() -> StorageValue,\n                            Option<u32>) -> &mut Option<StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference for a value.","sig":null,"attributes":[{"value":"/ Get a mutable reference for a value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282469,"byte_end":282509,"line_start":388,"line_end":388,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282511,"byte_end":282514,"line_start":389,"line_end":389,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282516,"byte_end":282585,"line_start":390,"line_end":390,"column_start":2,"column_end":71}},{"value":"must_use = \"A change was registered, so this value MUST be modified.\"","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282587,"byte_end":282659,"line_start":391,"line_end":391,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":283417,"byte_end":283428,"line_start":419,"line_end":419,"column_start":9,"column_end":20},"name":"clear_where","qualname":"<OverlayedChangeSet>::clear_where","value":"pub fn clear_where<impl Fn(&[u8], &OverlayedValue) -> bool: Fn(&[u8],\n                                                               &OverlayedValue)\n                   ->\n                   bool>(&mut Self, impl Fn(&[u8], &OverlayedValue) -> bool,\n                         Option<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Set all values to deleted which are matched by the predicate.","sig":null,"attributes":[{"value":"/ Set all values to deleted which are matched by the predicate.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":283267,"byte_end":283332,"line_start":416,"line_end":416,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":283334,"byte_end":283337,"line_start":417,"line_end":417,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":283339,"byte_end":283408,"line_start":418,"line_end":418,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":283761,"byte_end":283772,"line_start":430,"line_end":430,"column_start":9,"column_end":20},"name":"next_change","qualname":"<OverlayedChangeSet>::next_change","value":"pub fn next_change(&Self, &[u8]) -> Option<(&[u8], &OverlayedValue)>","parent":null,"children":[],"decl_id":null,"docs":" Get the change that is next to the supplied key.\n","sig":null,"attributes":[{"value":"/ Get the change that is next to the supplied key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":283700,"byte_end":283752,"line_start":429,"line_end":429,"column_start":2,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3325},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":298384,"byte_end":298408,"line_start":26,"line_end":26,"column_start":12,"column_end":36},"name":"OffchainOverlayedChanges","qualname":"::overlayed_changes::offchain::OffchainOverlayedChanges","value":"","parent":null,"children":[],"decl_id":null,"docs":" In-memory storage for offchain workers recoding changes for the actual offchain storage implementation.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers recoding changes for the actual offchain storage implementation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":298232,"byte_end":298339,"line_start":24,"line_end":24,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":298987,"byte_end":298996,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<OffchainOverlayedChanges>::into_iter","value":"pub fn into_iter(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":298908,"byte_end":298978,"line_start":38,"line_end":38,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299188,"byte_end":299192,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"iter","qualname":"<OffchainOverlayedChanges>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299129,"byte_end":299179,"line_start":43,"line_end":43,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299371,"byte_end":299376,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"drain","qualname":"<OffchainOverlayedChanges>::drain","value":"pub fn drain(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Drain all elements of changeset.\n","sig":null,"attributes":[{"value":"/ Drain all elements of changeset.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299326,"byte_end":299362,"line_start":48,"line_end":48,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299570,"byte_end":299576,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"remove","qualname":"<OffchainOverlayedChanges>::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299492,"byte_end":299561,"line_start":53,"line_end":53,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299816,"byte_end":299819,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"name":"set","qualname":"<OffchainOverlayedChanges>::set","value":"pub fn set(&mut Self, &[u8], &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set the value associated with a key under a prefix to the value provided.\n","sig":null,"attributes":[{"value":"/ Set the value associated with a key under a prefix to the value provided.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":299730,"byte_end":299807,"line_start":62,"line_end":62,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":300084,"byte_end":300087,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"name":"get","qualname":"<OffchainOverlayedChanges>::get","value":"pub fn get(&Self, &[u8], &[u8]) -> Option<OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a associated value to the given key in storage with prefix.\n","sig":null,"attributes":[{"value":"/ Obtain a associated value to the given key in storage with prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":300005,"byte_end":300075,"line_start":71,"line_end":71,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":300311,"byte_end":300318,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"overlay","qualname":"<OffchainOverlayedChanges>::overlay","value":"pub fn overlay(&Self)\n-> &OverlayedMap<(Vec<u8>, Vec<u8>), OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Reference to inner change set.\n","sig":null,"attributes":[{"value":"/ Reference to inner change set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":300268,"byte_end":300302,"line_start":77,"line_end":77,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":300456,"byte_end":300467,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"name":"overlay_mut","qualname":"<OffchainOverlayedChanges>::overlay_mut","value":"pub fn overlay_mut(&mut Self)\n-> &mut OverlayedMap<(Vec<u8>, Vec<u8>), OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to inner change set.\n","sig":null,"attributes":[{"value":"/ Mutable reference to inner change set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":300405,"byte_end":300447,"line_start":82,"line_end":82,"column_start":2,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1795},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235112,"byte_end":235122,"line_start":58,"line_end":58,"column_start":10,"column_end":20},"name":"StorageKey","qualname":"::overlayed_changes::StorageKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Storage key.\n","sig":null,"attributes":[{"value":"/ Storage key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235086,"byte_end":235102,"line_start":57,"line_end":57,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1796},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235163,"byte_end":235175,"line_start":61,"line_end":61,"column_start":10,"column_end":22},"name":"StorageValue","qualname":"::overlayed_changes::StorageValue","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Storage value.\n","sig":null,"attributes":[{"value":"/ Storage value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235135,"byte_end":235153,"line_start":60,"line_end":60,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":1797},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235236,"byte_end":235253,"line_start":64,"line_end":64,"column_start":10,"column_end":27},"name":"StorageCollection","qualname":"::overlayed_changes::StorageCollection","value":"Vec<(StorageKey, Option<StorageValue>)>","parent":null,"children":[],"decl_id":null,"docs":" In memory array of storage values.\n","sig":null,"attributes":[{"value":"/ In memory array of storage values.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235188,"byte_end":235226,"line_start":63,"line_end":63,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1798},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235372,"byte_end":235394,"line_start":67,"line_end":67,"column_start":10,"column_end":32},"name":"ChildStorageCollection","qualname":"::overlayed_changes::ChildStorageCollection","value":"Vec<(StorageKey, StorageCollection)>","parent":null,"children":[],"decl_id":null,"docs":" In memory arrays of storage values for multiple child tries.\n","sig":null,"attributes":[{"value":"/ In memory arrays of storage values for multiple child tries.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235298,"byte_end":235362,"line_start":66,"line_end":66,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":1799},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235484,"byte_end":235509,"line_start":70,"line_end":70,"column_start":10,"column_end":35},"name":"OffchainChangesCollection","qualname":"::overlayed_changes::OffchainChangesCollection","value":"Vec<((Vec<u8>, Vec<u8>), OffchainOverlayedChange)>","parent":null,"children":[],"decl_id":null,"docs":" In memory array of storage values.\n","sig":null,"attributes":[{"value":"/ In memory array of storage values.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235436,"byte_end":235474,"line_start":69,"line_end":69,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3350},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236269,"byte_end":236285,"line_start":99,"line_end":99,"column_start":12,"column_end":28},"name":"OverlayedChanges","qualname":"::overlayed_changes::OverlayedChanges","value":"OverlayedChanges {  }","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356}],"decl_id":null,"docs":" The set of changes that are overlaid onto the backend.","sig":null,"attributes":[{"value":"/ The set of changes that are overlaid onto the backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236096,"byte_end":236154,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236155,"byte_end":236158,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ It allows changes to be modified using nestable transactions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236159,"byte_end":236224,"line_start":97,"line_end":97,"column_start":1,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":3364},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236912,"byte_end":236918,"line_start":118,"line_end":118,"column_start":2,"column_end":8},"name":"Insert","qualname":"::overlayed_changes::IndexOperation::Insert","value":"IndexOperation::Insert { extrinsic, offset }","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":" Insert transaction into index.\n","sig":null,"attributes":[{"value":"/ Insert transaction into index.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236876,"byte_end":236910,"line_start":117,"line_end":117,"column_start":2,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":3367},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237080,"byte_end":237085,"line_start":125,"line_end":125,"column_start":2,"column_end":7},"name":"Renew","qualname":"::overlayed_changes::IndexOperation::Renew","value":"IndexOperation::Renew { extrinsic, hash, size }","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":" Renew existing transaction storage.\n","sig":null,"attributes":[{"value":"/ Renew existing transaction storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237039,"byte_end":237078,"line_start":124,"line_end":124,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3363},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236858,"byte_end":236872,"line_start":116,"line_end":116,"column_start":10,"column_end":24},"name":"IndexOperation","qualname":"::overlayed_changes::IndexOperation","value":"pub enum IndexOperation {\n    Insert {\n        extrinsic: u32,\n        offset: u32,\n    },\n    Renew {\n        extrinsic: u32,\n        hash: Vec<u8>,\n        size: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3367}],"decl_id":null,"docs":" Transcation index operation.\n","sig":null,"attributes":[{"value":"/ Transcation index operation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":236792,"byte_end":236824,"line_start":114,"line_end":114,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237467,"byte_end":237481,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"StorageChanges","qualname":"::overlayed_changes::StorageChanges","value":"StorageChanges { main_storage_changes, child_storage_changes, offchain_storage_changes, transaction, transaction_storage_root, changes_trie_transaction, transaction_index_changes }","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814}],"decl_id":null,"docs":" A storage changes structure that can be generated by the data collected in [`OverlayedChanges`].","sig":null,"attributes":[{"value":"/ A storage changes structure that can be generated by the data collected in [`OverlayedChanges`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237241,"byte_end":237341,"line_start":135,"line_end":135,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237342,"byte_end":237345,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This contains all the changes to the storage and transactions to apply theses changes to the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237346,"byte_end":237442,"line_start":137,"line_end":137,"column_start":1,"column_end":97}},{"value":"/ backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237443,"byte_end":237455,"line_start":138,"line_end":138,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":1808},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237622,"byte_end":237642,"line_start":143,"line_end":143,"column_start":6,"column_end":26},"name":"main_storage_changes","qualname":"::overlayed_changes::StorageChanges::main_storage_changes","value":"std::vec::Vec<(std::vec::Vec<u8>, std::option::Option<std::vec::Vec<u8>>)>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" All changes to the main storage.","sig":null,"attributes":[{"value":"/ All changes to the main storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237525,"byte_end":237561,"line_start":140,"line_end":140,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237563,"byte_end":237566,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ A value of `None` means that it was deleted.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237568,"byte_end":237616,"line_start":142,"line_end":142,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1809},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237708,"byte_end":237729,"line_start":145,"line_end":145,"column_start":6,"column_end":27},"name":"child_storage_changes","qualname":"::overlayed_changes::StorageChanges::child_storage_changes","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<(std::vec::Vec<u8>, std::option::Option<std::vec::Vec<u8>>)>)>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" All changes to the child storages.\n","sig":null,"attributes":[{"value":"/ All changes to the child storages.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237664,"byte_end":237702,"line_start":144,"line_end":144,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1810},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237823,"byte_end":237847,"line_start":147,"line_end":147,"column_start":6,"column_end":30},"name":"offchain_storage_changes","qualname":"::overlayed_changes::StorageChanges::offchain_storage_changes","value":"std::vec::Vec<((std::vec::Vec<u8>, std::vec::Vec<u8>), sp_core::offchain::OffchainOverlayedChange)>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Offchain state changes to write to the offchain database.\n","sig":null,"attributes":[{"value":"/ Offchain state changes to write to the offchain database.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237756,"byte_end":237817,"line_start":146,"line_end":146,"column_start":2,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1811},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238172,"byte_end":238183,"line_start":152,"line_end":152,"column_start":6,"column_end":17},"name":"transaction","qualname":"::overlayed_changes::StorageChanges::transaction","value":"Transaction","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" A transaction for the backend that contains all changes from\n [`main_storage_changes`](StorageChanges::main_storage_changes) and from\n [`child_storage_changes`](StorageChanges::child_storage_changes).\n [`offchain_storage_changes`](StorageChanges::offchain_storage_changes).\n","sig":null,"attributes":[{"value":"/ A transaction for the backend that contains all changes from","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237877,"byte_end":237941,"line_start":148,"line_end":148,"column_start":2,"column_end":66}},{"value":"/ [`main_storage_changes`](StorageChanges::main_storage_changes) and from","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":237943,"byte_end":238018,"line_start":149,"line_end":149,"column_start":2,"column_end":77}},{"value":"/ [`child_storage_changes`](StorageChanges::child_storage_changes).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238020,"byte_end":238089,"line_start":150,"line_end":150,"column_start":2,"column_end":71}},{"value":"/ [`offchain_storage_changes`](StorageChanges::offchain_storage_changes).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238091,"byte_end":238166,"line_start":151,"line_end":151,"column_start":2,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1812},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238257,"byte_end":238281,"line_start":154,"line_end":154,"column_start":6,"column_end":30},"name":"transaction_storage_root","qualname":"::overlayed_changes::StorageChanges::transaction_storage_root","value":"<H as hash_db::Hasher>::Out","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" The storage root after applying the transaction.\n","sig":null,"attributes":[{"value":"/ The storage root after applying the transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238199,"byte_end":238251,"line_start":153,"line_end":153,"column_start":2,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238455,"byte_end":238479,"line_start":159,"line_end":159,"column_start":6,"column_end":30},"name":"changes_trie_transaction","qualname":"::overlayed_changes::StorageChanges::changes_trie_transaction","value":"std::option::Option<(memory_db::MemoryDB<H, memory_db::HashKey<H>, std::vec::Vec<u8>, memory_db::malloc_size_of::NoopTracker<std::vec::Vec<u8>>>, changes_trie::build_cache::CacheAction<<H as hash_db::Hasher>::Out, N>)>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Contains the transaction for the backend for the changes trie.","sig":null,"attributes":[{"value":"/ Contains the transaction for the backend for the changes trie.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238292,"byte_end":238358,"line_start":155,"line_end":155,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238360,"byte_end":238363,"line_start":156,"line_end":156,"column_start":2,"column_end":5}},{"value":"/ If changes trie is disabled the value is set to `None`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238365,"byte_end":238424,"line_start":157,"line_end":157,"column_start":2,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238426,"byte_end":238449,"line_start":158,"line_end":158,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1814},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238730,"byte_end":238755,"line_start":166,"line_end":166,"column_start":6,"column_end":31},"name":"transaction_index_changes","qualname":"::overlayed_changes::StorageChanges::transaction_index_changes","value":"std::vec::Vec<overlayed_changes::IndexOperation>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Changes to the transaction index,\n","sig":null,"attributes":[{"value":"/ Changes to the transaction index,","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238662,"byte_end":238699,"line_start":164,"line_end":164,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238701,"byte_end":238724,"line_start":165,"line_end":165,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238933,"byte_end":238943,"line_start":172,"line_end":172,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<StorageChanges<Transaction, H, N>>::into_inner","value":"pub fn into_inner(Self)\n->\n    (StorageCollection, ChildStorageCollection, OffchainChangesCollection,\n     Transaction, H::Out, Option<ChangesTrieTransaction<H, N>>,\n     Vec<IndexOperation>)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct into the inner values\n","sig":null,"attributes":[{"value":"/ Deconstruct into the inner values","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238887,"byte_end":238924,"line_start":171,"line_end":171,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1820},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":239629,"byte_end":239652,"line_start":196,"line_end":196,"column_start":12,"column_end":35},"name":"StorageTransactionCache","qualname":"::overlayed_changes::StorageTransactionCache","value":"StorageTransactionCache {  }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"decl_id":null,"docs":" The storage transaction are calculated as part of the `storage_root` and\n `changes_trie_storage_root`. These transactions can be reused for importing the block into the\n storage. So, we cache them to not require a recomputation of those transactions.\n","sig":null,"attributes":[{"value":"/ The storage transaction are calculated as part of the `storage_root` and","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":239357,"byte_end":239433,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ `changes_trie_storage_root`. These transactions can be reused for importing the block into the","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":239434,"byte_end":239532,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"/ storage. So, we cache them to not require a recomputation of those transactions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":239533,"byte_end":239617,"line_start":195,"line_end":195,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":240536,"byte_end":240541,"line_start":214,"line_end":214,"column_start":9,"column_end":14},"name":"reset","qualname":"<StorageTransactionCache<Transaction, H, N>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the cached transactions.\n","sig":null,"attributes":[{"value":"/ Reset the cached transactions.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":240493,"byte_end":240527,"line_start":213,"line_end":213,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241670,"byte_end":241678,"line_start":254,"line_end":254,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<OverlayedChanges>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether no changes are contained in the top nor in any of the child changes.\n","sig":null,"attributes":[{"value":"/ Whether no changes are contained in the top nor in any of the child changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241581,"byte_end":241661,"line_start":253,"line_end":253,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241843,"byte_end":241865,"line_start":259,"line_end":259,"column_start":9,"column_end":31},"name":"set_collect_extrinsics","qualname":"<OverlayedChanges>::set_collect_extrinsics","value":"pub fn set_collect_extrinsics(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Ask to collect/not to collect extrinsics indices where key(s) has been changed.\n","sig":null,"attributes":[{"value":"/ Ask to collect/not to collect extrinsics indices where key(s) has been changed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241751,"byte_end":241834,"line_start":258,"line_end":258,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242180,"byte_end":242187,"line_start":266,"line_end":266,"column_start":9,"column_end":16},"name":"storage","qualname":"<OverlayedChanges>::storage","value":"pub fn storage(&Self, &[u8]) -> Option<Option<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-Option: None if the key is unknown (i.e. and the query should be referred\n to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose\n value has been set.\n","sig":null,"attributes":[{"value":"/ Returns a double-Option: None if the key is unknown (i.e. and the query should be referred","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241958,"byte_end":242052,"line_start":263,"line_end":263,"column_start":2,"column_end":96}},{"value":"/ to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242054,"byte_end":242146,"line_start":264,"line_end":264,"column_start":2,"column_end":94}},{"value":"/ value has been set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242148,"byte_end":242171,"line_start":265,"line_end":265,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242825,"byte_end":242849,"line_start":281,"line_end":281,"column_start":9,"column_end":33},"name":"value_mut_or_insert_with","qualname":"<OverlayedChanges>::value_mut_or_insert_with","value":"pub fn value_mut_or_insert_with<impl Fn() -> StorageValue: Fn() ->\n                                StorageValue>(&mut Self, &[u8],\n                                              impl Fn() -> StorageValue)\n-> &mut StorageValue","parent":null,"children":[],"decl_id":null,"docs":" Returns mutable reference to current value.\n If there is no value in the overlay, the given callback is used to initiate the value.\n Warning this function registers a change, so the mutable reference MUST be modified.","sig":null,"attributes":[{"value":"/ Returns mutable reference to current value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242437,"byte_end":242484,"line_start":275,"line_end":275,"column_start":2,"column_end":49}},{"value":"/ If there is no value in the overlay, the given callback is used to initiate the value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242486,"byte_end":242576,"line_start":276,"line_end":276,"column_start":2,"column_end":92}},{"value":"/ Warning this function registers a change, so the mutable reference MUST be modified.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242578,"byte_end":242666,"line_start":277,"line_end":277,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242668,"byte_end":242671,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242673,"byte_end":242742,"line_start":279,"line_end":279,"column_start":2,"column_end":71}},{"value":"must_use = \"A change was registered, so this value MUST be modified.\"","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":242744,"byte_end":242816,"line_start":280,"line_end":280,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":243359,"byte_end":243372,"line_start":295,"line_end":295,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<OverlayedChanges>::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8]) -> Option<Option<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-Option: None if the key is unknown (i.e. and the query should be referred\n to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose\n value has been set.\n","sig":null,"attributes":[{"value":"/ Returns a double-Option: None if the key is unknown (i.e. and the query should be referred","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":243137,"byte_end":243231,"line_start":292,"line_end":292,"column_start":2,"column_end":96}},{"value":"/ to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":243233,"byte_end":243325,"line_start":293,"line_end":293,"column_start":2,"column_end":94}},{"value":"/ value has been set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":243327,"byte_end":243350,"line_start":294,"line_end":294,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246606,"byte_end":246623,"line_start":392,"line_end":392,"column_start":9,"column_end":26},"name":"transaction_depth","qualname":"<OverlayedChanges>::transaction_depth","value":"pub fn transaction_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current nesting depth of the transaction stack.","sig":null,"attributes":[{"value":"/ Returns the current nesting depth of the transaction stack.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246438,"byte_end":246501,"line_start":389,"line_end":389,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246503,"byte_end":246506,"line_start":390,"line_end":390,"column_start":2,"column_end":5}},{"value":"/ A value of zero means that no transaction is open and changes are committed on write.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246508,"byte_end":246597,"line_start":391,"line_end":391,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247201,"byte_end":247218,"line_start":405,"line_end":405,"column_start":9,"column_end":26},"name":"start_transaction","qualname":"<OverlayedChanges>::start_transaction","value":"pub fn start_transaction(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start a new nested transaction.","sig":null,"attributes":[{"value":"/ Start a new nested transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246808,"byte_end":246843,"line_start":398,"line_end":398,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246845,"byte_end":246848,"line_start":399,"line_end":399,"column_start":2,"column_end":5}},{"value":"/ This allows to either commit or roll back all changes that where made while this","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246850,"byte_end":246934,"line_start":400,"line_end":400,"column_start":2,"column_end":86}},{"value":"/ transaction was open. Any transaction must be closed by either `rollback_transaction` or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":246936,"byte_end":247028,"line_start":401,"line_end":401,"column_start":2,"column_end":94}},{"value":"/ `commit_transaction` before this overlay can be converted into storage changes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247030,"byte_end":247113,"line_start":402,"line_end":402,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247115,"byte_end":247118,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ Changes made without any open transaction are committed immediately.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247120,"byte_end":247192,"line_start":404,"line_end":404,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247633,"byte_end":247653,"line_start":417,"line_end":417,"column_start":9,"column_end":29},"name":"rollback_transaction","qualname":"<OverlayedChanges>::rollback_transaction","value":"pub fn rollback_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Rollback the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Rollback the last transaction started by `start_transaction`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247414,"byte_end":247479,"line_start":413,"line_end":413,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247481,"byte_end":247484,"line_start":414,"line_end":414,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are discarded. Returns an error if","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247486,"byte_end":247565,"line_start":415,"line_end":415,"column_start":2,"column_end":81}},{"value":"/ there is no open transaction that can be rolled back.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":247567,"byte_end":247624,"line_start":416,"line_end":416,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248285,"byte_end":248303,"line_start":433,"line_end":433,"column_start":9,"column_end":27},"name":"commit_transaction","qualname":"<OverlayedChanges>::commit_transaction","value":"pub fn commit_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Commit the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Commit the last transaction started by `start_transaction`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248070,"byte_end":248133,"line_start":429,"line_end":429,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248135,"byte_end":248138,"line_start":430,"line_end":430,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are committed. Returns an error if there","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248140,"byte_end":248225,"line_start":431,"line_end":431,"column_start":2,"column_end":87}},{"value":"/ is no open transaction that can be committed.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248227,"byte_end":248276,"line_start":432,"line_end":432,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248911,"byte_end":248924,"line_start":448,"line_end":448,"column_start":9,"column_end":22},"name":"enter_runtime","qualname":"<OverlayedChanges>::enter_runtime","value":"pub fn enter_runtime(&mut Self) -> Result<(), AlreadyInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this before transfering control to the runtime.","sig":null,"attributes":[{"value":"/ Call this before transfering control to the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248688,"byte_end":248744,"line_start":444,"line_end":444,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248746,"byte_end":248749,"line_start":445,"line_end":445,"column_start":2,"column_end":5}},{"value":"/ This protects all existing transactions from being removed by the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248751,"byte_end":248829,"line_start":446,"line_end":446,"column_start":2,"column_end":80}},{"value":"/ Calling this while already inside the runtime will return an error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":248831,"byte_end":248902,"line_start":447,"line_end":447,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":249502,"byte_end":249514,"line_start":463,"line_end":463,"column_start":9,"column_end":21},"name":"exit_runtime","qualname":"<OverlayedChanges>::exit_runtime","value":"pub fn exit_runtime(&mut Self) -> Result<(), NotInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this when control returns from the runtime.","sig":null,"attributes":[{"value":"/ Call this when control returns from the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":249301,"byte_end":249353,"line_start":459,"line_end":459,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":249355,"byte_end":249358,"line_start":460,"line_end":460,"column_start":2,"column_end":5}},{"value":"/ This commits all dangling transaction left open by the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":249360,"byte_end":249427,"line_start":461,"line_end":461,"column_start":2,"column_end":69}},{"value":"/ Calling this while outside the runtime will return an error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":249429,"byte_end":249493,"line_start":462,"line_end":462,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250716,"byte_end":250740,"line_start":502,"line_end":502,"column_start":9,"column_end":33},"name":"offchain_drain_committed","qualname":"<OverlayedChanges>::offchain_drain_committed","value":"pub fn offchain_drain_committed(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume all changes (top + children) and return them.","sig":null,"attributes":[{"value":"/ Consume all changes (top + children) and return them.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250504,"byte_end":250561,"line_start":496,"line_end":496,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250563,"byte_end":250566,"line_start":497,"line_end":497,"column_start":2,"column_end":5}},{"value":"/ After calling this function no more changes are contained in this changeset.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250568,"byte_end":250648,"line_start":498,"line_end":498,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250650,"byte_end":250653,"line_start":499,"line_end":499,"column_start":2,"column_end":5}},{"value":"/ Panics:","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250655,"byte_end":250666,"line_start":500,"line_end":500,"column_start":2,"column_end":13}},{"value":"/ Panics if `transaction_depth() > 0`","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250668,"byte_end":250707,"line_start":501,"line_end":501,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250945,"byte_end":250953,"line_start":507,"line_end":507,"column_start":9,"column_end":17},"name":"children","qualname":"<OverlayedChanges>::children","value":"pub fn children(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all child changes as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all child changes as seen by the current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":250858,"byte_end":250936,"line_start":506,"line_end":506,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251202,"byte_end":251209,"line_start":513,"line_end":513,"column_start":9,"column_end":16},"name":"changes","qualname":"<OverlayedChanges>::changes","value":"pub fn changes(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all top changes as been by the current transaction.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all top changes as been by the current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251117,"byte_end":251193,"line_start":512,"line_end":512,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251390,"byte_end":251403,"line_start":518,"line_end":518,"column_start":9,"column_end":22},"name":"child_changes","qualname":"<OverlayedChanges>::child_changes","value":"pub fn child_changes(&Self, &[u8]) -> Option<(/*impl Trait*/, &ChildInfo)>","parent":null,"children":[],"decl_id":null,"docs":" Get an optional iterator over all child changes stored under the supplied key.\n","sig":null,"attributes":[{"value":"/ Get an optional iterator over all child changes stored under the supplied key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251299,"byte_end":251381,"line_start":517,"line_end":517,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251694,"byte_end":251714,"line_start":525,"line_end":525,"column_start":9,"column_end":29},"name":"into_storage_changes","qualname":"<OverlayedChanges>::into_storage_changes","value":"pub fn into_storage_changes<B: Backend<H>, H: Hasher,\n                            N: BlockNumber>(Self, &B,\n                                            Option<&ChangesTrieState<, H, N>>,\n                                            H::Out,\n                                            StorageTransactionCache<B::Transaction,\n                                                                    H, N>)\n-> Result<StorageChanges<B::Transaction, H, N>, DefaultError> where\nH::Out: Ord + Encode + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this instance with all changes into a [`StorageChanges`] instance.\n","sig":null,"attributes":[{"value":"/ Convert this instance with all changes into a [`StorageChanges`] instance.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251582,"byte_end":251660,"line_start":523,"line_end":523,"column_start":2,"column_end":80}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":251662,"byte_end":251685,"line_start":524,"line_end":524,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":252218,"byte_end":252239,"line_start":539,"line_end":539,"column_start":9,"column_end":30},"name":"drain_storage_changes","qualname":"<OverlayedChanges>::drain_storage_changes","value":"pub fn drain_storage_changes<B: Backend<H>, H: Hasher,\n                             N: BlockNumber>(&mut Self, &B,\n                                             Option<&ChangesTrieState<, H,\n                                                                      N>>,\n                                             H::Out,\n                                             &mut StorageTransactionCache<B::Transaction,\n                                                                          H,\n                                                                          N>)\n-> Result<StorageChanges<B::Transaction, H, N>, DefaultError> where\nH::Out: Ord + Encode + 'static","parent":null,"children":[],"decl_id":null,"docs":" Drain all changes into a [`StorageChanges`] instance. Leave empty overlay in place.\n","sig":null,"attributes":[{"value":"/ Drain all changes into a [`StorageChanges`] instance. Leave empty overlay in place.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":252122,"byte_end":252209,"line_start":538,"line_end":538,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255241,"byte_end":255253,"line_start":621,"line_end":621,"column_start":9,"column_end":21},"name":"storage_root","qualname":"<OverlayedChanges>::storage_root","value":"pub fn storage_root<H: Hasher, N: BlockNumber,\n                    B: Backend<H>>(&Self, &B,\n                                   &mut StorageTransactionCache<B::Transaction,\n                                                                H, N>)\n-> H::Out where H::Out: Ord + Encode","parent":null,"children":[],"decl_id":null,"docs":" Generate the storage root using `backend` and all changes\n as seen by the current transaction.","sig":null,"attributes":[{"value":"/ Generate the storage root using `backend` and all changes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255042,"byte_end":255103,"line_start":617,"line_end":617,"column_start":2,"column_end":63}},{"value":"/ as seen by the current transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255105,"byte_end":255144,"line_start":618,"line_end":618,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255146,"byte_end":255149,"line_start":619,"line_end":619,"column_start":2,"column_end":5}},{"value":"/ Returns the storage root and caches storage transaction in the given `cache`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255151,"byte_end":255232,"line_start":620,"line_end":620,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":256085,"byte_end":256102,"line_start":650,"line_end":650,"column_start":9,"column_end":26},"name":"changes_trie_root","qualname":"<OverlayedChanges>::changes_trie_root","value":"pub fn changes_trie_root<'a, H: Hasher, N: BlockNumber,\n                         B: Backend<H>>(&Self, &B,\n                                        Option<&'a ChangesTrieState>, H::Out,\n                                        bool,\n                                        &mut StorageTransactionCache<B::Transaction,\n                                                                     H, N>)\n-> Result<Option<H::Out>, ()> where H::Out: Ord + Encode + 'static","parent":null,"children":[],"decl_id":null,"docs":" Generate the changes trie root.","sig":null,"attributes":[{"value":"/ Generate the changes trie root.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255825,"byte_end":255860,"line_start":642,"line_end":642,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255862,"byte_end":255865,"line_start":643,"line_end":643,"column_start":2,"column_end":5}},{"value":"/ Returns the changes trie root and caches the storage transaction into the given `cache`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255867,"byte_end":255959,"line_start":644,"line_end":644,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255961,"byte_end":255964,"line_start":645,"line_end":645,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255966,"byte_end":255978,"line_start":646,"line_end":646,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255980,"byte_end":255983,"line_start":647,"line_end":647,"column_start":2,"column_end":5}},{"value":"/ Panics on storage error, when `panic_on_storage_error` is set.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":255985,"byte_end":256051,"line_start":648,"line_end":648,"column_start":2,"column_end":68}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":256053,"byte_end":256076,"line_start":649,"line_end":649,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":256917,"byte_end":256940,"line_start":674,"line_end":674,"column_start":9,"column_end":32},"name":"next_storage_key_change","qualname":"<OverlayedChanges>::next_storage_key_change","value":"pub fn next_storage_key_change(&Self, &[u8])\n-> Option<(&[u8], &OverlayedValue)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next (in lexicographic order) storage key in the overlayed alongside its value.\n If no value is next then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Returns the next (in lexicographic order) storage key in the overlayed alongside its value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":256763,"byte_end":256858,"line_start":672,"line_end":672,"column_start":2,"column_end":97}},{"value":"/ If no value is next then `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":256860,"byte_end":256908,"line_start":673,"line_end":673,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257192,"byte_end":257221,"line_start":680,"line_end":680,"column_start":9,"column_end":38},"name":"next_child_storage_key_change","qualname":"<OverlayedChanges>::next_child_storage_key_change","value":"pub fn next_child_storage_key_change(&Self, &[u8], &[u8])\n-> Option<(&[u8], &OverlayedValue)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next (in lexicographic order) child storage key in the overlayed alongside its\n value.  If no value is next then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Returns the next (in lexicographic order) child storage key in the overlayed alongside its","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257031,"byte_end":257125,"line_start":678,"line_end":678,"column_start":2,"column_end":96}},{"value":"/ value.  If no value is next then `None` is returned.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257127,"byte_end":257183,"line_start":679,"line_end":679,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257462,"byte_end":257470,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"name":"offchain","qualname":"<OverlayedChanges>::offchain","value":"pub fn offchain(&Self) -> &OffchainOverlayedChanges","parent":null,"children":[],"decl_id":null,"docs":" Read only access ot offchain overlay.\n","sig":null,"attributes":[{"value":"/ Read only access ot offchain overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257412,"byte_end":257453,"line_start":692,"line_end":692,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257599,"byte_end":257619,"line_start":698,"line_end":698,"column_start":9,"column_end":29},"name":"set_offchain_storage","qualname":"<OverlayedChanges>::set_offchain_storage","value":"pub fn set_offchain_storage(&mut Self, &[u8], Option<&[u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Write a key value pair to the offchain storage overlay.\n","sig":null,"attributes":[{"value":"/ Write a key value pair to the offchain storage overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257531,"byte_end":257590,"line_start":697,"line_end":697,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257897,"byte_end":257918,"line_start":707,"line_end":707,"column_start":9,"column_end":30},"name":"add_transaction_index","qualname":"<OverlayedChanges>::add_transaction_index","value":"pub fn add_transaction_index(&mut Self, IndexOperation)","parent":null,"children":[],"decl_id":null,"docs":" Add transaction index operation.\n","sig":null,"attributes":[{"value":"/ Add transaction index operation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":257852,"byte_end":257888,"line_start":706,"line_end":706,"column_start":2,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303120,"byte_end":303142,"line_start":36,"line_end":36,"column_start":12,"column_end":34},"name":"ProvingBackendRecorder","qualname":"::proving_backend::ProvingBackendRecorder","value":"ProvingBackendRecorder {  }","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061}],"decl_id":null,"docs":" Patricia trie-based backend specialized in get value proofs.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend specialized in get value proofs.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303044,"byte_end":303108,"line_start":35,"line_end":35,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303463,"byte_end":303470,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"storage","qualname":"<ProvingBackendRecorder>::storage","value":"pub fn storage(&mut Self, &[u8]) -> Result<Option<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for a key query.\n","sig":null,"attributes":[{"value":"/ Produce proof for a key query.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303420,"byte_end":303454,"line_start":47,"line_end":47,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303927,"byte_end":303940,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<ProvingBackendRecorder>::child_storage","value":"pub fn child_storage(&mut Self, &ChildInfo, &[u8])\n-> Result<Option<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for a child key query.\n","sig":null,"attributes":[{"value":"/ Produce proof for a child key query.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303878,"byte_end":303918,"line_start":65,"line_end":65,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":304641,"byte_end":304656,"line_start":94,"line_end":94,"column_start":9,"column_end":24},"name":"record_all_keys","qualname":"<ProvingBackendRecorder>::record_all_keys","value":"pub fn record_all_keys(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for the whole backend.\n","sig":null,"attributes":[{"value":"/ Produce proof for the whole backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":304592,"byte_end":304632,"line_start":93,"line_end":93,"column_start":2,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3382},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305431,"byte_end":305444,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"ProofRecorder","qualname":"::proving_backend::ProofRecorder","value":"ProofRecorder {  }","parent":null,"children":[{"krate":0,"index":3384}],"decl_id":null,"docs":" Global proof recorder, act as a layer over a hash db for recording queried data.\n","sig":null,"attributes":[{"value":"/ Global proof recorder, act as a layer over a hash db for recording queried data.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305309,"byte_end":305393,"line_start":120,"line_end":120,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305616,"byte_end":305622,"line_start":128,"line_end":128,"column_start":9,"column_end":15},"name":"record","qualname":"<ProofRecorder<Hash>>::record","value":"pub fn record(&Self, Hash, Option<DBValue>)","parent":null,"children":[],"decl_id":null,"docs":" Record the given `key` => `val` combination.\n","sig":null,"attributes":[{"value":"/ Record the given `key` => `val` combination.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305559,"byte_end":305607,"line_start":127,"line_end":127,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306010,"byte_end":306013,"line_start":143,"line_end":143,"column_start":9,"column_end":12},"name":"get","qualname":"<ProofRecorder<Hash>>::get","value":"pub fn get(&Self, &Hash) -> Option<Option<DBValue>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value at the given `key`.\n","sig":null,"attributes":[{"value":"/ Returns the value at the given `key`.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305960,"byte_end":306001,"line_start":142,"line_end":142,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306294,"byte_end":306315,"line_start":151,"line_end":151,"column_start":9,"column_end":30},"name":"estimate_encoded_size","qualname":"<ProofRecorder<Hash>>::estimate_encoded_size","value":"pub fn estimate_encoded_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the estimated encoded size of the proof.","sig":null,"attributes":[{"value":"/ Returns the estimated encoded size of the proof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306113,"byte_end":306165,"line_start":147,"line_end":147,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306167,"byte_end":306170,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ The estimation is maybe bigger (by in maximum 4 bytes), but never smaller than the actual","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306172,"byte_end":306265,"line_start":149,"line_end":149,"column_start":2,"column_end":95}},{"value":"/ encoded proof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306267,"byte_end":306285,"line_start":150,"line_end":150,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306501,"byte_end":306517,"line_start":158,"line_end":158,"column_start":9,"column_end":25},"name":"to_storage_proof","qualname":"<ProofRecorder<Hash>>::to_storage_proof","value":"pub fn to_storage_proof(&Self) -> StorageProof","parent":null,"children":[],"decl_id":null,"docs":" Convert into a [`StorageProof`].\n","sig":null,"attributes":[{"value":"/ Convert into a [`StorageProof`].","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306456,"byte_end":306492,"line_start":157,"line_end":157,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306751,"byte_end":306756,"line_start":169,"line_end":169,"column_start":9,"column_end":14},"name":"reset","qualname":"<ProofRecorder<Hash>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the internal state.\n","sig":null,"attributes":[{"value":"/ Reset the internal state.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306713,"byte_end":306742,"line_start":168,"line_end":168,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307026,"byte_end":307040,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"ProvingBackend","qualname":"::proving_backend::ProvingBackend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Patricia trie-based backend which also tracks all touched storage trie values.\n These can be sent to remote node and used as a proof of execution.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend which also tracks all touched storage trie values.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306861,"byte_end":306943,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"/ These can be sent to remote node and used as a proof of execution.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":306944,"byte_end":307014,"line_start":177,"line_end":177,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307487,"byte_end":307490,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"name":"new","qualname":"<ProvingBackend>::new","value":"pub fn new(&'a TrieBackend<S, H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new proving backend.\n","sig":null,"attributes":[{"value":"/ Create new proving backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307447,"byte_end":307478,"line_start":191,"line_end":191,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307696,"byte_end":307713,"line_start":198,"line_end":198,"column_start":9,"column_end":26},"name":"new_with_recorder","qualname":"<ProvingBackend>::new_with_recorder","value":"pub fn new_with_recorder(&'a TrieBackend<S, H>, ProofRecorder<H::Out>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new proving backend with the given recorder.\n","sig":null,"attributes":[{"value":"/ Create new proving backend with the given recorder.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307632,"byte_end":307687,"line_start":197,"line_end":197,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308087,"byte_end":308100,"line_start":212,"line_end":212,"column_start":9,"column_end":22},"name":"extract_proof","qualname":"<ProvingBackend>::extract_proof","value":"pub fn extract_proof(&Self) -> StorageProof","parent":null,"children":[],"decl_id":null,"docs":" Extracting the gathered unordered proof.\n","sig":null,"attributes":[{"value":"/ Extracting the gathered unordered proof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308034,"byte_end":308078,"line_start":211,"line_end":211,"column_start":2,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":2143},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":311106,"byte_end":311132,"line_start":339,"line_end":339,"column_start":8,"column_end":34},"name":"create_proof_check_backend","qualname":"::proving_backend::create_proof_check_backend","value":"pub fn create_proof_check_backend<H>(H::Out, StorageProof)\n-> Result<TrieBackend<MemoryDB<H>, H>, Box<dyn Error>> where H: Hasher,\nH::Out: Codec","parent":null,"children":[],"decl_id":null,"docs":" Create proof check backend.\n","sig":null,"attributes":[{"value":"/ Create proof check backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":311067,"byte_end":311098,"line_start":338,"line_end":338,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2220},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318643,"byte_end":318654,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"TrieBackend","qualname":"::trie_backend::TrieBackend","value":"TrieBackend {  }","parent":null,"children":[{"krate":0,"index":2223}],"decl_id":null,"docs":" Patricia trie-based backend. Transaction type is an overlay of changes to commit.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend. Transaction type is an overlay of changes to commit.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318546,"byte_end":318631,"line_start":32,"line_end":32,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318871,"byte_end":318874,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"<TrieBackend<S, H>>::new","value":"pub fn new(S, H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new trie-based backend.\n","sig":null,"attributes":[{"value":"/ Create new trie-based backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318828,"byte_end":318862,"line_start":38,"line_end":38,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319031,"byte_end":319038,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"essence","qualname":"<TrieBackend<S, H>>::essence","value":"pub fn essence(&Self) -> &TrieBackendEssence<S, H>","parent":null,"children":[],"decl_id":null,"docs":" Get backend essence reference.\n","sig":null,"attributes":[{"value":"/ Get backend essence reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318988,"byte_end":319022,"line_start":45,"line_end":45,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319141,"byte_end":319156,"line_start":51,"line_end":51,"column_start":9,"column_end":24},"name":"backend_storage","qualname":"<TrieBackend<S, H>>::backend_storage","value":"pub fn backend_storage(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319098,"byte_end":319132,"line_start":50,"line_end":50,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319253,"byte_end":319272,"line_start":56,"line_end":56,"column_start":9,"column_end":28},"name":"backend_storage_mut","qualname":"<TrieBackend<S, H>>::backend_storage_mut","value":"pub fn backend_storage_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319210,"byte_end":319244,"line_start":55,"line_end":55,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319365,"byte_end":319369,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"root","qualname":"<TrieBackend<S, H>>::root","value":"pub fn root(&Self) -> &H::Out","parent":null,"children":[],"decl_id":null,"docs":" Get trie root.\n","sig":null,"attributes":[{"value":"/ Get trie root.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319338,"byte_end":319356,"line_start":60,"line_end":60,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319475,"byte_end":319487,"line_start":66,"line_end":66,"column_start":9,"column_end":21},"name":"into_storage","qualname":"<TrieBackend<S, H>>::into_storage","value":"pub fn into_storage(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns underlying storage.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns underlying storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319417,"byte_end":319466,"line_start":65,"line_end":65,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":2362},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328783,"byte_end":328790,"line_start":44,"line_end":44,"column_start":11,"column_end":18},"name":"Storage","qualname":"::trie_backend_essence::Storage","value":"Storage<H: Hasher>: Send + Sync","parent":null,"children":[{"krate":0,"index":2364}],"decl_id":null,"docs":" Patricia trie-based storage trait.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based storage trait.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328734,"byte_end":328772,"line_start":43,"line_end":43,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328843,"byte_end":328846,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"get","qualname":"::trie_backend_essence::Storage::get","value":"pub fn get(&Self, &H::Out, Prefix) -> Result<Option<DBValue>>","parent":{"krate":0,"index":2362},"children":[],"decl_id":null,"docs":" Get a trie node.\n","sig":null,"attributes":[{"value":"/ Get a trie node.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328818,"byte_end":328838,"line_start":45,"line_end":45,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2365},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328973,"byte_end":328991,"line_start":50,"line_end":50,"column_start":12,"column_end":30},"name":"TrieBackendEssence","qualname":"::trie_backend_essence::TrieBackendEssence","value":"TrieBackendEssence {  }","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"decl_id":null,"docs":" Patricia trie-based pairs storage essence.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based pairs storage essence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328915,"byte_end":328961,"line_start":49,"line_end":49,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329212,"byte_end":329215,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"name":"new","qualname":"<TrieBackendEssence<S, H>>::new","value":"pub fn new(S, H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new trie-based backend.\n","sig":null,"attributes":[{"value":"/ Create new trie-based backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329169,"byte_end":329203,"line_start":57,"line_end":57,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2375},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329375,"byte_end":329390,"line_start":67,"line_end":67,"column_start":9,"column_end":24},"name":"backend_storage","qualname":"<TrieBackendEssence<S, H>>::backend_storage","value":"pub fn backend_storage(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329332,"byte_end":329366,"line_start":66,"line_end":66,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329470,"byte_end":329489,"line_start":72,"line_end":72,"column_start":9,"column_end":28},"name":"backend_storage_mut","qualname":"<TrieBackendEssence<S, H>>::backend_storage_mut","value":"pub fn backend_storage_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329427,"byte_end":329461,"line_start":71,"line_end":71,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329565,"byte_end":329569,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"name":"root","qualname":"<TrieBackendEssence<S, H>>::root","value":"pub fn root(&Self) -> &H::Out","parent":null,"children":[],"decl_id":null,"docs":" Get trie root.\n","sig":null,"attributes":[{"value":"/ Get trie root.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329538,"byte_end":329556,"line_start":76,"line_end":76,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329663,"byte_end":329671,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"name":"set_root","qualname":"<TrieBackendEssence<S, H>>::set_root","value":"pub fn set_root(&mut Self, H::Out)","parent":null,"children":[],"decl_id":null,"docs":" Set trie root. This is useful for testing.\n","sig":null,"attributes":[{"value":"/ Set trie root. This is useful for testing.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329608,"byte_end":329654,"line_start":81,"line_end":81,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329782,"byte_end":329794,"line_start":87,"line_end":87,"column_start":9,"column_end":21},"name":"into_storage","qualname":"<TrieBackendEssence<S, H>>::into_storage","value":"pub fn into_storage(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns underlying storage.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns underlying storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329724,"byte_end":329773,"line_start":86,"line_end":86,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329957,"byte_end":329973,"line_start":93,"line_end":93,"column_start":9,"column_end":25},"name":"next_storage_key","qualname":"<TrieBackendEssence<S, H>>::next_storage_key","value":"pub fn next_storage_key(&Self, &[u8]) -> Result<Option<StorageKey>>","parent":null,"children":[],"decl_id":null,"docs":" Return the next key in the trie i.e. the minimum key that is strictly superior to `key` in\n lexicographic order.\n","sig":null,"attributes":[{"value":"/ Return the next key in the trie i.e. the minimum key that is strictly superior to `key` in","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329828,"byte_end":329922,"line_start":91,"line_end":91,"column_start":2,"column_end":96}},{"value":"/ lexicographic order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329924,"byte_end":329948,"line_start":92,"line_end":92,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":330428,"byte_end":330450,"line_start":104,"line_end":104,"column_start":9,"column_end":31},"name":"next_child_storage_key","qualname":"<TrieBackendEssence<S, H>>::next_child_storage_key","value":"pub fn next_child_storage_key(&Self, &ChildInfo, &[u8])\n-> Result<Option<StorageKey>>","parent":null,"children":[],"decl_id":null,"docs":" Return the next key in the child trie i.e. the minimum key that is strictly superior to\n `key` in lexicographic order.\n","sig":null,"attributes":[{"value":"/ Return the next key in the child trie i.e. the minimum key that is strictly superior to","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":330293,"byte_end":330384,"line_start":102,"line_end":102,"column_start":2,"column_end":93}},{"value":"/ `key` in lexicographic order.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":330386,"byte_end":330419,"line_start":103,"line_end":103,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":332514,"byte_end":332521,"line_start":171,"line_end":171,"column_start":9,"column_end":16},"name":"storage","qualname":"<TrieBackendEssence<S, H>>::storage","value":"pub fn storage(&Self, &[u8]) -> Result<Option<StorageValue>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of storage at given key.\n","sig":null,"attributes":[{"value":"/ Get the value of storage at given key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":332463,"byte_end":332505,"line_start":170,"line_end":170,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":332765,"byte_end":332778,"line_start":178,"line_end":178,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<TrieBackendEssence<S, H>>::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8]) -> Result<Option<StorageValue>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of child storage at given key.\n","sig":null,"attributes":[{"value":"/ Get the value of child storage at given key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":332708,"byte_end":332756,"line_start":177,"line_end":177,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":333274,"byte_end":333299,"line_start":194,"line_end":194,"column_start":9,"column_end":34},"name":"apply_to_child_keys_while","qualname":"<TrieBackendEssence<S, H>>::apply_to_child_keys_while","value":"pub fn apply_to_child_keys_while<F: FnMut(&[u8]) ->\n                                 bool>(&Self, &ChildInfo, F)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve all entries keys of child storage and call `f` for each of those keys.\n Aborts as soon as `f` returns false.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of child storage and call `f` for each of those keys.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":333140,"byte_end":333223,"line_start":192,"line_end":192,"column_start":2,"column_end":85}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":333225,"byte_end":333265,"line_start":193,"line_end":193,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":333884,"byte_end":333910,"line_start":218,"line_end":218,"column_start":9,"column_end":35},"name":"for_child_keys_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_child_keys_with_prefix","value":"pub fn for_child_keys_with_prefix<F: FnMut(&[u8]) ->\n                                  ()>(&Self, &ChildInfo, &[u8], F)","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all keys starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all keys starting with prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":333815,"byte_end":333875,"line_start":217,"line_end":217,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":334480,"byte_end":334500,"line_start":237,"line_end":237,"column_start":9,"column_end":29},"name":"for_keys_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_keys_with_prefix","value":"pub fn for_keys_with_prefix<F: FnMut(&[u8]) -> ()>(&Self, &[u8], F)","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all keys starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all keys starting with prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":334411,"byte_end":334471,"line_start":236,"line_end":236,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":335428,"byte_end":335454,"line_start":274,"line_end":274,"column_start":9,"column_end":35},"name":"for_key_values_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_key_values_with_prefix","value":"pub fn for_key_values_with_prefix<F: FnMut(&[u8], &[u8]) ->\n                                  ()>(&Self, &[u8], F)","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all key and values starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all key and values starting with prefix.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":335349,"byte_end":335419,"line_start":273,"line_end":273,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":2442},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337520,"byte_end":337538,"line_start":347,"line_end":347,"column_start":11,"column_end":29},"name":"TrieBackendStorage","qualname":"::trie_backend_essence::TrieBackendStorage","value":"TrieBackendStorage<H: Hasher>: Send + Sync","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"decl_id":null,"docs":" Key-value pairs storage that is used by trie backend essence.\n","sig":null,"attributes":[{"value":"/ Key-value pairs storage that is used by trie backend essence.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337444,"byte_end":337509,"line_start":346,"line_end":346,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":2444},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337603,"byte_end":337610,"line_start":349,"line_end":349,"column_start":7,"column_end":14},"name":"Overlay","qualname":"::trie_backend_essence::TrieBackendStorage::Overlay","value":"type Overlay: hash_db::HashDB<H, DBValue> + Default + Consolidate;","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":" Type of in-memory overlay.\n","sig":null,"attributes":[{"value":"/ Type of in-memory overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337566,"byte_end":337596,"line_start":348,"line_end":348,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337703,"byte_end":337706,"line_start":351,"line_end":351,"column_start":5,"column_end":8},"name":"get","qualname":"::trie_backend_essence::TrieBackendStorage::get","value":"pub fn get(&Self, &H::Out, Prefix) -> Result<Option<DBValue>>","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":" Get the value stored at key.\n","sig":null,"attributes":[{"value":"/ Get the value stored at key.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337666,"byte_end":337698,"line_start":350,"line_end":350,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3391},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343159,"byte_end":343168,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"UsageUnit","qualname":"::stats::UsageUnit","value":"UsageUnit { ops, bytes }","parent":null,"children":[{"krate":0,"index":3392},{"krate":0,"index":3393}],"decl_id":null,"docs":" Measured count of operations and total bytes.\n","sig":null,"attributes":[{"value":"/ Measured count of operations and total bytes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343065,"byte_end":343114,"line_start":24,"line_end":24,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343203,"byte_end":343206,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"name":"ops","qualname":"::stats::UsageUnit::ops","value":"u64","parent":{"krate":0,"index":3391},"children":[],"decl_id":null,"docs":" Number of operations.\n","sig":null,"attributes":[{"value":"/ Number of operations.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343172,"byte_end":343197,"line_start":27,"line_end":27,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343240,"byte_end":343245,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"name":"bytes","qualname":"::stats::UsageUnit::bytes","value":"u64","parent":{"krate":0,"index":3391},"children":[],"decl_id":null,"docs":" Number of bytes.\n","sig":null,"attributes":[{"value":"/ Number of bytes.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343214,"byte_end":343234,"line_start":29,"line_end":29,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343330,"byte_end":343339,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"UsageInfo","qualname":"::stats::UsageInfo","value":"UsageInfo { reads, writes, nodes_writes, overlay_writes, removed_nodes, cache_reads, modified_reads, memory, started, span }","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"decl_id":null,"docs":" Usage statistics for state backend.\n","sig":null,"attributes":[{"value":"/ Usage statistics for state backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343255,"byte_end":343294,"line_start":33,"line_end":33,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3401},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343377,"byte_end":343382,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"name":"reads","qualname":"::stats::UsageInfo::reads","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Read statistics (total).\n","sig":null,"attributes":[{"value":"/ Read statistics (total).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343343,"byte_end":343371,"line_start":36,"line_end":36,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3402},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343431,"byte_end":343437,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"name":"writes","qualname":"::stats::UsageInfo::writes","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Write statistics (total).\n","sig":null,"attributes":[{"value":"/ Write statistics (total).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343396,"byte_end":343425,"line_start":38,"line_end":38,"column_start":2,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3403},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343489,"byte_end":343501,"line_start":41,"line_end":41,"column_start":6,"column_end":18},"name":"nodes_writes","qualname":"::stats::UsageInfo::nodes_writes","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Write trie nodes statistics.\n","sig":null,"attributes":[{"value":"/ Write trie nodes statistics.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343451,"byte_end":343483,"line_start":40,"line_end":40,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3404},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343577,"byte_end":343591,"line_start":44,"line_end":44,"column_start":6,"column_end":20},"name":"overlay_writes","qualname":"::stats::UsageInfo::overlay_writes","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Write into cached state machine\n change overlay.\n","sig":null,"attributes":[{"value":"/ Write into cached state machine","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343515,"byte_end":343550,"line_start":42,"line_end":42,"column_start":2,"column_end":37}},{"value":"/ change overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343552,"byte_end":343571,"line_start":43,"line_end":43,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3405},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343645,"byte_end":343658,"line_start":46,"line_end":46,"column_start":6,"column_end":19},"name":"removed_nodes","qualname":"::stats::UsageInfo::removed_nodes","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Removed trie nodes statistics.\n","sig":null,"attributes":[{"value":"/ Removed trie nodes statistics.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343605,"byte_end":343639,"line_start":45,"line_end":45,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3406},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343704,"byte_end":343715,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"name":"cache_reads","qualname":"::stats::UsageInfo::cache_reads","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Cache read statistics.\n","sig":null,"attributes":[{"value":"/ Cache read statistics.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343672,"byte_end":343698,"line_start":47,"line_end":47,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3407},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343770,"byte_end":343784,"line_start":50,"line_end":50,"column_start":6,"column_end":20},"name":"modified_reads","qualname":"::stats::UsageInfo::modified_reads","value":"stats::UsageUnit","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Modified value read statistics.\n","sig":null,"attributes":[{"value":"/ Modified value read statistics.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343729,"byte_end":343764,"line_start":49,"line_end":49,"column_start":2,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3408},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343820,"byte_end":343826,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"name":"memory","qualname":"::stats::UsageInfo::memory","value":"usize","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Memory used.\n","sig":null,"attributes":[{"value":"/ Memory used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343798,"byte_end":343814,"line_start":51,"line_end":51,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3409},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343940,"byte_end":343947,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"name":"started","qualname":"::stats::UsageInfo::started","value":"std::time::Instant","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Moment at which current statistics has been started being collected.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343837,"byte_end":343860,"line_start":54,"line_end":54,"column_start":2,"column_end":25}},{"value":"/ Moment at which current statistics has been started being collected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343862,"byte_end":343934,"line_start":55,"line_end":55,"column_start":2,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3410},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344021,"byte_end":344025,"line_start":59,"line_end":59,"column_start":6,"column_end":10},"name":"span","qualname":"::stats::UsageInfo::span","value":"std::time::Duration","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Timespan of the statistics.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343959,"byte_end":343982,"line_start":57,"line_end":57,"column_start":2,"column_end":25}},{"value":"/ Timespan of the statistics.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":343984,"byte_end":344015,"line_start":58,"line_end":58,"column_start":2,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3415},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344154,"byte_end":344171,"line_start":65,"line_end":65,"column_start":12,"column_end":29},"name":"StateMachineStats","qualname":"::stats::StateMachineStats","value":"StateMachineStats { reads_modified, bytes_read_modified, writes_overlay, bytes_writes_overlay }","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419}],"decl_id":null,"docs":" Accumulated usage statistics specific to state machine\n crate.\n","sig":null,"attributes":[{"value":"/ Accumulated usage statistics specific to state machine","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344040,"byte_end":344098,"line_start":62,"line_end":62,"column_start":1,"column_end":59}},{"value":"/ crate.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344099,"byte_end":344109,"line_start":63,"line_end":63,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3416},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344282,"byte_end":344296,"line_start":69,"line_end":69,"column_start":6,"column_end":20},"name":"reads_modified","qualname":"::stats::StateMachineStats::reads_modified","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" Number of read query from runtime\n that hit a modified value (in state\n machine overlay).\n","sig":null,"attributes":[{"value":"/ Number of read query from runtime","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344175,"byte_end":344212,"line_start":66,"line_end":66,"column_start":2,"column_end":39}},{"value":"/ that hit a modified value (in state","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344214,"byte_end":344253,"line_start":67,"line_end":67,"column_start":2,"column_end":41}},{"value":"/ machine overlay).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344255,"byte_end":344276,"line_start":68,"line_end":68,"column_start":2,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3417},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344383,"byte_end":344402,"line_start":72,"line_end":72,"column_start":6,"column_end":25},"name":"bytes_read_modified","qualname":"::stats::StateMachineStats::bytes_read_modified","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" Size in byte of read queries that\n hit a modified value.\n","sig":null,"attributes":[{"value":"/ Size in byte of read queries that","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344313,"byte_end":344350,"line_start":70,"line_end":70,"column_start":2,"column_end":39}},{"value":"/ hit a modified value.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344352,"byte_end":344377,"line_start":71,"line_end":71,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3418},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344505,"byte_end":344519,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"name":"writes_overlay","qualname":"::stats::StateMachineStats::writes_overlay","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" Number of time a write operation\n occurs into the state machine overlay.\n","sig":null,"attributes":[{"value":"/ Number of time a write operation","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344419,"byte_end":344455,"line_start":73,"line_end":73,"column_start":2,"column_end":38}},{"value":"/ occurs into the state machine overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344457,"byte_end":344499,"line_start":74,"line_end":74,"column_start":2,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3419},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344597,"byte_end":344617,"line_start":78,"line_end":78,"column_start":6,"column_end":26},"name":"bytes_writes_overlay","qualname":"::stats::StateMachineStats::bytes_writes_overlay","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" Size in bytes of the writes overlay\n operation.\n","sig":null,"attributes":[{"value":"/ Size in bytes of the writes overlay","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344536,"byte_end":344575,"line_start":76,"line_end":76,"column_start":2,"column_end":41}},{"value":"/ operation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344577,"byte_end":344591,"line_start":77,"line_end":77,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344709,"byte_end":344712,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"add","qualname":"<StateMachineStats>::add","value":"pub fn add(&Self, &StateMachineStats)","parent":null,"children":[],"decl_id":null,"docs":" Accumulates some registered stats.\n","sig":null,"attributes":[{"value":"/ Accumulates some registered stats.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344662,"byte_end":344700,"line_start":82,"line_end":82,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345148,"byte_end":345153,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"empty","qualname":"<UsageInfo>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Empty statistics.","sig":null,"attributes":[{"value":"/ Empty statistics.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345079,"byte_end":345100,"line_start":92,"line_end":92,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345102,"byte_end":345105,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ Means no data was collected.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345107,"byte_end":345139,"line_start":94,"line_end":94,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345627,"byte_end":345655,"line_start":112,"line_end":112,"column_start":9,"column_end":37},"name":"include_state_machine_states","qualname":"<UsageInfo>::include_state_machine_states","value":"pub fn include_state_machine_states(&mut Self, &StateMachineStats)","parent":null,"children":[],"decl_id":null,"docs":" Add collected state machine to this state.\n","sig":null,"attributes":[{"value":"/ Add collected state machine to this state.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345572,"byte_end":345618,"line_start":111,"line_end":111,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":346050,"byte_end":346069,"line_start":122,"line_end":122,"column_start":9,"column_end":28},"name":"tally_read_modified","qualname":"<StateMachineStats>::tally_read_modified","value":"pub fn tally_read_modified(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Tally one read modified operation, of some length.\n","sig":null,"attributes":[{"value":"/ Tally one read modified operation, of some length.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345987,"byte_end":346041,"line_start":121,"line_end":121,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":346261,"byte_end":346280,"line_start":127,"line_end":127,"column_start":9,"column_end":28},"name":"tally_write_overlay","qualname":"<StateMachineStats>::tally_write_overlay","value":"pub fn tally_write_overlay(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Tally one write overlay operation, of some length.\n","sig":null,"attributes":[{"value":"/ Tally one write overlay operation, of some length.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":346198,"byte_end":346252,"line_start":126,"line_end":126,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":2539},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347477,"byte_end":347489,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"InspectState","qualname":"::read_only::InspectState","value":"InspectState<H: Hasher, B: Backend<H>>","parent":null,"children":[{"krate":0,"index":2542}],"decl_id":null,"docs":" Trait for inspecting state in any backend.","sig":null,"attributes":[{"value":"/ Trait for inspecting state in any backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347383,"byte_end":347429,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347430,"byte_end":347433,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Implemented for any backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347434,"byte_end":347466,"line_start":34,"line_end":34,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347708,"byte_end":347721,"line_start":42,"line_end":42,"column_start":5,"column_end":18},"name":"inspect_state","qualname":"::read_only::InspectState::inspect_state","value":"pub fn inspect_state<F: FnOnce() -> R, R>(&Self, F) -> R","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" Inspect state with a closure.","sig":null,"attributes":[{"value":"/ Inspect state with a closure.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347519,"byte_end":347552,"line_start":36,"line_end":36,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347554,"byte_end":347557,"line_start":37,"line_end":37,"column_start":2,"column_end":5}},{"value":"/ Self will be set as read-only externalities and inspection","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347559,"byte_end":347621,"line_start":38,"line_end":38,"column_start":2,"column_end":64}},{"value":"/ closure will be run against it.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347623,"byte_end":347658,"line_start":39,"line_end":39,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347660,"byte_end":347663,"line_start":40,"line_end":40,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the closure.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347665,"byte_end":347703,"line_start":41,"line_end":41,"column_start":2,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348120,"byte_end":348141,"line_start":56,"line_end":56,"column_start":12,"column_end":33},"name":"ReadOnlyExternalities","qualname":"::read_only::ReadOnlyExternalities","value":"ReadOnlyExternalities {  }","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431}],"decl_id":null,"docs":" Simple read-only externalities for any backend.","sig":null,"attributes":[{"value":"/ Simple read-only externalities for any backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347940,"byte_end":347991,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347992,"byte_end":347995,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ To be used in test for state inspection. Will panic if something writes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347996,"byte_end":348071,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ to the storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348072,"byte_end":348091,"line_start":54,"line_end":54,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348618,"byte_end":348630,"line_start":71,"line_end":71,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<ReadOnlyExternalities>::execute_with","value":"pub fn execute_with<R, impl FnOnce() -> R: FnOnce() ->\n                    R>(&mut Self, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348491,"byte_end":348558,"line_start":68,"line_end":68,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348560,"byte_end":348563,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348565,"byte_end":348609,"line_start":70,"line_end":70,"column_start":2,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2616},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2333,"byte_end":2345,"line_start":105,"line_end":105,"column_start":10,"column_end":22},"name":"DefaultError","qualname":"::DefaultError","value":"String","parent":null,"children":[],"decl_id":null,"docs":" Default error type to use with state machine trie backend.\n","sig":null,"attributes":[{"value":"/ Default error type to use with state machine trie backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2237,"byte_end":2299,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":2300,"byte_end":2323,"line_start":104,"line_end":104,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":2852},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5223,"byte_end":5237,"line_start":191,"line_end":191,"column_start":11,"column_end":25},"name":"DefaultHandler","qualname":"::execution::DefaultHandler","value":"fn(: CallResult<R, E>, : CallResult<R, E>) -> CallResult<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Default handler of the execution manager.\n","sig":null,"attributes":[{"value":"/ Default handler of the execution manager.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5167,"byte_end":5212,"line_start":190,"line_end":190,"column_start":2,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2855},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5356,"byte_end":5378,"line_start":194,"line_end":194,"column_start":11,"column_end":33},"name":"ChangesTrieTransaction","qualname":"::execution::ChangesTrieTransaction","value":"(MemoryDB<H>, ChangesTrieCacheAction<<H as Hasher>::Out, N>)","parent":null,"children":[],"decl_id":null,"docs":" Type of changes trie transaction.\n","sig":null,"attributes":[{"value":"/ Type of changes trie transaction.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5308,"byte_end":5345,"line_start":193,"line_end":193,"column_start":2,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2858},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5510,"byte_end":5525,"line_start":200,"line_end":200,"column_start":11,"column_end":26},"name":"InMemoryBackend","qualname":"::execution::InMemoryBackend","value":"TrieBackend<MemoryDB<H>, H>","parent":null,"children":[],"decl_id":null,"docs":" Trie backend with in-memory storage.\n","sig":null,"attributes":[{"value":"/ Trie backend with in-memory storage.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5459,"byte_end":5499,"line_start":199,"line_end":199,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3438},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5820,"byte_end":5838,"line_start":207,"line_end":207,"column_start":3,"column_end":21},"name":"NativeWhenPossible","qualname":"::execution::ExecutionStrategy::NativeWhenPossible","value":"ExecutionStrategy::NativeWhenPossible","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Execute with the native equivalent if it is compatible with the given wasm module;\n otherwise fall back to the wasm.\n","sig":null,"attributes":[{"value":"/ Execute with the native equivalent if it is compatible with the given wasm module;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5692,"byte_end":5778,"line_start":205,"line_end":205,"column_start":3,"column_end":89}},{"value":"/ otherwise fall back to the wasm.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5781,"byte_end":5817,"line_start":206,"line_end":206,"column_start":3,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3440},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5875,"byte_end":5885,"line_start":209,"line_end":209,"column_start":3,"column_end":13},"name":"AlwaysWasm","qualname":"::execution::ExecutionStrategy::AlwaysWasm","value":"ExecutionStrategy::AlwaysWasm","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Use the given wasm module.\n","sig":null,"attributes":[{"value":"/ Use the given wasm module.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5842,"byte_end":5872,"line_start":208,"line_end":208,"column_start":3,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3442},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5994,"byte_end":5998,"line_start":211,"line_end":211,"column_start":3,"column_end":7},"name":"Both","qualname":"::execution::ExecutionStrategy::Both","value":"ExecutionStrategy::Both","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Run with both the wasm and the native variant (if compatible). Report any discrepancy as an error.\n","sig":null,"attributes":[{"value":"/ Run with both the wasm and the native variant (if compatible). Report any discrepancy as an error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5889,"byte_end":5991,"line_start":210,"line_end":210,"column_start":3,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3444},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6067,"byte_end":6081,"line_start":213,"line_end":213,"column_start":3,"column_end":17},"name":"NativeElseWasm","qualname":"::execution::ExecutionStrategy::NativeElseWasm","value":"ExecutionStrategy::NativeElseWasm","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" First native, then if that fails or is not possible, wasm.\n","sig":null,"attributes":[{"value":"/ First native, then if that fails or is not possible, wasm.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6002,"byte_end":6064,"line_start":212,"line_end":212,"column_start":3,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":3437},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5670,"byte_end":5687,"line_start":204,"line_end":204,"column_start":11,"column_end":28},"name":"ExecutionStrategy","qualname":"::execution::ExecutionStrategy","value":"pub enum ExecutionStrategy {\n    NativeWhenPossible,\n    AlwaysWasm,\n    Both,\n    NativeElseWasm,\n}","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3444}],"decl_id":null,"docs":" Strategy for executing a call into the runtime.\n","sig":null,"attributes":[{"value":"/ Strategy for executing a call into the runtime.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":5562,"byte_end":5613,"line_start":202,"line_end":202,"column_start":2,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3458},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6257,"byte_end":6264,"line_start":220,"line_end":220,"column_start":3,"column_end":10},"name":"Trusted","qualname":"::execution::BackendTrustLevel::Trusted","value":"BackendTrustLevel::Trusted","parent":{"krate":0,"index":3457},"children":[],"decl_id":null,"docs":" Panics from trusted backends are considered justified, and never caught.\n","sig":null,"attributes":[{"value":"/ Panics from trusted backends are considered justified, and never caught.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6178,"byte_end":6254,"line_start":219,"line_end":219,"column_start":3,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3460},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6454,"byte_end":6463,"line_start":224,"line_end":224,"column_start":3,"column_end":12},"name":"Untrusted","qualname":"::execution::BackendTrustLevel::Untrusted","value":"BackendTrustLevel::Untrusted","parent":{"krate":0,"index":3457},"children":[],"decl_id":null,"docs":" Panics from untrusted backend are caught and interpreted as runtime error.\n Untrusted backend may be missing some parts of the trie, so panics are not considered\n fatal.\n","sig":null,"attributes":[{"value":"/ Panics from untrusted backend are caught and interpreted as runtime error.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6268,"byte_end":6346,"line_start":221,"line_end":221,"column_start":3,"column_end":81}},{"value":"/ Untrusted backend may be missing some parts of the trie, so panics are not considered","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6349,"byte_end":6438,"line_start":222,"line_end":222,"column_start":3,"column_end":92}},{"value":"/ fatal.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6441,"byte_end":6451,"line_start":223,"line_end":223,"column_start":3,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":3457},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6156,"byte_end":6173,"line_start":218,"line_end":218,"column_start":11,"column_end":28},"name":"BackendTrustLevel","qualname":"::execution::BackendTrustLevel","value":"pub enum BackendTrustLevel { Trusted, Untrusted, }","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3460}],"decl_id":null,"docs":" Storage backend trust level.\n","sig":null,"attributes":[{"value":"/ Storage backend trust level.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6088,"byte_end":6120,"line_start":216,"line_end":216,"column_start":2,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3468},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6739,"byte_end":6757,"line_start":232,"line_end":232,"column_start":3,"column_end":21},"name":"NativeWhenPossible","qualname":"::execution::ExecutionManager::NativeWhenPossible","value":"ExecutionManager::NativeWhenPossible","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":" Execute with the native equivalent if it is compatible with the given wasm module;\n otherwise fall back to the wasm.\n","sig":null,"attributes":[{"value":"/ Execute with the native equivalent if it is compatible with the given wasm module;","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6611,"byte_end":6697,"line_start":230,"line_end":230,"column_start":3,"column_end":89}},{"value":"/ otherwise fall back to the wasm.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6700,"byte_end":6736,"line_start":231,"line_end":231,"column_start":3,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3470},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7034,"byte_end":7044,"line_start":236,"line_end":236,"column_start":3,"column_end":13},"name":"AlwaysWasm","qualname":"::execution::ExecutionManager::AlwaysWasm","value":"ExecutionManager::AlwaysWasm(BackendTrustLevel)","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":" Use the given wasm module. The backend on which code is executed code could be\n trusted to provide all storage or not (i.e. the light client cannot be trusted to provide\n for all storage queries since the storage entries it has come from an external node).\n","sig":null,"attributes":[{"value":"/ Use the given wasm module. The backend on which code is executed code could be","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6761,"byte_end":6843,"line_start":233,"line_end":233,"column_start":3,"column_end":85}},{"value":"/ trusted to provide all storage or not (i.e. the light client cannot be trusted to provide","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6846,"byte_end":6939,"line_start":234,"line_end":234,"column_start":3,"column_end":96}},{"value":"/ for all storage queries since the storage entries it has come from an external node).","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6942,"byte_end":7031,"line_start":235,"line_end":235,"column_start":3,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3473},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7177,"byte_end":7181,"line_start":238,"line_end":238,"column_start":3,"column_end":7},"name":"Both","qualname":"::execution::ExecutionManager::Both","value":"ExecutionManager::Both(F)","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":" Run with both the wasm and the native variant (if compatible). Call `F` in the case of any discrepancy.\n","sig":null,"attributes":[{"value":"/ Run with both the wasm and the native variant (if compatible). Call `F` in the case of any discrepancy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7067,"byte_end":7174,"line_start":237,"line_end":237,"column_start":3,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3476},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7253,"byte_end":7267,"line_start":240,"line_end":240,"column_start":3,"column_end":17},"name":"NativeElseWasm","qualname":"::execution::ExecutionManager::NativeElseWasm","value":"ExecutionManager::NativeElseWasm","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":" First native, then if that fails or is not possible, wasm.\n","sig":null,"attributes":[{"value":"/ First native, then if that fails or is not possible, wasm.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7188,"byte_end":7250,"line_start":239,"line_end":239,"column_start":3,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":3466},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6587,"byte_end":6603,"line_start":229,"line_end":229,"column_start":11,"column_end":27},"name":"ExecutionManager","qualname":"::execution::ExecutionManager","value":"pub enum ExecutionManager<F> {\n    NativeWhenPossible,\n    AlwaysWasm(BackendTrustLevel),\n    Both(F),\n    NativeElseWasm,\n}","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3476}],"decl_id":null,"docs":" Like `ExecutionStrategy` only it also stores a handler in case of consensus failure.\n","sig":null,"attributes":[{"value":"/ Like `ExecutionStrategy` only it also stores a handler in case of consensus failure.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":6470,"byte_end":6558,"line_start":227,"line_end":227,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7801,"byte_end":7812,"line_start":256,"line_end":256,"column_start":10,"column_end":21},"name":"get_manager","qualname":"<ExecutionStrategy>::get_manager","value":"pub fn get_manager<E: fmt::Debug, R: Decode + Encode>(Self)\n-> ExecutionManager<DefaultHandler<R, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the corresponding manager for the execution strategy.\n","sig":null,"attributes":[{"value":"/ Gets the corresponding manager for the execution strategy.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7729,"byte_end":7791,"line_start":255,"line_end":255,"column_start":3,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2869},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":8628,"byte_end":8644,"line_start":278,"line_end":278,"column_start":9,"column_end":25},"name":"native_else_wasm","qualname":"::execution::native_else_wasm","value":"pub fn native_else_wasm<E, R: Decode>()\n-> ExecutionManager<DefaultHandler<R, E>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate to ExecutionManager::NativeElseWasm, without having to figure out the type.\n","sig":null,"attributes":[{"value":"/ Evaluate to ExecutionManager::NativeElseWasm, without having to figure out the type.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":8531,"byte_end":8619,"line_start":277,"line_end":277,"column_start":2,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2878},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":9293,"byte_end":9305,"line_start":293,"line_end":293,"column_start":13,"column_end":25},"name":"StateMachine","qualname":"::execution::StateMachine","value":"StateMachine {  }","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893}],"decl_id":null,"docs":" The substrate state machine.\n","sig":null,"attributes":[{"value":"/ The substrate state machine.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":9248,"byte_end":9280,"line_start":292,"line_end":292,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10243,"byte_end":10246,"line_start":329,"line_end":329,"column_start":10,"column_end":13},"name":"new","qualname":"<StateMachine>::new","value":"pub fn new<impl SpawnNamed + Send + 'static: SpawnNamed + Send +\n           'static>(&'a B, Option<ChangesTrieState>, &'a mut OverlayedChanges,\n                    &'a Exec, &'a str, &'a [u8], Extensions, &'a RuntimeCode,\n                    impl SpawnNamed + Send + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new substrate state machine.\n","sig":null,"attributes":[{"value":"/ Creates new substrate state machine.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10193,"byte_end":10233,"line_start":328,"line_end":328,"column_start":3,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11204,"byte_end":11234,"line_start":362,"line_end":362,"column_start":10,"column_end":40},"name":"with_storage_transaction_cache","qualname":"<StateMachine>::with_storage_transaction_cache","value":"pub fn with_storage_transaction_cache(Self,\n                                      Option<&'a mut StorageTransactionCache<B::Transaction,\n                                                                             H,\n                                                                             N>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Use given `cache` as storage transaction cache.","sig":null,"attributes":[{"value":"/ Use given `cache` as storage transaction cache.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10914,"byte_end":10965,"line_start":357,"line_end":357,"column_start":3,"column_end":54}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10968,"byte_end":10971,"line_start":358,"line_end":358,"column_start":3,"column_end":6}},{"value":"/ The cache will be used to cache storage transactions that can be build while executing a","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10974,"byte_end":11066,"line_start":359,"line_end":359,"column_start":3,"column_end":95}},{"value":"/ function in the runtime. For example, when calculating the storage root a transaction is","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11069,"byte_end":11161,"line_start":360,"line_end":360,"column_start":3,"column_end":95}},{"value":"/ build that will be cached.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11164,"byte_end":11194,"line_start":361,"line_end":361,"column_start":3,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11817,"byte_end":11824,"line_start":378,"line_end":378,"column_start":10,"column_end":17},"name":"execute","qualname":"<StateMachine>::execute","value":"pub fn execute(&mut Self, ExecutionStrategy)\n-> Result<Vec<u8>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Execute a call using the given state backend, overlayed changes, and call executor.","sig":null,"attributes":[{"value":"/ Execute a call using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11394,"byte_end":11481,"line_start":370,"line_end":370,"column_start":3,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11484,"byte_end":11487,"line_start":371,"line_end":371,"column_start":3,"column_end":6}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11490,"byte_end":11557,"line_start":372,"line_end":372,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11560,"byte_end":11563,"line_start":373,"line_end":373,"column_start":3,"column_end":6}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11566,"byte_end":11656,"line_start":374,"line_end":374,"column_start":3,"column_end":93}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11659,"byte_end":11736,"line_start":375,"line_end":375,"column_start":3,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11739,"byte_end":11742,"line_start":376,"line_end":376,"column_start":3,"column_end":6}},{"value":"/ Returns the SCALE encoded result of the executed function.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":11745,"byte_end":11807,"line_start":377,"line_end":377,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15745,"byte_end":15784,"line_start":519,"line_end":519,"column_start":10,"column_end":49},"name":"execute_using_consensus_failure_handler","qualname":"<StateMachine>::execute_using_consensus_failure_handler","value":"pub fn execute_using_consensus_failure_handler<Handler, R,\n                                               NC>(&mut Self,\n                                                   ExecutionManager<Handler>,\n                                                   Option<NC>)\n-> Result<NativeOrEncoded<R>, Box<dyn Error>> where R: Decode + Encode +\nPartialEq, NC: FnOnce() ->\nresult::Result<R, Box<dyn std::error::Error + Send + Sync>> + UnwindSafe,\nHandler: FnOnce(CallResult<R, Exec::Error>, CallResult<R, Exec::Error>) ->\nCallResult<R, Exec::Error>","parent":null,"children":[],"decl_id":null,"docs":" Execute a call using the given state backend, overlayed changes, and call executor.","sig":null,"attributes":[{"value":"/ Execute a call using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15259,"byte_end":15346,"line_start":510,"line_end":510,"column_start":3,"column_end":90}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15349,"byte_end":15352,"line_start":511,"line_end":511,"column_start":3,"column_end":6}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15355,"byte_end":15422,"line_start":512,"line_end":512,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15425,"byte_end":15428,"line_start":513,"line_end":513,"column_start":3,"column_end":6}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15431,"byte_end":15521,"line_start":514,"line_end":514,"column_start":3,"column_end":93}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15524,"byte_end":15601,"line_start":515,"line_end":515,"column_start":3,"column_end":80}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15604,"byte_end":15607,"line_start":516,"line_end":516,"column_start":3,"column_end":6}},{"value":"/ Returns the result of the executed function either in native representation `R` or","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15610,"byte_end":15696,"line_start":517,"line_end":517,"column_start":3,"column_end":89}},{"value":"/ in SCALE encoded representation.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":15699,"byte_end":15735,"line_start":518,"line_end":518,"column_start":3,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2926},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":17234,"byte_end":17249,"line_start":566,"line_end":566,"column_start":9,"column_end":24},"name":"prove_execution","qualname":"::execution::prove_execution","value":"pub fn prove_execution<B, H, N, Exec,\n                       Spawn>(B, &mut OverlayedChanges, &Exec, Spawn, &str,\n                              &[u8], &RuntimeCode)\n-> Result<(Vec<u8>, StorageProof), Box<dyn Error>> where B: Backend<H>,\nH: Hasher, H::Out: Ord + 'static + codec::Codec, Exec: CodeExecutor + Clone +\n'static, N: crate::changes_trie::BlockNumber, Spawn: SpawnNamed + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Prove execution using the given state backend, overlayed changes, and call executor.\n","sig":null,"attributes":[{"value":"/ Prove execution using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":17137,"byte_end":17225,"line_start":565,"line_end":565,"column_start":2,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":2933},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18539,"byte_end":18570,"line_start":605,"line_end":605,"column_start":9,"column_end":40},"name":"prove_execution_on_trie_backend","qualname":"::execution::prove_execution_on_trie_backend","value":"pub fn prove_execution_on_trie_backend<S, H, N, Exec,\n                                       Spawn>(&TrieBackend<S, H>,\n                                              &mut OverlayedChanges, &Exec,\n                                              Spawn, &str, &[u8],\n                                              &RuntimeCode)\n-> Result<(Vec<u8>, StorageProof), Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord +\n'static + codec::Codec, Exec: CodeExecutor + 'static + Clone,\nN: crate::changes_trie::BlockNumber, Spawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Prove execution using the given trie backend, overlayed changes, and call executor.\n Produces a state-backend-specific \"transaction\" which can be used to apply the changes\n to the backing store, such as the disk.\n Execution proof is the set of all 'touched' storage DBValues from the backend.","sig":null,"attributes":[{"value":"/ Prove execution using the given trie backend, overlayed changes, and call executor.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":17972,"byte_end":18059,"line_start":596,"line_end":596,"column_start":2,"column_end":89}},{"value":"/ Produces a state-backend-specific \"transaction\" which can be used to apply the changes","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18061,"byte_end":18151,"line_start":597,"line_end":597,"column_start":2,"column_end":92}},{"value":"/ to the backing store, such as the disk.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18153,"byte_end":18196,"line_start":598,"line_end":598,"column_start":2,"column_end":45}},{"value":"/ Execution proof is the set of all 'touched' storage DBValues from the backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18198,"byte_end":18280,"line_start":599,"line_end":599,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18282,"byte_end":18285,"line_start":600,"line_end":600,"column_start":2,"column_end":5}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18287,"byte_end":18354,"line_start":601,"line_end":601,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18356,"byte_end":18359,"line_start":602,"line_end":602,"column_start":2,"column_end":5}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18361,"byte_end":18451,"line_start":603,"line_end":603,"column_start":2,"column_end":92}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":18453,"byte_end":18530,"line_start":604,"line_end":604,"column_start":2,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":2939},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":19603,"byte_end":19624,"line_start":644,"line_end":644,"column_start":9,"column_end":30},"name":"execution_proof_check","qualname":"::execution::execution_proof_check","value":"pub fn execution_proof_check<H, N, Exec,\n                             Spawn>(H::Out, StorageProof,\n                                    &mut OverlayedChanges, &Exec, Spawn, &str,\n                                    &[u8], &RuntimeCode)\n-> Result<Vec<u8>, Box<dyn Error>> where H: Hasher, Exec: CodeExecutor +\nClone + 'static, H::Out: Ord + 'static + codec::Codec,\nN: crate::changes_trie::BlockNumber, Spawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Check execution proof, generated by `prove_execution` call.\n","sig":null,"attributes":[{"value":"/ Check execution proof, generated by `prove_execution` call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":19531,"byte_end":19594,"line_start":643,"line_end":643,"column_start":2,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":20368,"byte_end":20405,"line_start":674,"line_end":674,"column_start":9,"column_end":46},"name":"execution_proof_check_on_trie_backend","qualname":"::execution::execution_proof_check_on_trie_backend","value":"pub fn execution_proof_check_on_trie_backend<H, N, Exec,\n                                             Spawn>(&TrieBackend<MemoryDB<H>,\n                                                                 H>,\n                                                    &mut OverlayedChanges,\n                                                    &Exec, Spawn, &str, &[u8],\n                                                    &RuntimeCode)\n-> Result<Vec<u8>, Box<dyn Error>> where H: Hasher, H::Out: Ord + 'static +\ncodec::Codec, Exec: CodeExecutor + Clone + 'static,\nN: crate::changes_trie::BlockNumber, Spawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Check execution proof on proving backend, generated by `prove_execution` call.\n","sig":null,"attributes":[{"value":"/ Check execution proof on proving backend, generated by `prove_execution` call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":20277,"byte_end":20359,"line_start":673,"line_end":673,"column_start":2,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":2949},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":21219,"byte_end":21229,"line_start":709,"line_end":709,"column_start":9,"column_end":19},"name":"prove_read","qualname":"::execution::prove_read","value":"pub fn prove_read<B, H, I>(B, I) -> Result<StorageProof, Box<dyn Error>> where\nB: Backend<H>, H: Hasher, H::Out: Ord + Codec, I: IntoIterator,\nI::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":21178,"byte_end":21210,"line_start":708,"line_end":708,"column_start":2,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":2954},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":21662,"byte_end":21678,"line_start":728,"line_end":728,"column_start":9,"column_end":25},"name":"prove_child_read","qualname":"::execution::prove_child_read","value":"pub fn prove_child_read<B, H, I>(B, &ChildInfo, I)\n-> Result<StorageProof, Box<dyn Error>> where B: Backend<H>, H: Hasher,\nH::Out: Ord + Codec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate child storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate child storage read proof.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":21615,"byte_end":21653,"line_start":727,"line_end":727,"column_start":2,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2959},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":22168,"byte_end":22194,"line_start":746,"line_end":746,"column_start":9,"column_end":35},"name":"prove_read_on_trie_backend","qualname":"::execution::prove_read_on_trie_backend","value":"pub fn prove_read_on_trie_backend<S, H, I>(&TrieBackend<S, H>, I)\n-> Result<StorageProof, Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord +\nCodec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof on pre-created trie backend.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof on pre-created trie backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":22099,"byte_end":22159,"line_start":745,"line_end":745,"column_start":2,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2964},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":22762,"byte_end":22794,"line_start":767,"line_end":767,"column_start":9,"column_end":41},"name":"prove_child_read_on_trie_backend","qualname":"::execution::prove_child_read_on_trie_backend","value":"pub fn prove_child_read_on_trie_backend<S, H,\n                                        I>(&TrieBackend<S, H>, &ChildInfo, I)\n-> Result<StorageProof, Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord +\nCodec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof on pre-created trie backend.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof on pre-created trie backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":22693,"byte_end":22753,"line_start":766,"line_end":766,"column_start":2,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2969},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":23407,"byte_end":23423,"line_start":789,"line_end":789,"column_start":9,"column_end":25},"name":"read_proof_check","qualname":"::execution::read_proof_check","value":"pub fn read_proof_check<H, I>(H::Out, StorageProof, I)\n-> Result<HashMap<Vec<u8>, Option<Vec<u8>>>, Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Check storage read proof, generated by `prove_read` call.\n","sig":null,"attributes":[{"value":"/ Check storage read proof, generated by `prove_read` call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":23337,"byte_end":23398,"line_start":788,"line_end":788,"column_start":2,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":2972},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":24009,"byte_end":24031,"line_start":810,"line_end":810,"column_start":9,"column_end":31},"name":"read_child_proof_check","qualname":"::execution::read_child_proof_check","value":"pub fn read_child_proof_check<H, I>(H::Out, StorageProof, &ChildInfo, I)\n-> Result<HashMap<Vec<u8>, Option<Vec<u8>>>, Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Check child storage read proof, generated by `prove_child_read` call.\n","sig":null,"attributes":[{"value":"/ Check child storage read proof, generated by `prove_child_read` call.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":23927,"byte_end":24000,"line_start":809,"line_end":809,"column_start":2,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":2975},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":24666,"byte_end":24701,"line_start":836,"line_end":836,"column_start":9,"column_end":44},"name":"read_proof_check_on_proving_backend","qualname":"::execution::read_proof_check_on_proving_backend","value":"pub fn read_proof_check_on_proving_backend<H>(&TrieBackend<MemoryDB<H>, H>,\n                                              &[u8])\n-> Result<Option<Vec<u8>>, Box<dyn Error>> where H: Hasher, H::Out: Ord +\nCodec","parent":null,"children":[],"decl_id":null,"docs":" Check storage read proof on pre-created proving backend.\n","sig":null,"attributes":[{"value":"/ Check storage read proof on pre-created proving backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":24597,"byte_end":24657,"line_start":835,"line_end":835,"column_start":2,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2978},"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":25015,"byte_end":25056,"line_start":848,"line_end":848,"column_start":9,"column_end":50},"name":"read_child_proof_check_on_proving_backend","qualname":"::execution::read_child_proof_check_on_proving_backend","value":"pub fn read_child_proof_check_on_proving_backend<H>(&TrieBackend<MemoryDB<H>,\n                                                                 H>,\n                                                    &ChildInfo, &[u8])\n-> Result<Option<Vec<u8>>, Box<dyn Error>> where H: Hasher, H::Out: Ord +\nCodec","parent":null,"children":[],"decl_id":null,"docs":" Check child storage read proof on pre-created proving backend.\n","sig":null,"attributes":[{"value":"/ Check child storage read proof on pre-created proving backend.","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":24940,"byte_end":25006,"line_start":847,"line_end":847,"column_start":2,"column_end":68}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54316,"byte_end":54319,"line_start":347,"line_end":347,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54519,"byte_end":54534,"line_start":356,"line_end":356,"column_start":71,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55518,"byte_end":55536,"line_start":394,"line_end":394,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55768,"byte_end":55786,"line_start":402,"line_end":402,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57690,"byte_end":57701,"line_start":38,"line_end":38,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59157,"byte_end":59168,"line_start":92,"line_end":92,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59348,"byte_end":59359,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59541,"byte_end":59552,"line_start":111,"line_end":111,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59888,"byte_end":59899,"line_start":124,"line_end":124,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":60274,"byte_end":60285,"line_start":136,"line_end":136,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":60558,"byte_end":60569,"line_start":148,"line_end":148,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109325,"byte_end":109335,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":110870,"byte_end":110891,"line_start":136,"line_end":136,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":112439,"byte_end":112464,"line_start":180,"line_end":180,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":117665,"byte_end":117684,"line_start":70,"line_end":70,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":118162,"byte_end":118181,"line_start":91,"line_end":91,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":119710,"byte_end":119721,"line_start":144,"line_end":144,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":119897,"byte_end":119908,"line_start":154,"line_end":154,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":134357,"byte_end":134381,"line_start":208,"line_end":208,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":138255,"byte_end":138272,"line_start":321,"line_end":321,"column_start":55,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":138793,"byte_end":138817,"line_start":343,"line_end":343,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":139176,"byte_end":139200,"line_start":359,"line_end":359,"column_start":34,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":151437,"byte_end":151446,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":151797,"byte_end":151806,"line_start":97,"line_end":97,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152163,"byte_end":152172,"line_start":107,"line_end":107,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152470,"byte_end":152484,"line_start":117,"line_end":117,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152663,"byte_end":152677,"line_start":125,"line_end":125,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152878,"byte_end":152892,"line_start":133,"line_end":133,"column_start":49,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152931,"byte_end":152942,"line_start":135,"line_end":135,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153122,"byte_end":153133,"line_start":144,"line_end":144,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153312,"byte_end":153322,"line_start":152,"line_end":152,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153501,"byte_end":153511,"line_start":160,"line_end":160,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153720,"byte_end":153731,"line_start":168,"line_end":168,"column_start":49,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153781,"byte_end":153789,"line_start":170,"line_end":170,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163127,"byte_end":163142,"line_start":54,"line_end":54,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":166045,"byte_end":166060,"line_start":166,"line_end":166,"column_start":66,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":166634,"byte_end":166649,"line_start":179,"line_end":179,"column_start":61,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":167127,"byte_end":167145,"line_start":197,"line_end":197,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":167322,"byte_end":167340,"line_start":203,"line_end":203,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/surface_iterator.rs","byte_start":170105,"byte_end":170120,"line_start":70,"line_end":70,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66430,"byte_end":66431,"line_start":104,"line_end":104,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69077,"byte_end":69102,"line_start":167,"line_end":167,"column_start":70,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69783,"byte_end":69788,"line_start":189,"line_end":189,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":70049,"byte_end":70054,"line_start":204,"line_end":204,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177830,"byte_end":177831,"line_start":27,"line_end":27,"column_start":70,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":181024,"byte_end":181029,"line_start":73,"line_end":73,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":181346,"byte_end":181351,"line_start":83,"line_end":83,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182337,"byte_end":182340,"line_start":118,"line_end":118,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":184153,"byte_end":184156,"line_start":189,"line_end":189,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1194},{"krate":0,"index":1199},{"krate":0,"index":1203},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":198246,"byte_end":198263,"line_start":724,"line_end":724,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":198479,"byte_end":198492,"line_start":733,"line_end":733,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":199882,"byte_end":199885,"line_start":789,"line_end":789,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211911,"byte_end":211928,"line_start":64,"line_end":64,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216559,"byte_end":216576,"line_start":216,"line_end":216,"column_start":64,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216829,"byte_end":216846,"line_start":224,"line_end":224,"column_start":58,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":217172,"byte_end":217189,"line_start":235,"line_end":235,"column_start":56,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":217365,"byte_end":217382,"line_start":242,"line_end":242,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":217550,"byte_end":217567,"line_start":251,"line_end":251,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":221946,"byte_end":221964,"line_start":45,"line_end":45,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223553,"byte_end":223571,"line_start":106,"line_end":106,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223788,"byte_end":223806,"line_start":113,"line_end":113,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223978,"byte_end":223996,"line_start":121,"line_end":121,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":224108,"byte_end":224126,"line_start":125,"line_end":125,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":224370,"byte_end":224388,"line_start":137,"line_end":137,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":230091,"byte_end":230109,"line_start":337,"line_end":337,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":272108,"byte_end":272122,"line_start":83,"line_end":83,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273407,"byte_end":273419,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273636,"byte_end":273649,"line_start":125,"line_end":125,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273705,"byte_end":273719,"line_start":131,"line_end":131,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275396,"byte_end":275410,"line_start":189,"line_end":189,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275925,"byte_end":275937,"line_start":204,"line_end":204,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282447,"byte_end":282465,"line_start":387,"line_end":387,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":298880,"byte_end":298904,"line_start":37,"line_end":37,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235709,"byte_end":235719,"line_start":76,"line_end":76,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238850,"byte_end":238864,"line_start":170,"line_end":170,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":240447,"byte_end":240470,"line_start":212,"line_end":212,"column_start":46,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":240645,"byte_end":240668,"line_start":219,"line_end":219,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241053,"byte_end":241067,"line_start":234,"line_end":234,"column_start":67,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241561,"byte_end":241577,"line_start":252,"line_end":252,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1896},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1916},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":259082,"byte_end":259101,"line_start":753,"line_end":753,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303319,"byte_end":303341,"line_start":41,"line_end":41,"column_start":16,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305536,"byte_end":305549,"line_start":126,"line_end":126,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307398,"byte_end":307412,"line_start":188,"line_end":188,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308286,"byte_end":308306,"line_start":218,"line_end":218,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308725,"byte_end":308739,"line_start":234,"line_end":234,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308888,"byte_end":308902,"line_start":241,"line_end":241,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318787,"byte_end":318798,"line_start":37,"line_end":37,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319602,"byte_end":319613,"line_start":71,"line_end":71,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319788,"byte_end":319799,"line_start":77,"line_end":77,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329120,"byte_end":329138,"line_start":56,"line_end":56,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2400},{"krate":0,"index":2403},{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":335803,"byte_end":335812,"line_start":285,"line_end":285,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":336054,"byte_end":336063,"line_start":291,"line_end":291,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":336275,"byte_end":336284,"line_start":301,"line_end":301,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337197,"byte_end":337206,"line_start":335,"line_end":335,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337904,"byte_end":337907,"line_start":356,"line_end":356,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338194,"byte_end":338210,"line_start":365,"line_end":365,"column_start":43,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338422,"byte_end":338430,"line_start":373,"line_end":373,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338669,"byte_end":338687,"line_start":382,"line_end":382,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338954,"byte_end":338972,"line_start":389,"line_end":389,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":339725,"byte_end":339743,"line_start":422,"line_end":422,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344641,"byte_end":344658,"line_start":81,"line_end":81,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345066,"byte_end":345075,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2492},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345966,"byte_end":345983,"line_start":120,"line_end":120,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347819,"byte_end":347820,"line_start":45,"line_end":45,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348282,"byte_end":348303,"line_start":61,"line_end":61,"column_start":57,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348456,"byte_end":348477,"line_start":67,"line_end":67,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348799,"byte_end":348820,"line_start":76,"line_end":76,"column_start":59,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":352600,"byte_end":352621,"line_start":207,"line_end":207,"column_start":78,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7320,"byte_end":7337,"line_start":243,"line_end":243,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7707,"byte_end":7724,"line_start":254,"line_end":254,"column_start":7,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":9792,"byte_end":9804,"line_start":311,"line_end":311,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10001,"byte_end":10013,"line_start":321,"line_end":321,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2918},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":806,"byte_end":813,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":45355,"byte_end":45360,"line_start":38,"line_end":38,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54316,"byte_end":54319,"line_start":347,"line_end":347,"column_start":22,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":54519,"byte_end":54534,"line_start":356,"line_end":356,"column_start":71,"column_end":86},"kind":{"Impl":{"id":1}},"from":{"krate":171,"index":380},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55518,"byte_end":55536,"line_start":394,"line_end":394,"column_start":2,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":147},"to":{"krate":26,"index":2123}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/backend.rs","byte_start":55768,"byte_end":55786,"line_start":402,"line_end":402,"column_start":36,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":57690,"byte_end":57701,"line_start":38,"line_end":38,"column_start":17,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59157,"byte_end":59168,"line_start":92,"line_end":92,"column_start":27,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59348,"byte_end":59359,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59541,"byte_end":59552,"line_start":111,"line_end":111,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":59888,"byte_end":59899,"line_start":124,"line_end":124,"column_start":35,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":60274,"byte_end":60285,"line_start":136,"line_end":136,"column_start":62,"column_end":73},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/in_memory_backend.rs","byte_start":60558,"byte_end":60569,"line_start":148,"line_end":148,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":109325,"byte_end":109335,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":110870,"byte_end":110891,"line_start":136,"line_end":136,"column_start":9,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":112439,"byte_end":112464,"line_start":180,"line_end":180,"column_start":9,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":117665,"byte_end":117684,"line_start":70,"line_end":70,"column_start":27,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":118162,"byte_end":118181,"line_start":91,"line_end":91,"column_start":40,"column_end":59},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3049},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":119710,"byte_end":119721,"line_start":144,"line_end":144,"column_start":27,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":119897,"byte_end":119908,"line_start":154,"line_end":154,"column_start":40,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3062},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":134357,"byte_end":134381,"line_start":208,"line_end":208,"column_start":21,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":138255,"byte_end":138272,"line_start":321,"line_end":321,"column_start":55,"column_end":72},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":138793,"byte_end":138817,"line_start":343,"line_end":343,"column_start":21,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":139176,"byte_end":139200,"line_start":359,"line_end":359,"column_start":34,"column_end":58},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":151437,"byte_end":151446,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":151797,"byte_end":151806,"line_start":97,"line_end":97,"column_start":64,"column_end":73},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3139},"to":{"krate":2,"index":2756}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152163,"byte_end":152172,"line_start":107,"line_end":107,"column_start":54,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3139},"to":{"krate":2,"index":2756}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152470,"byte_end":152484,"line_start":117,"line_end":117,"column_start":27,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152663,"byte_end":152677,"line_start":125,"line_end":125,"column_start":38,"column_end":52},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3070},"to":{"krate":20,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152878,"byte_end":152892,"line_start":133,"line_end":133,"column_start":49,"column_end":63},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3070},"to":{"krate":20,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":152931,"byte_end":152942,"line_start":135,"line_end":135,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153122,"byte_end":153133,"line_start":144,"line_end":144,"column_start":38,"column_end":49},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3091},"to":{"krate":20,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153312,"byte_end":153322,"line_start":152,"line_end":152,"column_start":27,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153501,"byte_end":153511,"line_start":160,"line_end":160,"column_start":38,"column_end":48},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3112},"to":{"krate":20,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153720,"byte_end":153731,"line_start":168,"line_end":168,"column_start":49,"column_end":60},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3091},"to":{"krate":20,"index":861}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/input.rs","byte_start":153781,"byte_end":153789,"line_start":170,"line_end":170,"column_start":38,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3170},"to":{"krate":20,"index":213}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":163127,"byte_end":163142,"line_start":54,"line_end":54,"column_start":38,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":166045,"byte_end":166060,"line_start":166,"line_end":166,"column_start":66,"column_end":81},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":991}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":166634,"byte_end":166649,"line_start":179,"line_end":179,"column_start":61,"column_end":76},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":996}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":167127,"byte_end":167145,"line_start":197,"line_end":197,"column_start":42,"column_end":60},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/storage.rs","byte_start":167322,"byte_end":167340,"line_start":203,"line_end":203,"column_start":47,"column_end":65},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":800},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/surface_iterator.rs","byte_start":170105,"byte_end":170120,"line_start":70,"line_end":70,"column_start":44,"column_end":59},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":65990,"byte_end":65994,"line_start":90,"line_end":90,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":65997,"byte_end":66001,"line_start":90,"line_end":90,"column_start":9,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66025,"byte_end":66032,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":8894},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66036,"byte_end":66041,"line_start":92,"line_end":92,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66045,"byte_end":66049,"line_start":93,"line_end":93,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2759},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66057,"byte_end":66064,"line_start":93,"line_end":93,"column_start":14,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2762},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66072,"byte_end":66075,"line_start":93,"line_end":93,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":38,"index":507},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66078,"byte_end":66082,"line_start":93,"line_end":93,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":38,"index":497},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66086,"byte_end":66095,"line_start":94,"line_end":94,"column_start":2,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66098,"byte_end":66101,"line_start":94,"line_end":94,"column_start":14,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2540},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66116,"byte_end":66120,"line_start":95,"line_end":95,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":9093},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66134,"byte_end":66137,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66171,"byte_end":66174,"line_start":96,"line_end":96,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2925},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66207,"byte_end":66210,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66244,"byte_end":66247,"line_start":97,"line_end":97,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2935},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66280,"byte_end":66283,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2941},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66316,"byte_end":66325,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66347,"byte_end":66357,"line_start":100,"line_end":100,"column_start":14,"column_end":24},"kind":"SuperTrait","from":{"krate":38,"index":601},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66372,"byte_end":66382,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"kind":"SuperTrait","from":{"krate":38,"index":599},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66386,"byte_end":66392,"line_start":101,"line_end":101,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":20,"index":213},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66395,"byte_end":66401,"line_start":101,"line_end":101,"column_start":11,"column_end":17},"kind":"SuperTrait","from":{"krate":20,"index":195},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":66430,"byte_end":66431,"line_start":104,"line_end":104,"column_start":25,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":983},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67739,"byte_end":67743,"line_start":141,"line_end":141,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":991}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":67746,"byte_end":67750,"line_start":141,"line_end":141,"column_start":64,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":991}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":68281,"byte_end":68293,"line_start":150,"line_end":150,"column_start":52,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":991},"to":{"krate":0,"index":996}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69077,"byte_end":69102,"line_start":167,"line_end":167,"column_start":70,"column_end":95},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":69783,"byte_end":69788,"line_start":189,"line_end":189,"column_start":21,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/changes_trie/mod.rs","byte_start":70049,"byte_end":70054,"line_start":204,"line_end":204,"column_start":38,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177722,"byte_end":177727,"line_start":25,"line_end":25,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177735,"byte_end":177742,"line_start":25,"line_end":25,"column_start":46,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":8894},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177745,"byte_end":177749,"line_start":25,"line_end":25,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177752,"byte_end":177756,"line_start":25,"line_end":25,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/error.rs","byte_start":177830,"byte_end":177831,"line_start":27,"line_end":27,"column_start":70,"column_end":71},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1047},"to":{"krate":0,"index":1045}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":181024,"byte_end":181029,"line_start":73,"line_end":73,"column_start":57,"column_end":62},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3239},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":181346,"byte_end":181351,"line_start":83,"line_end":83,"column_start":57,"column_end":62},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3239},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":182337,"byte_end":182340,"line_start":118,"line_end":118,"column_start":19,"column_end":22},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":184153,"byte_end":184156,"line_start":189,"line_end":189,"column_start":37,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1165},"to":{"krate":72,"index":95}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":198246,"byte_end":198263,"line_start":724,"line_end":724,"column_start":17,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1248},"to":{"krate":20,"index":195}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":198479,"byte_end":198492,"line_start":733,"line_end":733,"column_start":10,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/ext.rs","byte_start":199882,"byte_end":199885,"line_start":789,"line_end":789,"column_start":38,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1165},"to":{"krate":72,"index":69}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":211911,"byte_end":211928,"line_start":64,"line_end":64,"column_start":44,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216559,"byte_end":216576,"line_start":216,"line_end":216,"column_start":64,"column_end":81},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":216829,"byte_end":216846,"line_start":224,"line_end":224,"column_start":58,"column_end":75},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":217172,"byte_end":217189,"line_start":235,"line_end":235,"column_start":56,"column_end":73},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":217365,"byte_end":217382,"line_start":242,"line_end":242,"column_start":62,"column_end":79},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/testing.rs","byte_start":217550,"byte_end":217567,"line_start":251,"line_end":251,"column_start":49,"column_end":66},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1367},"to":{"krate":72,"index":69}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":221946,"byte_end":221964,"line_start":45,"line_end":45,"column_start":6,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223553,"byte_end":223571,"line_start":106,"line_end":106,"column_start":20,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223788,"byte_end":223806,"line_start":113,"line_end":113,"column_start":51,"column_end":69},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":223978,"byte_end":223996,"line_start":121,"line_end":121,"column_start":18,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":224108,"byte_end":224126,"line_start":125,"line_end":125,"column_start":51,"column_end":69},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":224370,"byte_end":224388,"line_start":137,"line_end":137,"column_start":24,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3261},"to":{"krate":72,"index":95}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/basic.rs","byte_start":230091,"byte_end":230109,"line_start":337,"line_end":337,"column_start":43,"column_end":61},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3261},"to":{"krate":72,"index":69}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":272108,"byte_end":272122,"line_start":83,"line_end":83,"column_start":21,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3301},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273407,"byte_end":273419,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273636,"byte_end":273649,"line_start":125,"line_end":125,"column_start":18,"column_end":31},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":273705,"byte_end":273719,"line_start":131,"line_end":131,"column_start":9,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275396,"byte_end":275410,"line_start":189,"line_end":189,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":275925,"byte_end":275937,"line_start":204,"line_end":204,"column_start":32,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":282447,"byte_end":282465,"line_start":387,"line_end":387,"column_start":6,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":298880,"byte_end":298904,"line_start":37,"line_end":37,"column_start":6,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":235709,"byte_end":235719,"line_start":76,"line_end":76,"column_start":6,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":238850,"byte_end":238864,"line_start":170,"line_end":170,"column_start":46,"column_end":60},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":240447,"byte_end":240470,"line_start":212,"line_end":212,"column_start":46,"column_end":69},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":240645,"byte_end":240668,"line_start":219,"line_end":219,"column_start":58,"column_end":81},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1820},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241053,"byte_end":241067,"line_start":234,"line_end":234,"column_start":67,"column_end":81},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1804},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":241561,"byte_end":241577,"line_start":252,"line_end":252,"column_start":6,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":259082,"byte_end":259101,"line_start":753,"line_end":753,"column_start":10,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":303319,"byte_end":303341,"line_start":41,"line_end":41,"column_start":16,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":305536,"byte_end":305549,"line_start":126,"line_end":126,"column_start":34,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":307398,"byte_end":307412,"line_start":188,"line_end":188,"column_start":57,"column_end":71},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308286,"byte_end":308306,"line_start":218,"line_end":218,"column_start":6,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308725,"byte_end":308739,"line_start":234,"line_end":234,"column_start":6,"column_end":20},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2083},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/proving_backend.rs","byte_start":308888,"byte_end":308902,"line_start":241,"line_end":241,"column_start":31,"column_end":45},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2083},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":318787,"byte_end":318798,"line_start":37,"line_end":37,"column_start":43,"column_end":54},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319602,"byte_end":319613,"line_start":71,"line_end":71,"column_start":66,"column_end":77},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2220},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend.rs","byte_start":319788,"byte_end":319799,"line_start":77,"line_end":77,"column_start":58,"column_end":69},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2220},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328803,"byte_end":328807,"line_start":44,"line_end":44,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":2362}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":328810,"byte_end":328814,"line_start":44,"line_end":44,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":2362}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":329120,"byte_end":329138,"line_start":56,"line_end":56,"column_start":43,"column_end":61},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":335803,"byte_end":335812,"line_start":285,"line_end":285,"column_start":6,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2408},"to":{"krate":19,"index":69}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":336054,"byte_end":336063,"line_start":291,"line_end":291,"column_start":47,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":336275,"byte_end":336284,"line_start":301,"line_end":301,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2408},"to":{"krate":19,"index":44}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337197,"byte_end":337206,"line_start":335,"line_end":335,"column_start":6,"column_end":15},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2408},"to":{"krate":19,"index":52}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337551,"byte_end":337555,"line_start":347,"line_end":347,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337558,"byte_end":337562,"line_start":347,"line_end":347,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":337904,"byte_end":337907,"line_start":356,"line_end":356,"column_start":43,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338194,"byte_end":338210,"line_start":365,"line_end":365,"column_start":43,"column_end":59},"kind":{"Impl":{"id":97}},"from":{"krate":171,"index":376},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338422,"byte_end":338430,"line_start":373,"line_end":373,"column_start":43,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":171,"index":378},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338669,"byte_end":338687,"line_start":382,"line_end":382,"column_start":6,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2365},"to":{"krate":19,"index":69}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":338954,"byte_end":338972,"line_start":389,"line_end":389,"column_start":6,"column_end":24},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2365},"to":{"krate":19,"index":44}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/trie_backend_essence.rs","byte_start":339725,"byte_end":339743,"line_start":422,"line_end":422,"column_start":6,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2365},"to":{"krate":19,"index":52}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":344641,"byte_end":344658,"line_start":81,"line_end":81,"column_start":6,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345066,"byte_end":345075,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/stats.rs","byte_start":345966,"byte_end":345983,"line_start":120,"line_end":120,"column_start":6,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":347819,"byte_end":347820,"line_start":45,"line_end":45,"column_start":55,"column_end":56},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2547},"to":{"krate":0,"index":2539}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348282,"byte_end":348303,"line_start":61,"line_end":61,"column_start":57,"column_end":78},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348456,"byte_end":348477,"line_start":67,"line_end":67,"column_start":41,"column_end":62},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":348799,"byte_end":348820,"line_start":76,"line_end":76,"column_start":59,"column_end":80},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3426},"to":{"krate":72,"index":95}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/read_only.rs","byte_start":352600,"byte_end":352621,"line_start":207,"line_end":207,"column_start":78,"column_end":99},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3426},"to":{"krate":72,"index":69}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7320,"byte_end":7337,"line_start":243,"line_end":243,"column_start":48,"column_end":65},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3437},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":7707,"byte_end":7724,"line_start":254,"line_end":254,"column_start":7,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":9792,"byte_end":9804,"line_start":311,"line_end":311,"column_start":35,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2878},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/shuang/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/state-machine/src/lib.rs","byte_start":10001,"byte_end":10013,"line_start":321,"line_end":321,"column_start":26,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2878},"to":{"krate":4294967295,"index":4294967295}}]}